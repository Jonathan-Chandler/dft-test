!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ALAPI	.\OpenAL 1.1 SDK\include\al.h	34;"	d
ALAPI	.\inc\openal\al.h	34;"	d
ALAPIENTRY	.\OpenAL 1.1 SDK\include\al.h	35;"	d
ALAPIENTRY	.\inc\openal\al.h	35;"	d
ALCAPI	.\OpenAL 1.1 SDK\include\alc.h	37;"	d
ALCAPI	.\inc\openal\alc.h	37;"	d
ALCAPIENTRY	.\OpenAL 1.1 SDK\include\alc.h	38;"	d
ALCAPIENTRY	.\inc\openal\alc.h	38;"	d
ALC_ALL_ATTRIBUTES	.\OpenAL 1.1 SDK\include\alc.h	167;"	d
ALC_ALL_ATTRIBUTES	.\inc\openal\alc.h	167;"	d
ALC_ALL_DEVICES_SPECIFIER	.\OpenAL 1.1 SDK\include\alc.h	173;"	d
ALC_ALL_DEVICES_SPECIFIER	.\inc\openal\alc.h	173;"	d
ALC_API	.\OpenAL 1.1 SDK\include\alc.h	11;"	d
ALC_API	.\OpenAL 1.1 SDK\include\alc.h	13;"	d
ALC_API	.\OpenAL 1.1 SDK\include\alc.h	17;"	d
ALC_API	.\OpenAL 1.1 SDK\include\alc.h	19;"	d
ALC_API	.\inc\openal\alc.h	11;"	d
ALC_API	.\inc\openal\alc.h	13;"	d
ALC_API	.\inc\openal\alc.h	17;"	d
ALC_API	.\inc\openal\alc.h	19;"	d
ALC_APIENTRY	.\OpenAL 1.1 SDK\include\alc.h	24;"	d
ALC_APIENTRY	.\OpenAL 1.1 SDK\include\alc.h	26;"	d
ALC_APIENTRY	.\inc\openal\alc.h	24;"	d
ALC_APIENTRY	.\inc\openal\alc.h	26;"	d
ALC_ATTRIBUTES_SIZE	.\OpenAL 1.1 SDK\include\alc.h	166;"	d
ALC_ATTRIBUTES_SIZE	.\inc\openal\alc.h	166;"	d
ALC_CAPTURE_DEFAULT_DEVICE_SPECIFIER	.\OpenAL 1.1 SDK\include\alc.h	179;"	d
ALC_CAPTURE_DEFAULT_DEVICE_SPECIFIER	.\inc\openal\alc.h	179;"	d
ALC_CAPTURE_DEVICE_SPECIFIER	.\OpenAL 1.1 SDK\include\alc.h	178;"	d
ALC_CAPTURE_DEVICE_SPECIFIER	.\inc\openal\alc.h	178;"	d
ALC_CAPTURE_SAMPLES	.\OpenAL 1.1 SDK\include\alc.h	180;"	d
ALC_CAPTURE_SAMPLES	.\inc\openal\alc.h	180;"	d
ALC_DEFAULT_ALL_DEVICES_SPECIFIER	.\OpenAL 1.1 SDK\include\alc.h	172;"	d
ALC_DEFAULT_ALL_DEVICES_SPECIFIER	.\inc\openal\alc.h	172;"	d
ALC_DEFAULT_DEVICE_SPECIFIER	.\OpenAL 1.1 SDK\include\alc.h	159;"	d
ALC_DEFAULT_DEVICE_SPECIFIER	.\inc\openal\alc.h	159;"	d
ALC_DEVICE_SPECIFIER	.\OpenAL 1.1 SDK\include\alc.h	160;"	d
ALC_DEVICE_SPECIFIER	.\inc\openal\alc.h	160;"	d
ALC_EFX_MAJOR_VERSION	.\OpenAL 1.1 SDK\include\efx.h	16;"	d
ALC_EFX_MAJOR_VERSION	.\inc\openal\efx.h	16;"	d
ALC_EFX_MINOR_VERSION	.\OpenAL 1.1 SDK\include\efx.h	17;"	d
ALC_EFX_MINOR_VERSION	.\inc\openal\efx.h	17;"	d
ALC_EXTENSIONS	.\OpenAL 1.1 SDK\include\alc.h	161;"	d
ALC_EXTENSIONS	.\inc\openal\alc.h	161;"	d
ALC_EXT_EFX_NAME	.\OpenAL 1.1 SDK\include\efx.h	9;"	d
ALC_EXT_EFX_NAME	.\inc\openal\efx.h	9;"	d
ALC_FALSE	.\OpenAL 1.1 SDK\include\alc.h	91;"	d
ALC_FALSE	.\inc\openal\alc.h	91;"	d
ALC_FREQUENCY	.\OpenAL 1.1 SDK\include\alc.h	99;"	d
ALC_FREQUENCY	.\inc\openal\alc.h	99;"	d
ALC_INVALID	.\OpenAL 1.1 SDK\include\alc.h	39;"	d
ALC_INVALID	.\inc\openal\alc.h	39;"	d
ALC_INVALID_CONTEXT	.\OpenAL 1.1 SDK\include\alc.h	138;"	d
ALC_INVALID_CONTEXT	.\inc\openal\alc.h	138;"	d
ALC_INVALID_DEVICE	.\OpenAL 1.1 SDK\include\alc.h	133;"	d
ALC_INVALID_DEVICE	.\inc\openal\alc.h	133;"	d
ALC_INVALID_ENUM	.\OpenAL 1.1 SDK\include\alc.h	143;"	d
ALC_INVALID_ENUM	.\inc\openal\alc.h	143;"	d
ALC_INVALID_VALUE	.\OpenAL 1.1 SDK\include\alc.h	148;"	d
ALC_INVALID_VALUE	.\inc\openal\alc.h	148;"	d
ALC_MAJOR_VERSION	.\OpenAL 1.1 SDK\include\alc.h	163;"	d
ALC_MAJOR_VERSION	.\inc\openal\alc.h	163;"	d
ALC_MAX_AUXILIARY_SENDS	.\OpenAL 1.1 SDK\include\efx.h	18;"	d
ALC_MAX_AUXILIARY_SENDS	.\inc\openal\efx.h	18;"	d
ALC_MINOR_VERSION	.\OpenAL 1.1 SDK\include\alc.h	164;"	d
ALC_MINOR_VERSION	.\inc\openal\alc.h	164;"	d
ALC_MONO_SOURCES	.\OpenAL 1.1 SDK\include\alc.h	114;"	d
ALC_MONO_SOURCES	.\inc\openal\alc.h	114;"	d
ALC_NO_ERROR	.\OpenAL 1.1 SDK\include\alc.h	128;"	d
ALC_NO_ERROR	.\inc\openal\alc.h	128;"	d
ALC_OUT_OF_MEMORY	.\OpenAL 1.1 SDK\include\alc.h	153;"	d
ALC_OUT_OF_MEMORY	.\inc\openal\alc.h	153;"	d
ALC_REFRESH	.\OpenAL 1.1 SDK\include\alc.h	104;"	d
ALC_REFRESH	.\inc\openal\alc.h	104;"	d
ALC_STEREO_SOURCES	.\OpenAL 1.1 SDK\include\alc.h	119;"	d
ALC_STEREO_SOURCES	.\inc\openal\alc.h	119;"	d
ALC_SYNC	.\OpenAL 1.1 SDK\include\alc.h	109;"	d
ALC_SYNC	.\inc\openal\alc.h	109;"	d
ALC_TRUE	.\OpenAL 1.1 SDK\include\alc.h	94;"	d
ALC_TRUE	.\inc\openal\alc.h	94;"	d
ALC_VERSION_0_1	.\OpenAL 1.1 SDK\include\alc.h	42;"	d
ALC_VERSION_0_1	.\inc\openal\alc.h	42;"	d
ALCboolean	.\OpenAL 1.1 SDK\include\alc.h	/^typedef char ALCboolean;$/;"	t
ALCboolean	.\inc\openal\alc.h	/^typedef char ALCboolean;$/;"	t
ALCbyte	.\OpenAL 1.1 SDK\include\alc.h	/^typedef char ALCbyte;$/;"	t
ALCbyte	.\inc\openal\alc.h	/^typedef char ALCbyte;$/;"	t
ALCchar	.\OpenAL 1.1 SDK\include\alc.h	/^typedef char ALCchar;$/;"	t
ALCchar	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	17;"	d
ALCchar	.\inc\openal\alc.h	/^typedef char ALCchar;$/;"	t
ALCcontext	.\OpenAL 1.1 SDK\include\alc.h	/^typedef struct ALCcontext_struct ALCcontext;$/;"	t	typeref:struct:ALCcontext_struct
ALCcontext	.\inc\openal\alc.h	/^typedef struct ALCcontext_struct ALCcontext;$/;"	t	typeref:struct:ALCcontext_struct
ALCdevice	.\OpenAL 1.1 SDK\include\alc.h	/^typedef struct ALCdevice_struct ALCdevice;$/;"	t	typeref:struct:ALCdevice_struct
ALCdevice	.\inc\openal\alc.h	/^typedef struct ALCdevice_struct ALCdevice;$/;"	t	typeref:struct:ALCdevice_struct
ALCdouble	.\OpenAL 1.1 SDK\include\alc.h	/^typedef double ALCdouble;$/;"	t
ALCdouble	.\inc\openal\alc.h	/^typedef double ALCdouble;$/;"	t
ALCenum	.\OpenAL 1.1 SDK\include\alc.h	/^typedef int ALCenum;$/;"	t
ALCenum	.\inc\openal\alc.h	/^typedef int ALCenum;$/;"	t
ALCfloat	.\OpenAL 1.1 SDK\include\alc.h	/^typedef float ALCfloat;$/;"	t
ALCfloat	.\inc\openal\alc.h	/^typedef float ALCfloat;$/;"	t
ALCint	.\OpenAL 1.1 SDK\include\alc.h	/^typedef int ALCint;$/;"	t
ALCint	.\inc\openal\alc.h	/^typedef int ALCint;$/;"	t
ALCshort	.\OpenAL 1.1 SDK\include\alc.h	/^typedef short ALCshort;$/;"	t
ALCshort	.\inc\openal\alc.h	/^typedef short ALCshort;$/;"	t
ALCsizei	.\OpenAL 1.1 SDK\include\alc.h	/^typedef int ALCsizei;$/;"	t
ALCsizei	.\inc\openal\alc.h	/^typedef int ALCsizei;$/;"	t
ALCubyte	.\OpenAL 1.1 SDK\include\alc.h	/^typedef unsigned char ALCubyte;$/;"	t
ALCubyte	.\inc\openal\alc.h	/^typedef unsigned char ALCubyte;$/;"	t
ALCuint	.\OpenAL 1.1 SDK\include\alc.h	/^typedef unsigned int ALCuint;$/;"	t
ALCuint	.\inc\openal\alc.h	/^typedef unsigned int ALCuint;$/;"	t
ALCushort	.\OpenAL 1.1 SDK\include\alc.h	/^typedef unsigned short ALCushort;$/;"	t
ALCushort	.\inc\openal\alc.h	/^typedef unsigned short ALCushort;$/;"	t
ALCvoid	.\OpenAL 1.1 SDK\include\alc.h	/^typedef void ALCvoid;$/;"	t
ALCvoid	.\inc\openal\alc.h	/^typedef void ALCvoid;$/;"	t
ALDEVICEINFO	.\OpenAL 1.1 SDK\samples\framework\Win32\aldlist.h	/^} ALDEVICEINFO, *LPALDEVICEINFO;$/;"	t	typeref:struct:__anon4
ALDEVICELIST_H	.\OpenAL 1.1 SDK\samples\framework\Win32\aldlist.h	2;"	d
ALDeviceList	.\OpenAL 1.1 SDK\samples\framework\Win32\aldlist.cpp	/^ALDeviceList::ALDeviceList()$/;"	f	class:ALDeviceList
ALDeviceList	.\OpenAL 1.1 SDK\samples\framework\Win32\aldlist.h	/^class ALDeviceList$/;"	c
ALFWInit	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^void ALFWInit()$/;"	f
ALFWInitOpenAL	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^ALboolean ALFWInitOpenAL()$/;"	f
ALFWIsEFXSupported	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^ALboolean ALFWIsEFXSupported()$/;"	f
ALFWIsXRAMSupported	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^ALboolean ALFWIsXRAMSupported()$/;"	f
ALFWKeyPress	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^ALint ALFWKeyPress(void)$/;"	f
ALFWLoadWaveToBuffer	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^ALboolean ALFWLoadWaveToBuffer(const char *szWaveFile, ALuint uiBufferID, ALenum eXRAMBufferMode)$/;"	f
ALFWShutdown	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^void ALFWShutdown()$/;"	f
ALFWShutdownOpenAL	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^ALboolean ALFWShutdownOpenAL()$/;"	f
ALFWaddMediaPath	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^ALchar *ALFWaddMediaPath(const ALchar *filename)$/;"	f
ALFWprintf	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^void ALFWprintf( const char* x, ... )$/;"	f
ALFunction	.\OpenAL 1.1 SDK\samples\enumerate\Source\enumerate.cpp	/^OPENALFNTABLE ALFunction;$/;"	v
ALFunction	.\OpenAL 1.1 SDK\samples\framework\Win32\aldlist.h	/^	OPENALFNTABLE	ALFunction;$/;"	m	class:ALDeviceList
AL_AIR_ABSORPTION_FACTOR	.\OpenAL 1.1 SDK\include\efx.h	40;"	d
AL_AIR_ABSORPTION_FACTOR	.\inc\openal\efx.h	40;"	d
AL_ALC_H	.\OpenAL 1.1 SDK\include\alc.h	2;"	d
AL_ALC_H	.\inc\openal\alc.h	2;"	d
AL_AL_H	.\OpenAL 1.1 SDK\include\al.h	2;"	d
AL_AL_H	.\inc\openal\al.h	2;"	d
AL_API	.\OpenAL 1.1 SDK\include\al.h	13;"	d
AL_API	.\OpenAL 1.1 SDK\include\al.h	15;"	d
AL_API	.\OpenAL 1.1 SDK\include\al.h	18;"	d
AL_API	.\inc\openal\al.h	13;"	d
AL_API	.\inc\openal\al.h	15;"	d
AL_API	.\inc\openal\al.h	18;"	d
AL_APIENTRY	.\OpenAL 1.1 SDK\include\al.h	22;"	d
AL_APIENTRY	.\OpenAL 1.1 SDK\include\al.h	24;"	d
AL_APIENTRY	.\inc\openal\al.h	22;"	d
AL_APIENTRY	.\inc\openal\al.h	24;"	d
AL_AUTOWAH_ATTACK_TIME	.\OpenAL 1.1 SDK\include\efx.h	125;"	d
AL_AUTOWAH_ATTACK_TIME	.\inc\openal\efx.h	125;"	d
AL_AUTOWAH_DEFAULT_ATTACK_TIME	.\OpenAL 1.1 SDK\include\efx.h	628;"	d
AL_AUTOWAH_DEFAULT_ATTACK_TIME	.\inc\openal\efx.h	628;"	d
AL_AUTOWAH_DEFAULT_PEAK_GAIN	.\OpenAL 1.1 SDK\include\efx.h	640;"	d
AL_AUTOWAH_DEFAULT_PEAK_GAIN	.\inc\openal\efx.h	640;"	d
AL_AUTOWAH_DEFAULT_RELEASE_TIME	.\OpenAL 1.1 SDK\include\efx.h	632;"	d
AL_AUTOWAH_DEFAULT_RELEASE_TIME	.\inc\openal\efx.h	632;"	d
AL_AUTOWAH_DEFAULT_RESONANCE	.\OpenAL 1.1 SDK\include\efx.h	636;"	d
AL_AUTOWAH_DEFAULT_RESONANCE	.\inc\openal\efx.h	636;"	d
AL_AUTOWAH_MAX_ATTACK_TIME	.\OpenAL 1.1 SDK\include\efx.h	627;"	d
AL_AUTOWAH_MAX_ATTACK_TIME	.\inc\openal\efx.h	627;"	d
AL_AUTOWAH_MAX_PEAK_GAIN	.\OpenAL 1.1 SDK\include\efx.h	639;"	d
AL_AUTOWAH_MAX_PEAK_GAIN	.\inc\openal\efx.h	639;"	d
AL_AUTOWAH_MAX_RELEASE_TIME	.\OpenAL 1.1 SDK\include\efx.h	631;"	d
AL_AUTOWAH_MAX_RELEASE_TIME	.\inc\openal\efx.h	631;"	d
AL_AUTOWAH_MAX_RESONANCE	.\OpenAL 1.1 SDK\include\efx.h	635;"	d
AL_AUTOWAH_MAX_RESONANCE	.\inc\openal\efx.h	635;"	d
AL_AUTOWAH_MIN_ATTACK_TIME	.\OpenAL 1.1 SDK\include\efx.h	626;"	d
AL_AUTOWAH_MIN_ATTACK_TIME	.\inc\openal\efx.h	626;"	d
AL_AUTOWAH_MIN_PEAK_GAIN	.\OpenAL 1.1 SDK\include\efx.h	638;"	d
AL_AUTOWAH_MIN_PEAK_GAIN	.\inc\openal\efx.h	638;"	d
AL_AUTOWAH_MIN_RELEASE_TIME	.\OpenAL 1.1 SDK\include\efx.h	630;"	d
AL_AUTOWAH_MIN_RELEASE_TIME	.\inc\openal\efx.h	630;"	d
AL_AUTOWAH_MIN_RESONANCE	.\OpenAL 1.1 SDK\include\efx.h	634;"	d
AL_AUTOWAH_MIN_RESONANCE	.\inc\openal\efx.h	634;"	d
AL_AUTOWAH_PEAK_GAIN	.\OpenAL 1.1 SDK\include\efx.h	128;"	d
AL_AUTOWAH_PEAK_GAIN	.\inc\openal\efx.h	128;"	d
AL_AUTOWAH_RELEASE_TIME	.\OpenAL 1.1 SDK\include\efx.h	126;"	d
AL_AUTOWAH_RELEASE_TIME	.\inc\openal\efx.h	126;"	d
AL_AUTOWAH_RESONANCE	.\OpenAL 1.1 SDK\include\efx.h	127;"	d
AL_AUTOWAH_RESONANCE	.\inc\openal\efx.h	127;"	d
AL_AUXILIARY_SEND_FILTER	.\OpenAL 1.1 SDK\include\efx.h	39;"	d
AL_AUXILIARY_SEND_FILTER	.\inc\openal\efx.h	39;"	d
AL_AUXILIARY_SEND_FILTER_GAINHF_AUTO	.\OpenAL 1.1 SDK\include\efx.h	45;"	d
AL_AUXILIARY_SEND_FILTER_GAINHF_AUTO	.\inc\openal\efx.h	45;"	d
AL_AUXILIARY_SEND_FILTER_GAIN_AUTO	.\OpenAL 1.1 SDK\include\efx.h	44;"	d
AL_AUXILIARY_SEND_FILTER_GAIN_AUTO	.\inc\openal\efx.h	44;"	d
AL_BANDPASS_GAIN	.\OpenAL 1.1 SDK\include\efx.h	192;"	d
AL_BANDPASS_GAIN	.\inc\openal\efx.h	192;"	d
AL_BANDPASS_GAINHF	.\OpenAL 1.1 SDK\include\efx.h	194;"	d
AL_BANDPASS_GAINHF	.\inc\openal\efx.h	194;"	d
AL_BANDPASS_GAINLF	.\OpenAL 1.1 SDK\include\efx.h	193;"	d
AL_BANDPASS_GAINLF	.\inc\openal\efx.h	193;"	d
AL_BITS	.\OpenAL 1.1 SDK\include\al.h	283;"	d
AL_BITS	.\inc\openal\al.h	283;"	d
AL_BUFFER	.\OpenAL 1.1 SDK\include\al.h	152;"	d
AL_BUFFER	.\inc\openal\al.h	152;"	d
AL_BUFFERS_PROCESSED	.\OpenAL 1.1 SDK\include\al.h	213;"	d
AL_BUFFERS_PROCESSED	.\inc\openal\al.h	213;"	d
AL_BUFFERS_QUEUED	.\OpenAL 1.1 SDK\include\al.h	212;"	d
AL_BUFFERS_QUEUED	.\inc\openal\al.h	212;"	d
AL_BYTE_OFFSET	.\OpenAL 1.1 SDK\include\al.h	220;"	d
AL_BYTE_OFFSET	.\inc\openal\al.h	220;"	d
AL_CHANNELS	.\OpenAL 1.1 SDK\include\al.h	284;"	d
AL_CHANNELS	.\inc\openal\al.h	284;"	d
AL_CHANNEL_MASK	.\OpenAL 1.1 SDK\include\al.h	197;"	d
AL_CHANNEL_MASK	.\inc\openal\al.h	197;"	d
AL_CHORUS_DEFAULT_DELAY	.\OpenAL 1.1 SDK\include\efx.h	434;"	d
AL_CHORUS_DEFAULT_DELAY	.\inc\openal\efx.h	434;"	d
AL_CHORUS_DEFAULT_DEPTH	.\OpenAL 1.1 SDK\include\efx.h	426;"	d
AL_CHORUS_DEFAULT_DEPTH	.\inc\openal\efx.h	426;"	d
AL_CHORUS_DEFAULT_FEEDBACK	.\OpenAL 1.1 SDK\include\efx.h	430;"	d
AL_CHORUS_DEFAULT_FEEDBACK	.\inc\openal\efx.h	430;"	d
AL_CHORUS_DEFAULT_PHASE	.\OpenAL 1.1 SDK\include\efx.h	418;"	d
AL_CHORUS_DEFAULT_PHASE	.\inc\openal\efx.h	418;"	d
AL_CHORUS_DEFAULT_RATE	.\OpenAL 1.1 SDK\include\efx.h	422;"	d
AL_CHORUS_DEFAULT_RATE	.\inc\openal\efx.h	422;"	d
AL_CHORUS_DEFAULT_WAVEFORM	.\OpenAL 1.1 SDK\include\efx.h	411;"	d
AL_CHORUS_DEFAULT_WAVEFORM	.\inc\openal\efx.h	411;"	d
AL_CHORUS_DELAY	.\OpenAL 1.1 SDK\include\efx.h	78;"	d
AL_CHORUS_DELAY	.\inc\openal\efx.h	78;"	d
AL_CHORUS_DEPTH	.\OpenAL 1.1 SDK\include\efx.h	76;"	d
AL_CHORUS_DEPTH	.\inc\openal\efx.h	76;"	d
AL_CHORUS_FEEDBACK	.\OpenAL 1.1 SDK\include\efx.h	77;"	d
AL_CHORUS_FEEDBACK	.\inc\openal\efx.h	77;"	d
AL_CHORUS_MAX_DELAY	.\OpenAL 1.1 SDK\include\efx.h	433;"	d
AL_CHORUS_MAX_DELAY	.\inc\openal\efx.h	433;"	d
AL_CHORUS_MAX_DEPTH	.\OpenAL 1.1 SDK\include\efx.h	425;"	d
AL_CHORUS_MAX_DEPTH	.\inc\openal\efx.h	425;"	d
AL_CHORUS_MAX_FEEDBACK	.\OpenAL 1.1 SDK\include\efx.h	429;"	d
AL_CHORUS_MAX_FEEDBACK	.\inc\openal\efx.h	429;"	d
AL_CHORUS_MAX_PHASE	.\OpenAL 1.1 SDK\include\efx.h	417;"	d
AL_CHORUS_MAX_PHASE	.\inc\openal\efx.h	417;"	d
AL_CHORUS_MAX_RATE	.\OpenAL 1.1 SDK\include\efx.h	421;"	d
AL_CHORUS_MAX_RATE	.\inc\openal\efx.h	421;"	d
AL_CHORUS_MAX_WAVEFORM	.\OpenAL 1.1 SDK\include\efx.h	410;"	d
AL_CHORUS_MAX_WAVEFORM	.\inc\openal\efx.h	410;"	d
AL_CHORUS_MIN_DELAY	.\OpenAL 1.1 SDK\include\efx.h	432;"	d
AL_CHORUS_MIN_DELAY	.\inc\openal\efx.h	432;"	d
AL_CHORUS_MIN_DEPTH	.\OpenAL 1.1 SDK\include\efx.h	424;"	d
AL_CHORUS_MIN_DEPTH	.\inc\openal\efx.h	424;"	d
AL_CHORUS_MIN_FEEDBACK	.\OpenAL 1.1 SDK\include\efx.h	428;"	d
AL_CHORUS_MIN_FEEDBACK	.\inc\openal\efx.h	428;"	d
AL_CHORUS_MIN_PHASE	.\OpenAL 1.1 SDK\include\efx.h	416;"	d
AL_CHORUS_MIN_PHASE	.\inc\openal\efx.h	416;"	d
AL_CHORUS_MIN_RATE	.\OpenAL 1.1 SDK\include\efx.h	420;"	d
AL_CHORUS_MIN_RATE	.\inc\openal\efx.h	420;"	d
AL_CHORUS_MIN_WAVEFORM	.\OpenAL 1.1 SDK\include\efx.h	409;"	d
AL_CHORUS_MIN_WAVEFORM	.\inc\openal\efx.h	409;"	d
AL_CHORUS_PHASE	.\OpenAL 1.1 SDK\include\efx.h	74;"	d
AL_CHORUS_PHASE	.\inc\openal\efx.h	74;"	d
AL_CHORUS_RATE	.\OpenAL 1.1 SDK\include\efx.h	75;"	d
AL_CHORUS_RATE	.\inc\openal\efx.h	75;"	d
AL_CHORUS_WAVEFORM	.\OpenAL 1.1 SDK\include\efx.h	73;"	d
AL_CHORUS_WAVEFORM	.\inc\openal\efx.h	73;"	d
AL_CHORUS_WAVEFORM_SINUSOID	.\OpenAL 1.1 SDK\include\efx.h	413;"	d
AL_CHORUS_WAVEFORM_SINUSOID	.\inc\openal\efx.h	413;"	d
AL_CHORUS_WAVEFORM_TRIANGLE	.\OpenAL 1.1 SDK\include\efx.h	414;"	d
AL_CHORUS_WAVEFORM_TRIANGLE	.\inc\openal\efx.h	414;"	d
AL_COMPRESSOR_DEFAULT_ONOFF	.\OpenAL 1.1 SDK\include\efx.h	647;"	d
AL_COMPRESSOR_DEFAULT_ONOFF	.\inc\openal\efx.h	647;"	d
AL_COMPRESSOR_MAX_ONOFF	.\OpenAL 1.1 SDK\include\efx.h	646;"	d
AL_COMPRESSOR_MAX_ONOFF	.\inc\openal\efx.h	646;"	d
AL_COMPRESSOR_MIN_ONOFF	.\OpenAL 1.1 SDK\include\efx.h	645;"	d
AL_COMPRESSOR_MIN_ONOFF	.\inc\openal\efx.h	645;"	d
AL_COMPRESSOR_ONOFF	.\OpenAL 1.1 SDK\include\efx.h	131;"	d
AL_COMPRESSOR_ONOFF	.\inc\openal\efx.h	131;"	d
AL_CONE_INNER_ANGLE	.\OpenAL 1.1 SDK\include\al.h	104;"	d
AL_CONE_INNER_ANGLE	.\inc\openal\al.h	104;"	d
AL_CONE_OUTER_ANGLE	.\OpenAL 1.1 SDK\include\al.h	111;"	d
AL_CONE_OUTER_ANGLE	.\inc\openal\al.h	111;"	d
AL_CONE_OUTER_GAIN	.\OpenAL 1.1 SDK\include\al.h	264;"	d
AL_CONE_OUTER_GAIN	.\inc\openal\al.h	264;"	d
AL_CONE_OUTER_GAINHF	.\OpenAL 1.1 SDK\include\efx.h	42;"	d
AL_CONE_OUTER_GAINHF	.\inc\openal\efx.h	42;"	d
AL_DEFAULT_AIR_ABSORPTION_FACTOR	.\OpenAL 1.1 SDK\include\efx.h	700;"	d
AL_DEFAULT_AIR_ABSORPTION_FACTOR	.\inc\openal\efx.h	700;"	d
AL_DEFAULT_AUXILIARY_SEND_FILTER_GAINHF_AUTO	.\OpenAL 1.1 SDK\include\efx.h	720;"	d
AL_DEFAULT_AUXILIARY_SEND_FILTER_GAINHF_AUTO	.\inc\openal\efx.h	720;"	d
AL_DEFAULT_AUXILIARY_SEND_FILTER_GAIN_AUTO	.\OpenAL 1.1 SDK\include\efx.h	716;"	d
AL_DEFAULT_AUXILIARY_SEND_FILTER_GAIN_AUTO	.\inc\openal\efx.h	716;"	d
AL_DEFAULT_CONE_OUTER_GAINHF	.\OpenAL 1.1 SDK\include\efx.h	708;"	d
AL_DEFAULT_CONE_OUTER_GAINHF	.\inc\openal\efx.h	708;"	d
AL_DEFAULT_DIRECT_FILTER_GAINHF_AUTO	.\OpenAL 1.1 SDK\include\efx.h	712;"	d
AL_DEFAULT_DIRECT_FILTER_GAINHF_AUTO	.\inc\openal\efx.h	712;"	d
AL_DEFAULT_METERS_PER_UNIT	.\OpenAL 1.1 SDK\include\efx.h	730;"	d
AL_DEFAULT_METERS_PER_UNIT	.\inc\openal\efx.h	730;"	d
AL_DEFAULT_ROOM_ROLLOFF_FACTOR	.\OpenAL 1.1 SDK\include\efx.h	704;"	d
AL_DEFAULT_ROOM_ROLLOFF_FACTOR	.\inc\openal\efx.h	704;"	d
AL_DIRECTION	.\OpenAL 1.1 SDK\include\al.h	134;"	d
AL_DIRECTION	.\inc\openal\al.h	134;"	d
AL_DIRECT_FILTER	.\OpenAL 1.1 SDK\include\efx.h	38;"	d
AL_DIRECT_FILTER	.\inc\openal\efx.h	38;"	d
AL_DIRECT_FILTER_GAINHF_AUTO	.\OpenAL 1.1 SDK\include\efx.h	43;"	d
AL_DIRECT_FILTER_GAINHF_AUTO	.\inc\openal\efx.h	43;"	d
AL_DISTANCE_MODEL	.\OpenAL 1.1 SDK\include\al.h	359;"	d
AL_DISTANCE_MODEL	.\inc\openal\al.h	359;"	d
AL_DISTORTION_DEFAULT_EDGE	.\OpenAL 1.1 SDK\include\efx.h	441;"	d
AL_DISTORTION_DEFAULT_EDGE	.\inc\openal\efx.h	441;"	d
AL_DISTORTION_DEFAULT_EQBANDWIDTH	.\OpenAL 1.1 SDK\include\efx.h	457;"	d
AL_DISTORTION_DEFAULT_EQBANDWIDTH	.\inc\openal\efx.h	457;"	d
AL_DISTORTION_DEFAULT_EQCENTER	.\OpenAL 1.1 SDK\include\efx.h	453;"	d
AL_DISTORTION_DEFAULT_EQCENTER	.\inc\openal\efx.h	453;"	d
AL_DISTORTION_DEFAULT_GAIN	.\OpenAL 1.1 SDK\include\efx.h	445;"	d
AL_DISTORTION_DEFAULT_GAIN	.\inc\openal\efx.h	445;"	d
AL_DISTORTION_DEFAULT_LOWPASS_CUTOFF	.\OpenAL 1.1 SDK\include\efx.h	449;"	d
AL_DISTORTION_DEFAULT_LOWPASS_CUTOFF	.\inc\openal\efx.h	449;"	d
AL_DISTORTION_EDGE	.\OpenAL 1.1 SDK\include\efx.h	81;"	d
AL_DISTORTION_EDGE	.\inc\openal\efx.h	81;"	d
AL_DISTORTION_EQBANDWIDTH	.\OpenAL 1.1 SDK\include\efx.h	85;"	d
AL_DISTORTION_EQBANDWIDTH	.\inc\openal\efx.h	85;"	d
AL_DISTORTION_EQCENTER	.\OpenAL 1.1 SDK\include\efx.h	84;"	d
AL_DISTORTION_EQCENTER	.\inc\openal\efx.h	84;"	d
AL_DISTORTION_GAIN	.\OpenAL 1.1 SDK\include\efx.h	82;"	d
AL_DISTORTION_GAIN	.\inc\openal\efx.h	82;"	d
AL_DISTORTION_LOWPASS_CUTOFF	.\OpenAL 1.1 SDK\include\efx.h	83;"	d
AL_DISTORTION_LOWPASS_CUTOFF	.\inc\openal\efx.h	83;"	d
AL_DISTORTION_MAX_EDGE	.\OpenAL 1.1 SDK\include\efx.h	440;"	d
AL_DISTORTION_MAX_EDGE	.\inc\openal\efx.h	440;"	d
AL_DISTORTION_MAX_EQBANDWIDTH	.\OpenAL 1.1 SDK\include\efx.h	456;"	d
AL_DISTORTION_MAX_EQBANDWIDTH	.\inc\openal\efx.h	456;"	d
AL_DISTORTION_MAX_EQCENTER	.\OpenAL 1.1 SDK\include\efx.h	452;"	d
AL_DISTORTION_MAX_EQCENTER	.\inc\openal\efx.h	452;"	d
AL_DISTORTION_MAX_GAIN	.\OpenAL 1.1 SDK\include\efx.h	444;"	d
AL_DISTORTION_MAX_GAIN	.\inc\openal\efx.h	444;"	d
AL_DISTORTION_MAX_LOWPASS_CUTOFF	.\OpenAL 1.1 SDK\include\efx.h	448;"	d
AL_DISTORTION_MAX_LOWPASS_CUTOFF	.\inc\openal\efx.h	448;"	d
AL_DISTORTION_MIN_EDGE	.\OpenAL 1.1 SDK\include\efx.h	439;"	d
AL_DISTORTION_MIN_EDGE	.\inc\openal\efx.h	439;"	d
AL_DISTORTION_MIN_EQBANDWIDTH	.\OpenAL 1.1 SDK\include\efx.h	455;"	d
AL_DISTORTION_MIN_EQBANDWIDTH	.\inc\openal\efx.h	455;"	d
AL_DISTORTION_MIN_EQCENTER	.\OpenAL 1.1 SDK\include\efx.h	451;"	d
AL_DISTORTION_MIN_EQCENTER	.\inc\openal\efx.h	451;"	d
AL_DISTORTION_MIN_GAIN	.\OpenAL 1.1 SDK\include\efx.h	443;"	d
AL_DISTORTION_MIN_GAIN	.\inc\openal\efx.h	443;"	d
AL_DISTORTION_MIN_LOWPASS_CUTOFF	.\OpenAL 1.1 SDK\include\efx.h	447;"	d
AL_DISTORTION_MIN_LOWPASS_CUTOFF	.\inc\openal\efx.h	447;"	d
AL_DOPPLER_FACTOR	.\OpenAL 1.1 SDK\include\al.h	340;"	d
AL_DOPPLER_FACTOR	.\inc\openal\al.h	340;"	d
AL_DOPPLER_VELOCITY	.\OpenAL 1.1 SDK\include\al.h	345;"	d
AL_DOPPLER_VELOCITY	.\inc\openal\al.h	345;"	d
AL_EAXREVERB_AIR_ABSORPTION_GAINHF	.\OpenAL 1.1 SDK\include\efx-creative.h	40;"	d
AL_EAXREVERB_AIR_ABSORPTION_GAINHF	.\inc\openal\efx-creative.h	40;"	d
AL_EAXREVERB_DECAY_HFLIMIT	.\OpenAL 1.1 SDK\include\efx-creative.h	44;"	d
AL_EAXREVERB_DECAY_HFLIMIT	.\inc\openal\efx-creative.h	44;"	d
AL_EAXREVERB_DECAY_HFRATIO	.\OpenAL 1.1 SDK\include\efx-creative.h	28;"	d
AL_EAXREVERB_DECAY_HFRATIO	.\inc\openal\efx-creative.h	28;"	d
AL_EAXREVERB_DECAY_LFRATIO	.\OpenAL 1.1 SDK\include\efx-creative.h	29;"	d
AL_EAXREVERB_DECAY_LFRATIO	.\inc\openal\efx-creative.h	29;"	d
AL_EAXREVERB_DECAY_TIME	.\OpenAL 1.1 SDK\include\efx-creative.h	27;"	d
AL_EAXREVERB_DECAY_TIME	.\inc\openal\efx-creative.h	27;"	d
AL_EAXREVERB_DEFAULT_AIR_ABSORPTION_GAINHF	.\OpenAL 1.1 SDK\include\efx-creative.h	128;"	d
AL_EAXREVERB_DEFAULT_AIR_ABSORPTION_GAINHF	.\inc\openal\efx-creative.h	128;"	d
AL_EAXREVERB_DEFAULT_DECAY_HFLIMIT	.\OpenAL 1.1 SDK\include\efx-creative.h	144;"	d
AL_EAXREVERB_DEFAULT_DECAY_HFLIMIT	.\inc\openal\efx-creative.h	144;"	d
AL_EAXREVERB_DEFAULT_DECAY_HFRATIO	.\OpenAL 1.1 SDK\include\efx-creative.h	84;"	d
AL_EAXREVERB_DEFAULT_DECAY_HFRATIO	.\inc\openal\efx-creative.h	84;"	d
AL_EAXREVERB_DEFAULT_DECAY_LFRATIO	.\OpenAL 1.1 SDK\include\efx-creative.h	88;"	d
AL_EAXREVERB_DEFAULT_DECAY_LFRATIO	.\inc\openal\efx-creative.h	88;"	d
AL_EAXREVERB_DEFAULT_DECAY_TIME	.\OpenAL 1.1 SDK\include\efx-creative.h	80;"	d
AL_EAXREVERB_DEFAULT_DECAY_TIME	.\inc\openal\efx-creative.h	80;"	d
AL_EAXREVERB_DEFAULT_DENSITY	.\OpenAL 1.1 SDK\include\efx-creative.h	60;"	d
AL_EAXREVERB_DEFAULT_DENSITY	.\inc\openal\efx-creative.h	60;"	d
AL_EAXREVERB_DEFAULT_DIFFUSION	.\OpenAL 1.1 SDK\include\efx-creative.h	64;"	d
AL_EAXREVERB_DEFAULT_DIFFUSION	.\inc\openal\efx-creative.h	64;"	d
AL_EAXREVERB_DEFAULT_ECHO_DEPTH	.\OpenAL 1.1 SDK\include\efx-creative.h	116;"	d
AL_EAXREVERB_DEFAULT_ECHO_DEPTH	.\inc\openal\efx-creative.h	116;"	d
AL_EAXREVERB_DEFAULT_ECHO_TIME	.\OpenAL 1.1 SDK\include\efx-creative.h	112;"	d
AL_EAXREVERB_DEFAULT_ECHO_TIME	.\inc\openal\efx-creative.h	112;"	d
AL_EAXREVERB_DEFAULT_GAIN	.\OpenAL 1.1 SDK\include\efx-creative.h	68;"	d
AL_EAXREVERB_DEFAULT_GAIN	.\inc\openal\efx-creative.h	68;"	d
AL_EAXREVERB_DEFAULT_GAINHF	.\OpenAL 1.1 SDK\include\efx-creative.h	72;"	d
AL_EAXREVERB_DEFAULT_GAINHF	.\inc\openal\efx-creative.h	72;"	d
AL_EAXREVERB_DEFAULT_GAINLF	.\OpenAL 1.1 SDK\include\efx-creative.h	76;"	d
AL_EAXREVERB_DEFAULT_GAINLF	.\inc\openal\efx-creative.h	76;"	d
AL_EAXREVERB_DEFAULT_HFREFERENCE	.\OpenAL 1.1 SDK\include\efx-creative.h	132;"	d
AL_EAXREVERB_DEFAULT_HFREFERENCE	.\inc\openal\efx-creative.h	132;"	d
AL_EAXREVERB_DEFAULT_LATE_REVERB_DELAY	.\OpenAL 1.1 SDK\include\efx-creative.h	106;"	d
AL_EAXREVERB_DEFAULT_LATE_REVERB_DELAY	.\inc\openal\efx-creative.h	106;"	d
AL_EAXREVERB_DEFAULT_LATE_REVERB_GAIN	.\OpenAL 1.1 SDK\include\efx-creative.h	102;"	d
AL_EAXREVERB_DEFAULT_LATE_REVERB_GAIN	.\inc\openal\efx-creative.h	102;"	d
AL_EAXREVERB_DEFAULT_LATE_REVERB_PAN	.\OpenAL 1.1 SDK\include\efx-creative.h	108;"	d
AL_EAXREVERB_DEFAULT_LATE_REVERB_PAN	.\inc\openal\efx-creative.h	108;"	d
AL_EAXREVERB_DEFAULT_LFREFERENCE	.\OpenAL 1.1 SDK\include\efx-creative.h	136;"	d
AL_EAXREVERB_DEFAULT_LFREFERENCE	.\inc\openal\efx-creative.h	136;"	d
AL_EAXREVERB_DEFAULT_MODULATION_DEPTH	.\OpenAL 1.1 SDK\include\efx-creative.h	124;"	d
AL_EAXREVERB_DEFAULT_MODULATION_DEPTH	.\inc\openal\efx-creative.h	124;"	d
AL_EAXREVERB_DEFAULT_MODULATION_TIME	.\OpenAL 1.1 SDK\include\efx-creative.h	120;"	d
AL_EAXREVERB_DEFAULT_MODULATION_TIME	.\inc\openal\efx-creative.h	120;"	d
AL_EAXREVERB_DEFAULT_REFLECTIONS_DELAY	.\OpenAL 1.1 SDK\include\efx-creative.h	96;"	d
AL_EAXREVERB_DEFAULT_REFLECTIONS_DELAY	.\inc\openal\efx-creative.h	96;"	d
AL_EAXREVERB_DEFAULT_REFLECTIONS_GAIN	.\OpenAL 1.1 SDK\include\efx-creative.h	92;"	d
AL_EAXREVERB_DEFAULT_REFLECTIONS_GAIN	.\inc\openal\efx-creative.h	92;"	d
AL_EAXREVERB_DEFAULT_REFLECTIONS_PAN	.\OpenAL 1.1 SDK\include\efx-creative.h	98;"	d
AL_EAXREVERB_DEFAULT_REFLECTIONS_PAN	.\inc\openal\efx-creative.h	98;"	d
AL_EAXREVERB_DEFAULT_ROOM_ROLLOFF_FACTOR	.\OpenAL 1.1 SDK\include\efx-creative.h	140;"	d
AL_EAXREVERB_DEFAULT_ROOM_ROLLOFF_FACTOR	.\inc\openal\efx-creative.h	140;"	d
AL_EAXREVERB_DENSITY	.\OpenAL 1.1 SDK\include\efx-creative.h	22;"	d
AL_EAXREVERB_DENSITY	.\inc\openal\efx-creative.h	22;"	d
AL_EAXREVERB_DIFFUSION	.\OpenAL 1.1 SDK\include\efx-creative.h	23;"	d
AL_EAXREVERB_DIFFUSION	.\inc\openal\efx-creative.h	23;"	d
AL_EAXREVERB_ECHO_DEPTH	.\OpenAL 1.1 SDK\include\efx-creative.h	37;"	d
AL_EAXREVERB_ECHO_DEPTH	.\inc\openal\efx-creative.h	37;"	d
AL_EAXREVERB_ECHO_TIME	.\OpenAL 1.1 SDK\include\efx-creative.h	36;"	d
AL_EAXREVERB_ECHO_TIME	.\inc\openal\efx-creative.h	36;"	d
AL_EAXREVERB_GAIN	.\OpenAL 1.1 SDK\include\efx-creative.h	24;"	d
AL_EAXREVERB_GAIN	.\inc\openal\efx-creative.h	24;"	d
AL_EAXREVERB_GAINHF	.\OpenAL 1.1 SDK\include\efx-creative.h	25;"	d
AL_EAXREVERB_GAINHF	.\inc\openal\efx-creative.h	25;"	d
AL_EAXREVERB_GAINLF	.\OpenAL 1.1 SDK\include\efx-creative.h	26;"	d
AL_EAXREVERB_GAINLF	.\inc\openal\efx-creative.h	26;"	d
AL_EAXREVERB_HFREFERENCE	.\OpenAL 1.1 SDK\include\efx-creative.h	41;"	d
AL_EAXREVERB_HFREFERENCE	.\inc\openal\efx-creative.h	41;"	d
AL_EAXREVERB_LATE_REVERB_DELAY	.\OpenAL 1.1 SDK\include\efx-creative.h	34;"	d
AL_EAXREVERB_LATE_REVERB_DELAY	.\inc\openal\efx-creative.h	34;"	d
AL_EAXREVERB_LATE_REVERB_GAIN	.\OpenAL 1.1 SDK\include\efx-creative.h	33;"	d
AL_EAXREVERB_LATE_REVERB_GAIN	.\inc\openal\efx-creative.h	33;"	d
AL_EAXREVERB_LATE_REVERB_PAN	.\OpenAL 1.1 SDK\include\efx-creative.h	35;"	d
AL_EAXREVERB_LATE_REVERB_PAN	.\inc\openal\efx-creative.h	35;"	d
AL_EAXREVERB_LFREFERENCE	.\OpenAL 1.1 SDK\include\efx-creative.h	42;"	d
AL_EAXREVERB_LFREFERENCE	.\inc\openal\efx-creative.h	42;"	d
AL_EAXREVERB_MAX_AIR_ABSORPTION_GAINHF	.\OpenAL 1.1 SDK\include\efx-creative.h	127;"	d
AL_EAXREVERB_MAX_AIR_ABSORPTION_GAINHF	.\inc\openal\efx-creative.h	127;"	d
AL_EAXREVERB_MAX_DECAY_HFLIMIT	.\OpenAL 1.1 SDK\include\efx-creative.h	143;"	d
AL_EAXREVERB_MAX_DECAY_HFLIMIT	.\inc\openal\efx-creative.h	143;"	d
AL_EAXREVERB_MAX_DECAY_HFRATIO	.\OpenAL 1.1 SDK\include\efx-creative.h	83;"	d
AL_EAXREVERB_MAX_DECAY_HFRATIO	.\inc\openal\efx-creative.h	83;"	d
AL_EAXREVERB_MAX_DECAY_LFRATIO	.\OpenAL 1.1 SDK\include\efx-creative.h	87;"	d
AL_EAXREVERB_MAX_DECAY_LFRATIO	.\inc\openal\efx-creative.h	87;"	d
AL_EAXREVERB_MAX_DECAY_TIME	.\OpenAL 1.1 SDK\include\efx-creative.h	79;"	d
AL_EAXREVERB_MAX_DECAY_TIME	.\inc\openal\efx-creative.h	79;"	d
AL_EAXREVERB_MAX_DENSITY	.\OpenAL 1.1 SDK\include\efx-creative.h	59;"	d
AL_EAXREVERB_MAX_DENSITY	.\inc\openal\efx-creative.h	59;"	d
AL_EAXREVERB_MAX_DIFFUSION	.\OpenAL 1.1 SDK\include\efx-creative.h	63;"	d
AL_EAXREVERB_MAX_DIFFUSION	.\inc\openal\efx-creative.h	63;"	d
AL_EAXREVERB_MAX_ECHO_DEPTH	.\OpenAL 1.1 SDK\include\efx-creative.h	115;"	d
AL_EAXREVERB_MAX_ECHO_DEPTH	.\inc\openal\efx-creative.h	115;"	d
AL_EAXREVERB_MAX_ECHO_TIME	.\OpenAL 1.1 SDK\include\efx-creative.h	111;"	d
AL_EAXREVERB_MAX_ECHO_TIME	.\inc\openal\efx-creative.h	111;"	d
AL_EAXREVERB_MAX_GAIN	.\OpenAL 1.1 SDK\include\efx-creative.h	67;"	d
AL_EAXREVERB_MAX_GAIN	.\inc\openal\efx-creative.h	67;"	d
AL_EAXREVERB_MAX_GAINHF	.\OpenAL 1.1 SDK\include\efx-creative.h	71;"	d
AL_EAXREVERB_MAX_GAINHF	.\inc\openal\efx-creative.h	71;"	d
AL_EAXREVERB_MAX_GAINLF	.\OpenAL 1.1 SDK\include\efx-creative.h	75;"	d
AL_EAXREVERB_MAX_GAINLF	.\inc\openal\efx-creative.h	75;"	d
AL_EAXREVERB_MAX_HFREFERENCE	.\OpenAL 1.1 SDK\include\efx-creative.h	131;"	d
AL_EAXREVERB_MAX_HFREFERENCE	.\inc\openal\efx-creative.h	131;"	d
AL_EAXREVERB_MAX_LATE_REVERB_DELAY	.\OpenAL 1.1 SDK\include\efx-creative.h	105;"	d
AL_EAXREVERB_MAX_LATE_REVERB_DELAY	.\inc\openal\efx-creative.h	105;"	d
AL_EAXREVERB_MAX_LATE_REVERB_GAIN	.\OpenAL 1.1 SDK\include\efx-creative.h	101;"	d
AL_EAXREVERB_MAX_LATE_REVERB_GAIN	.\inc\openal\efx-creative.h	101;"	d
AL_EAXREVERB_MAX_LFREFERENCE	.\OpenAL 1.1 SDK\include\efx-creative.h	135;"	d
AL_EAXREVERB_MAX_LFREFERENCE	.\inc\openal\efx-creative.h	135;"	d
AL_EAXREVERB_MAX_MODULATION_DEPTH	.\OpenAL 1.1 SDK\include\efx-creative.h	123;"	d
AL_EAXREVERB_MAX_MODULATION_DEPTH	.\inc\openal\efx-creative.h	123;"	d
AL_EAXREVERB_MAX_MODULATION_TIME	.\OpenAL 1.1 SDK\include\efx-creative.h	119;"	d
AL_EAXREVERB_MAX_MODULATION_TIME	.\inc\openal\efx-creative.h	119;"	d
AL_EAXREVERB_MAX_REFLECTIONS_DELAY	.\OpenAL 1.1 SDK\include\efx-creative.h	95;"	d
AL_EAXREVERB_MAX_REFLECTIONS_DELAY	.\inc\openal\efx-creative.h	95;"	d
AL_EAXREVERB_MAX_REFLECTIONS_GAIN	.\OpenAL 1.1 SDK\include\efx-creative.h	91;"	d
AL_EAXREVERB_MAX_REFLECTIONS_GAIN	.\inc\openal\efx-creative.h	91;"	d
AL_EAXREVERB_MAX_ROOM_ROLLOFF_FACTOR	.\OpenAL 1.1 SDK\include\efx-creative.h	139;"	d
AL_EAXREVERB_MAX_ROOM_ROLLOFF_FACTOR	.\inc\openal\efx-creative.h	139;"	d
AL_EAXREVERB_MIN_AIR_ABSORPTION_GAINHF	.\OpenAL 1.1 SDK\include\efx-creative.h	126;"	d
AL_EAXREVERB_MIN_AIR_ABSORPTION_GAINHF	.\inc\openal\efx-creative.h	126;"	d
AL_EAXREVERB_MIN_DECAY_HFLIMIT	.\OpenAL 1.1 SDK\include\efx-creative.h	142;"	d
AL_EAXREVERB_MIN_DECAY_HFLIMIT	.\inc\openal\efx-creative.h	142;"	d
AL_EAXREVERB_MIN_DECAY_HFRATIO	.\OpenAL 1.1 SDK\include\efx-creative.h	82;"	d
AL_EAXREVERB_MIN_DECAY_HFRATIO	.\inc\openal\efx-creative.h	82;"	d
AL_EAXREVERB_MIN_DECAY_LFRATIO	.\OpenAL 1.1 SDK\include\efx-creative.h	86;"	d
AL_EAXREVERB_MIN_DECAY_LFRATIO	.\inc\openal\efx-creative.h	86;"	d
AL_EAXREVERB_MIN_DECAY_TIME	.\OpenAL 1.1 SDK\include\efx-creative.h	78;"	d
AL_EAXREVERB_MIN_DECAY_TIME	.\inc\openal\efx-creative.h	78;"	d
AL_EAXREVERB_MIN_DENSITY	.\OpenAL 1.1 SDK\include\efx-creative.h	58;"	d
AL_EAXREVERB_MIN_DENSITY	.\inc\openal\efx-creative.h	58;"	d
AL_EAXREVERB_MIN_DIFFUSION	.\OpenAL 1.1 SDK\include\efx-creative.h	62;"	d
AL_EAXREVERB_MIN_DIFFUSION	.\inc\openal\efx-creative.h	62;"	d
AL_EAXREVERB_MIN_ECHO_DEPTH	.\OpenAL 1.1 SDK\include\efx-creative.h	114;"	d
AL_EAXREVERB_MIN_ECHO_DEPTH	.\inc\openal\efx-creative.h	114;"	d
AL_EAXREVERB_MIN_ECHO_TIME	.\OpenAL 1.1 SDK\include\efx-creative.h	110;"	d
AL_EAXREVERB_MIN_ECHO_TIME	.\inc\openal\efx-creative.h	110;"	d
AL_EAXREVERB_MIN_GAIN	.\OpenAL 1.1 SDK\include\efx-creative.h	66;"	d
AL_EAXREVERB_MIN_GAIN	.\inc\openal\efx-creative.h	66;"	d
AL_EAXREVERB_MIN_GAINHF	.\OpenAL 1.1 SDK\include\efx-creative.h	70;"	d
AL_EAXREVERB_MIN_GAINHF	.\inc\openal\efx-creative.h	70;"	d
AL_EAXREVERB_MIN_GAINLF	.\OpenAL 1.1 SDK\include\efx-creative.h	74;"	d
AL_EAXREVERB_MIN_GAINLF	.\inc\openal\efx-creative.h	74;"	d
AL_EAXREVERB_MIN_HFREFERENCE	.\OpenAL 1.1 SDK\include\efx-creative.h	130;"	d
AL_EAXREVERB_MIN_HFREFERENCE	.\inc\openal\efx-creative.h	130;"	d
AL_EAXREVERB_MIN_LATE_REVERB_DELAY	.\OpenAL 1.1 SDK\include\efx-creative.h	104;"	d
AL_EAXREVERB_MIN_LATE_REVERB_DELAY	.\inc\openal\efx-creative.h	104;"	d
AL_EAXREVERB_MIN_LATE_REVERB_GAIN	.\OpenAL 1.1 SDK\include\efx-creative.h	100;"	d
AL_EAXREVERB_MIN_LATE_REVERB_GAIN	.\inc\openal\efx-creative.h	100;"	d
AL_EAXREVERB_MIN_LFREFERENCE	.\OpenAL 1.1 SDK\include\efx-creative.h	134;"	d
AL_EAXREVERB_MIN_LFREFERENCE	.\inc\openal\efx-creative.h	134;"	d
AL_EAXREVERB_MIN_MODULATION_DEPTH	.\OpenAL 1.1 SDK\include\efx-creative.h	122;"	d
AL_EAXREVERB_MIN_MODULATION_DEPTH	.\inc\openal\efx-creative.h	122;"	d
AL_EAXREVERB_MIN_MODULATION_TIME	.\OpenAL 1.1 SDK\include\efx-creative.h	118;"	d
AL_EAXREVERB_MIN_MODULATION_TIME	.\inc\openal\efx-creative.h	118;"	d
AL_EAXREVERB_MIN_REFLECTIONS_DELAY	.\OpenAL 1.1 SDK\include\efx-creative.h	94;"	d
AL_EAXREVERB_MIN_REFLECTIONS_DELAY	.\inc\openal\efx-creative.h	94;"	d
AL_EAXREVERB_MIN_REFLECTIONS_GAIN	.\OpenAL 1.1 SDK\include\efx-creative.h	90;"	d
AL_EAXREVERB_MIN_REFLECTIONS_GAIN	.\inc\openal\efx-creative.h	90;"	d
AL_EAXREVERB_MIN_ROOM_ROLLOFF_FACTOR	.\OpenAL 1.1 SDK\include\efx-creative.h	138;"	d
AL_EAXREVERB_MIN_ROOM_ROLLOFF_FACTOR	.\inc\openal\efx-creative.h	138;"	d
AL_EAXREVERB_MODULATION_DEPTH	.\OpenAL 1.1 SDK\include\efx-creative.h	39;"	d
AL_EAXREVERB_MODULATION_DEPTH	.\inc\openal\efx-creative.h	39;"	d
AL_EAXREVERB_MODULATION_TIME	.\OpenAL 1.1 SDK\include\efx-creative.h	38;"	d
AL_EAXREVERB_MODULATION_TIME	.\inc\openal\efx-creative.h	38;"	d
AL_EAXREVERB_REFLECTIONS_DELAY	.\OpenAL 1.1 SDK\include\efx-creative.h	31;"	d
AL_EAXREVERB_REFLECTIONS_DELAY	.\inc\openal\efx-creative.h	31;"	d
AL_EAXREVERB_REFLECTIONS_GAIN	.\OpenAL 1.1 SDK\include\efx-creative.h	30;"	d
AL_EAXREVERB_REFLECTIONS_GAIN	.\inc\openal\efx-creative.h	30;"	d
AL_EAXREVERB_REFLECTIONS_PAN	.\OpenAL 1.1 SDK\include\efx-creative.h	32;"	d
AL_EAXREVERB_REFLECTIONS_PAN	.\inc\openal\efx-creative.h	32;"	d
AL_EAXREVERB_ROOM_ROLLOFF_FACTOR	.\OpenAL 1.1 SDK\include\efx-creative.h	43;"	d
AL_EAXREVERB_ROOM_ROLLOFF_FACTOR	.\inc\openal\efx-creative.h	43;"	d
AL_ECHO_DAMPING	.\OpenAL 1.1 SDK\include\efx.h	90;"	d
AL_ECHO_DAMPING	.\inc\openal\efx.h	90;"	d
AL_ECHO_DEFAULT_DAMPING	.\OpenAL 1.1 SDK\include\efx.h	472;"	d
AL_ECHO_DEFAULT_DAMPING	.\inc\openal\efx.h	472;"	d
AL_ECHO_DEFAULT_DELAY	.\OpenAL 1.1 SDK\include\efx.h	464;"	d
AL_ECHO_DEFAULT_DELAY	.\inc\openal\efx.h	464;"	d
AL_ECHO_DEFAULT_FEEDBACK	.\OpenAL 1.1 SDK\include\efx.h	476;"	d
AL_ECHO_DEFAULT_FEEDBACK	.\inc\openal\efx.h	476;"	d
AL_ECHO_DEFAULT_LRDELAY	.\OpenAL 1.1 SDK\include\efx.h	468;"	d
AL_ECHO_DEFAULT_LRDELAY	.\inc\openal\efx.h	468;"	d
AL_ECHO_DEFAULT_SPREAD	.\OpenAL 1.1 SDK\include\efx.h	480;"	d
AL_ECHO_DEFAULT_SPREAD	.\inc\openal\efx.h	480;"	d
AL_ECHO_DELAY	.\OpenAL 1.1 SDK\include\efx.h	88;"	d
AL_ECHO_DELAY	.\inc\openal\efx.h	88;"	d
AL_ECHO_FEEDBACK	.\OpenAL 1.1 SDK\include\efx.h	91;"	d
AL_ECHO_FEEDBACK	.\inc\openal\efx.h	91;"	d
AL_ECHO_LRDELAY	.\OpenAL 1.1 SDK\include\efx.h	89;"	d
AL_ECHO_LRDELAY	.\inc\openal\efx.h	89;"	d
AL_ECHO_MAX_DAMPING	.\OpenAL 1.1 SDK\include\efx.h	471;"	d
AL_ECHO_MAX_DAMPING	.\inc\openal\efx.h	471;"	d
AL_ECHO_MAX_DELAY	.\OpenAL 1.1 SDK\include\efx.h	463;"	d
AL_ECHO_MAX_DELAY	.\inc\openal\efx.h	463;"	d
AL_ECHO_MAX_FEEDBACK	.\OpenAL 1.1 SDK\include\efx.h	475;"	d
AL_ECHO_MAX_FEEDBACK	.\inc\openal\efx.h	475;"	d
AL_ECHO_MAX_LRDELAY	.\OpenAL 1.1 SDK\include\efx.h	467;"	d
AL_ECHO_MAX_LRDELAY	.\inc\openal\efx.h	467;"	d
AL_ECHO_MAX_SPREAD	.\OpenAL 1.1 SDK\include\efx.h	479;"	d
AL_ECHO_MAX_SPREAD	.\inc\openal\efx.h	479;"	d
AL_ECHO_MIN_DAMPING	.\OpenAL 1.1 SDK\include\efx.h	470;"	d
AL_ECHO_MIN_DAMPING	.\inc\openal\efx.h	470;"	d
AL_ECHO_MIN_DELAY	.\OpenAL 1.1 SDK\include\efx.h	462;"	d
AL_ECHO_MIN_DELAY	.\inc\openal\efx.h	462;"	d
AL_ECHO_MIN_FEEDBACK	.\OpenAL 1.1 SDK\include\efx.h	474;"	d
AL_ECHO_MIN_FEEDBACK	.\inc\openal\efx.h	474;"	d
AL_ECHO_MIN_LRDELAY	.\OpenAL 1.1 SDK\include\efx.h	466;"	d
AL_ECHO_MIN_LRDELAY	.\inc\openal\efx.h	466;"	d
AL_ECHO_MIN_SPREAD	.\OpenAL 1.1 SDK\include\efx.h	478;"	d
AL_ECHO_MIN_SPREAD	.\inc\openal\efx.h	478;"	d
AL_ECHO_SPREAD	.\OpenAL 1.1 SDK\include\efx.h	92;"	d
AL_ECHO_SPREAD	.\inc\openal\efx.h	92;"	d
AL_EFFECTSLOT_AUXILIARY_SEND_AUTO	.\OpenAL 1.1 SDK\include\efx.h	170;"	d
AL_EFFECTSLOT_AUXILIARY_SEND_AUTO	.\inc\openal\efx.h	170;"	d
AL_EFFECTSLOT_EFFECT	.\OpenAL 1.1 SDK\include\efx.h	168;"	d
AL_EFFECTSLOT_EFFECT	.\inc\openal\efx.h	168;"	d
AL_EFFECTSLOT_GAIN	.\OpenAL 1.1 SDK\include\efx.h	169;"	d
AL_EFFECTSLOT_GAIN	.\inc\openal\efx.h	169;"	d
AL_EFFECTSLOT_NULL	.\OpenAL 1.1 SDK\include\efx.h	175;"	d
AL_EFFECTSLOT_NULL	.\inc\openal\efx.h	175;"	d
AL_EFFECT_AUTOWAH	.\OpenAL 1.1 SDK\include\efx.h	161;"	d
AL_EFFECT_AUTOWAH	.\inc\openal\efx.h	161;"	d
AL_EFFECT_CHORUS	.\OpenAL 1.1 SDK\include\efx.h	153;"	d
AL_EFFECT_CHORUS	.\inc\openal\efx.h	153;"	d
AL_EFFECT_COMPRESSOR	.\OpenAL 1.1 SDK\include\efx.h	162;"	d
AL_EFFECT_COMPRESSOR	.\inc\openal\efx.h	162;"	d
AL_EFFECT_DISTORTION	.\OpenAL 1.1 SDK\include\efx.h	154;"	d
AL_EFFECT_DISTORTION	.\inc\openal\efx.h	154;"	d
AL_EFFECT_EAXREVERB	.\OpenAL 1.1 SDK\include\efx-creative.h	47;"	d
AL_EFFECT_EAXREVERB	.\inc\openal\efx-creative.h	47;"	d
AL_EFFECT_ECHO	.\OpenAL 1.1 SDK\include\efx.h	155;"	d
AL_EFFECT_ECHO	.\inc\openal\efx.h	155;"	d
AL_EFFECT_EQUALIZER	.\OpenAL 1.1 SDK\include\efx.h	163;"	d
AL_EFFECT_EQUALIZER	.\inc\openal\efx.h	163;"	d
AL_EFFECT_FIRST_PARAMETER	.\OpenAL 1.1 SDK\include\efx.h	146;"	d
AL_EFFECT_FIRST_PARAMETER	.\inc\openal\efx.h	146;"	d
AL_EFFECT_FLANGER	.\OpenAL 1.1 SDK\include\efx.h	156;"	d
AL_EFFECT_FLANGER	.\inc\openal\efx.h	156;"	d
AL_EFFECT_FREQUENCY_SHIFTER	.\OpenAL 1.1 SDK\include\efx.h	157;"	d
AL_EFFECT_FREQUENCY_SHIFTER	.\inc\openal\efx.h	157;"	d
AL_EFFECT_LAST_PARAMETER	.\OpenAL 1.1 SDK\include\efx.h	147;"	d
AL_EFFECT_LAST_PARAMETER	.\inc\openal\efx.h	147;"	d
AL_EFFECT_NULL	.\OpenAL 1.1 SDK\include\efx.h	151;"	d
AL_EFFECT_NULL	.\inc\openal\efx.h	151;"	d
AL_EFFECT_PITCH_SHIFTER	.\OpenAL 1.1 SDK\include\efx.h	159;"	d
AL_EFFECT_PITCH_SHIFTER	.\inc\openal\efx.h	159;"	d
AL_EFFECT_REVERB	.\OpenAL 1.1 SDK\include\efx.h	152;"	d
AL_EFFECT_REVERB	.\inc\openal\efx.h	152;"	d
AL_EFFECT_RING_MODULATOR	.\OpenAL 1.1 SDK\include\efx.h	160;"	d
AL_EFFECT_RING_MODULATOR	.\inc\openal\efx.h	160;"	d
AL_EFFECT_TYPE	.\OpenAL 1.1 SDK\include\efx.h	148;"	d
AL_EFFECT_TYPE	.\inc\openal\efx.h	148;"	d
AL_EFFECT_VOCAL_MORPHER	.\OpenAL 1.1 SDK\include\efx.h	158;"	d
AL_EFFECT_VOCAL_MORPHER	.\inc\openal\efx.h	158;"	d
AL_EQUALIZER_DEFAULT_HIGH_CUTOFF	.\OpenAL 1.1 SDK\include\efx.h	690;"	d
AL_EQUALIZER_DEFAULT_HIGH_CUTOFF	.\inc\openal\efx.h	690;"	d
AL_EQUALIZER_DEFAULT_HIGH_GAIN	.\OpenAL 1.1 SDK\include\efx.h	686;"	d
AL_EQUALIZER_DEFAULT_HIGH_GAIN	.\inc\openal\efx.h	686;"	d
AL_EQUALIZER_DEFAULT_LOW_CUTOFF	.\OpenAL 1.1 SDK\include\efx.h	658;"	d
AL_EQUALIZER_DEFAULT_LOW_CUTOFF	.\inc\openal\efx.h	658;"	d
AL_EQUALIZER_DEFAULT_LOW_GAIN	.\OpenAL 1.1 SDK\include\efx.h	654;"	d
AL_EQUALIZER_DEFAULT_LOW_GAIN	.\inc\openal\efx.h	654;"	d
AL_EQUALIZER_DEFAULT_MID1_CENTER	.\OpenAL 1.1 SDK\include\efx.h	666;"	d
AL_EQUALIZER_DEFAULT_MID1_CENTER	.\inc\openal\efx.h	666;"	d
AL_EQUALIZER_DEFAULT_MID1_GAIN	.\OpenAL 1.1 SDK\include\efx.h	662;"	d
AL_EQUALIZER_DEFAULT_MID1_GAIN	.\inc\openal\efx.h	662;"	d
AL_EQUALIZER_DEFAULT_MID1_WIDTH	.\OpenAL 1.1 SDK\include\efx.h	670;"	d
AL_EQUALIZER_DEFAULT_MID1_WIDTH	.\inc\openal\efx.h	670;"	d
AL_EQUALIZER_DEFAULT_MID2_CENTER	.\OpenAL 1.1 SDK\include\efx.h	678;"	d
AL_EQUALIZER_DEFAULT_MID2_CENTER	.\inc\openal\efx.h	678;"	d
AL_EQUALIZER_DEFAULT_MID2_GAIN	.\OpenAL 1.1 SDK\include\efx.h	674;"	d
AL_EQUALIZER_DEFAULT_MID2_GAIN	.\inc\openal\efx.h	674;"	d
AL_EQUALIZER_DEFAULT_MID2_WIDTH	.\OpenAL 1.1 SDK\include\efx.h	682;"	d
AL_EQUALIZER_DEFAULT_MID2_WIDTH	.\inc\openal\efx.h	682;"	d
AL_EQUALIZER_HIGH_CUTOFF	.\OpenAL 1.1 SDK\include\efx.h	143;"	d
AL_EQUALIZER_HIGH_CUTOFF	.\inc\openal\efx.h	143;"	d
AL_EQUALIZER_HIGH_GAIN	.\OpenAL 1.1 SDK\include\efx.h	142;"	d
AL_EQUALIZER_HIGH_GAIN	.\inc\openal\efx.h	142;"	d
AL_EQUALIZER_LOW_CUTOFF	.\OpenAL 1.1 SDK\include\efx.h	135;"	d
AL_EQUALIZER_LOW_CUTOFF	.\inc\openal\efx.h	135;"	d
AL_EQUALIZER_LOW_GAIN	.\OpenAL 1.1 SDK\include\efx.h	134;"	d
AL_EQUALIZER_LOW_GAIN	.\inc\openal\efx.h	134;"	d
AL_EQUALIZER_MAX_HIGH_CUTOFF	.\OpenAL 1.1 SDK\include\efx.h	689;"	d
AL_EQUALIZER_MAX_HIGH_CUTOFF	.\inc\openal\efx.h	689;"	d
AL_EQUALIZER_MAX_HIGH_GAIN	.\OpenAL 1.1 SDK\include\efx.h	685;"	d
AL_EQUALIZER_MAX_HIGH_GAIN	.\inc\openal\efx.h	685;"	d
AL_EQUALIZER_MAX_LOW_CUTOFF	.\OpenAL 1.1 SDK\include\efx.h	657;"	d
AL_EQUALIZER_MAX_LOW_CUTOFF	.\inc\openal\efx.h	657;"	d
AL_EQUALIZER_MAX_LOW_GAIN	.\OpenAL 1.1 SDK\include\efx.h	653;"	d
AL_EQUALIZER_MAX_LOW_GAIN	.\inc\openal\efx.h	653;"	d
AL_EQUALIZER_MAX_MID1_CENTER	.\OpenAL 1.1 SDK\include\efx.h	665;"	d
AL_EQUALIZER_MAX_MID1_CENTER	.\inc\openal\efx.h	665;"	d
AL_EQUALIZER_MAX_MID1_GAIN	.\OpenAL 1.1 SDK\include\efx.h	661;"	d
AL_EQUALIZER_MAX_MID1_GAIN	.\inc\openal\efx.h	661;"	d
AL_EQUALIZER_MAX_MID1_WIDTH	.\OpenAL 1.1 SDK\include\efx.h	669;"	d
AL_EQUALIZER_MAX_MID1_WIDTH	.\inc\openal\efx.h	669;"	d
AL_EQUALIZER_MAX_MID2_CENTER	.\OpenAL 1.1 SDK\include\efx.h	677;"	d
AL_EQUALIZER_MAX_MID2_CENTER	.\inc\openal\efx.h	677;"	d
AL_EQUALIZER_MAX_MID2_GAIN	.\OpenAL 1.1 SDK\include\efx.h	673;"	d
AL_EQUALIZER_MAX_MID2_GAIN	.\inc\openal\efx.h	673;"	d
AL_EQUALIZER_MAX_MID2_WIDTH	.\OpenAL 1.1 SDK\include\efx.h	681;"	d
AL_EQUALIZER_MAX_MID2_WIDTH	.\inc\openal\efx.h	681;"	d
AL_EQUALIZER_MID1_CENTER	.\OpenAL 1.1 SDK\include\efx.h	137;"	d
AL_EQUALIZER_MID1_CENTER	.\inc\openal\efx.h	137;"	d
AL_EQUALIZER_MID1_GAIN	.\OpenAL 1.1 SDK\include\efx.h	136;"	d
AL_EQUALIZER_MID1_GAIN	.\inc\openal\efx.h	136;"	d
AL_EQUALIZER_MID1_WIDTH	.\OpenAL 1.1 SDK\include\efx.h	138;"	d
AL_EQUALIZER_MID1_WIDTH	.\inc\openal\efx.h	138;"	d
AL_EQUALIZER_MID2_CENTER	.\OpenAL 1.1 SDK\include\efx.h	140;"	d
AL_EQUALIZER_MID2_CENTER	.\inc\openal\efx.h	140;"	d
AL_EQUALIZER_MID2_GAIN	.\OpenAL 1.1 SDK\include\efx.h	139;"	d
AL_EQUALIZER_MID2_GAIN	.\inc\openal\efx.h	139;"	d
AL_EQUALIZER_MID2_WIDTH	.\OpenAL 1.1 SDK\include\efx.h	141;"	d
AL_EQUALIZER_MID2_WIDTH	.\inc\openal\efx.h	141;"	d
AL_EQUALIZER_MIN_HIGH_CUTOFF	.\OpenAL 1.1 SDK\include\efx.h	688;"	d
AL_EQUALIZER_MIN_HIGH_CUTOFF	.\inc\openal\efx.h	688;"	d
AL_EQUALIZER_MIN_HIGH_GAIN	.\OpenAL 1.1 SDK\include\efx.h	684;"	d
AL_EQUALIZER_MIN_HIGH_GAIN	.\inc\openal\efx.h	684;"	d
AL_EQUALIZER_MIN_LOW_CUTOFF	.\OpenAL 1.1 SDK\include\efx.h	656;"	d
AL_EQUALIZER_MIN_LOW_CUTOFF	.\inc\openal\efx.h	656;"	d
AL_EQUALIZER_MIN_LOW_GAIN	.\OpenAL 1.1 SDK\include\efx.h	652;"	d
AL_EQUALIZER_MIN_LOW_GAIN	.\inc\openal\efx.h	652;"	d
AL_EQUALIZER_MIN_MID1_CENTER	.\OpenAL 1.1 SDK\include\efx.h	664;"	d
AL_EQUALIZER_MIN_MID1_CENTER	.\inc\openal\efx.h	664;"	d
AL_EQUALIZER_MIN_MID1_GAIN	.\OpenAL 1.1 SDK\include\efx.h	660;"	d
AL_EQUALIZER_MIN_MID1_GAIN	.\inc\openal\efx.h	660;"	d
AL_EQUALIZER_MIN_MID1_WIDTH	.\OpenAL 1.1 SDK\include\efx.h	668;"	d
AL_EQUALIZER_MIN_MID1_WIDTH	.\inc\openal\efx.h	668;"	d
AL_EQUALIZER_MIN_MID2_CENTER	.\OpenAL 1.1 SDK\include\efx.h	676;"	d
AL_EQUALIZER_MIN_MID2_CENTER	.\inc\openal\efx.h	676;"	d
AL_EQUALIZER_MIN_MID2_GAIN	.\OpenAL 1.1 SDK\include\efx.h	672;"	d
AL_EQUALIZER_MIN_MID2_GAIN	.\inc\openal\efx.h	672;"	d
AL_EQUALIZER_MIN_MID2_WIDTH	.\OpenAL 1.1 SDK\include\efx.h	680;"	d
AL_EQUALIZER_MIN_MID2_WIDTH	.\inc\openal\efx.h	680;"	d
AL_EXPONENT_DISTANCE	.\OpenAL 1.1 SDK\include\al.h	364;"	d
AL_EXPONENT_DISTANCE	.\inc\openal\al.h	364;"	d
AL_EXPONENT_DISTANCE_CLAMPED	.\OpenAL 1.1 SDK\include\al.h	365;"	d
AL_EXPONENT_DISTANCE_CLAMPED	.\inc\openal\al.h	365;"	d
AL_EXTENSIONS	.\OpenAL 1.1 SDK\include\al.h	333;"	d
AL_EXTENSIONS	.\inc\openal\al.h	333;"	d
AL_FALSE	.\OpenAL 1.1 SDK\include\al.h	89;"	d
AL_FALSE	.\inc\openal\al.h	89;"	d
AL_FILTER_BANDPASS	.\OpenAL 1.1 SDK\include\efx.h	205;"	d
AL_FILTER_BANDPASS	.\inc\openal\efx.h	205;"	d
AL_FILTER_FIRST_PARAMETER	.\OpenAL 1.1 SDK\include\efx.h	197;"	d
AL_FILTER_FIRST_PARAMETER	.\inc\openal\efx.h	197;"	d
AL_FILTER_HIGHPASS	.\OpenAL 1.1 SDK\include\efx.h	204;"	d
AL_FILTER_HIGHPASS	.\inc\openal\efx.h	204;"	d
AL_FILTER_LAST_PARAMETER	.\OpenAL 1.1 SDK\include\efx.h	198;"	d
AL_FILTER_LAST_PARAMETER	.\inc\openal\efx.h	198;"	d
AL_FILTER_LOWPASS	.\OpenAL 1.1 SDK\include\efx.h	203;"	d
AL_FILTER_LOWPASS	.\inc\openal\efx.h	203;"	d
AL_FILTER_NULL	.\OpenAL 1.1 SDK\include\efx.h	202;"	d
AL_FILTER_NULL	.\inc\openal\efx.h	202;"	d
AL_FILTER_TYPE	.\OpenAL 1.1 SDK\include\efx.h	199;"	d
AL_FILTER_TYPE	.\inc\openal\efx.h	199;"	d
AL_FLANGER_DEFAULT_DELAY	.\OpenAL 1.1 SDK\include\efx.h	510;"	d
AL_FLANGER_DEFAULT_DELAY	.\inc\openal\efx.h	510;"	d
AL_FLANGER_DEFAULT_DEPTH	.\OpenAL 1.1 SDK\include\efx.h	502;"	d
AL_FLANGER_DEFAULT_DEPTH	.\inc\openal\efx.h	502;"	d
AL_FLANGER_DEFAULT_FEEDBACK	.\OpenAL 1.1 SDK\include\efx.h	506;"	d
AL_FLANGER_DEFAULT_FEEDBACK	.\inc\openal\efx.h	506;"	d
AL_FLANGER_DEFAULT_PHASE	.\OpenAL 1.1 SDK\include\efx.h	494;"	d
AL_FLANGER_DEFAULT_PHASE	.\inc\openal\efx.h	494;"	d
AL_FLANGER_DEFAULT_RATE	.\OpenAL 1.1 SDK\include\efx.h	498;"	d
AL_FLANGER_DEFAULT_RATE	.\inc\openal\efx.h	498;"	d
AL_FLANGER_DEFAULT_WAVEFORM	.\OpenAL 1.1 SDK\include\efx.h	487;"	d
AL_FLANGER_DEFAULT_WAVEFORM	.\inc\openal\efx.h	487;"	d
AL_FLANGER_DELAY	.\OpenAL 1.1 SDK\include\efx.h	100;"	d
AL_FLANGER_DELAY	.\inc\openal\efx.h	100;"	d
AL_FLANGER_DEPTH	.\OpenAL 1.1 SDK\include\efx.h	98;"	d
AL_FLANGER_DEPTH	.\inc\openal\efx.h	98;"	d
AL_FLANGER_FEEDBACK	.\OpenAL 1.1 SDK\include\efx.h	99;"	d
AL_FLANGER_FEEDBACK	.\inc\openal\efx.h	99;"	d
AL_FLANGER_MAX_DELAY	.\OpenAL 1.1 SDK\include\efx.h	509;"	d
AL_FLANGER_MAX_DELAY	.\inc\openal\efx.h	509;"	d
AL_FLANGER_MAX_DEPTH	.\OpenAL 1.1 SDK\include\efx.h	501;"	d
AL_FLANGER_MAX_DEPTH	.\inc\openal\efx.h	501;"	d
AL_FLANGER_MAX_FEEDBACK	.\OpenAL 1.1 SDK\include\efx.h	505;"	d
AL_FLANGER_MAX_FEEDBACK	.\inc\openal\efx.h	505;"	d
AL_FLANGER_MAX_PHASE	.\OpenAL 1.1 SDK\include\efx.h	493;"	d
AL_FLANGER_MAX_PHASE	.\inc\openal\efx.h	493;"	d
AL_FLANGER_MAX_RATE	.\OpenAL 1.1 SDK\include\efx.h	497;"	d
AL_FLANGER_MAX_RATE	.\inc\openal\efx.h	497;"	d
AL_FLANGER_MAX_WAVEFORM	.\OpenAL 1.1 SDK\include\efx.h	486;"	d
AL_FLANGER_MAX_WAVEFORM	.\inc\openal\efx.h	486;"	d
AL_FLANGER_MIN_DELAY	.\OpenAL 1.1 SDK\include\efx.h	508;"	d
AL_FLANGER_MIN_DELAY	.\inc\openal\efx.h	508;"	d
AL_FLANGER_MIN_DEPTH	.\OpenAL 1.1 SDK\include\efx.h	500;"	d
AL_FLANGER_MIN_DEPTH	.\inc\openal\efx.h	500;"	d
AL_FLANGER_MIN_FEEDBACK	.\OpenAL 1.1 SDK\include\efx.h	504;"	d
AL_FLANGER_MIN_FEEDBACK	.\inc\openal\efx.h	504;"	d
AL_FLANGER_MIN_PHASE	.\OpenAL 1.1 SDK\include\efx.h	492;"	d
AL_FLANGER_MIN_PHASE	.\inc\openal\efx.h	492;"	d
AL_FLANGER_MIN_RATE	.\OpenAL 1.1 SDK\include\efx.h	496;"	d
AL_FLANGER_MIN_RATE	.\inc\openal\efx.h	496;"	d
AL_FLANGER_MIN_WAVEFORM	.\OpenAL 1.1 SDK\include\efx.h	485;"	d
AL_FLANGER_MIN_WAVEFORM	.\inc\openal\efx.h	485;"	d
AL_FLANGER_PHASE	.\OpenAL 1.1 SDK\include\efx.h	96;"	d
AL_FLANGER_PHASE	.\inc\openal\efx.h	96;"	d
AL_FLANGER_RATE	.\OpenAL 1.1 SDK\include\efx.h	97;"	d
AL_FLANGER_RATE	.\inc\openal\efx.h	97;"	d
AL_FLANGER_WAVEFORM	.\OpenAL 1.1 SDK\include\efx.h	95;"	d
AL_FLANGER_WAVEFORM	.\inc\openal\efx.h	95;"	d
AL_FLANGER_WAVEFORM_SINUSOID	.\OpenAL 1.1 SDK\include\efx.h	489;"	d
AL_FLANGER_WAVEFORM_SINUSOID	.\inc\openal\efx.h	489;"	d
AL_FLANGER_WAVEFORM_TRIANGLE	.\OpenAL 1.1 SDK\include\efx.h	490;"	d
AL_FLANGER_WAVEFORM_TRIANGLE	.\inc\openal\efx.h	490;"	d
AL_FORMAT_MONO16	.\OpenAL 1.1 SDK\include\al.h	235;"	d
AL_FORMAT_MONO16	.\inc\openal\al.h	235;"	d
AL_FORMAT_MONO8	.\OpenAL 1.1 SDK\include\al.h	234;"	d
AL_FORMAT_MONO8	.\inc\openal\al.h	234;"	d
AL_FORMAT_STEREO16	.\OpenAL 1.1 SDK\include\al.h	237;"	d
AL_FORMAT_STEREO16	.\inc\openal\al.h	237;"	d
AL_FORMAT_STEREO8	.\OpenAL 1.1 SDK\include\al.h	236;"	d
AL_FORMAT_STEREO8	.\inc\openal\al.h	236;"	d
AL_FREQUENCY	.\OpenAL 1.1 SDK\include\al.h	282;"	d
AL_FREQUENCY	.\inc\openal\al.h	282;"	d
AL_FREQUENCY_SHIFTER_DEFAULT_FREQUENCY	.\OpenAL 1.1 SDK\include\efx.h	517;"	d
AL_FREQUENCY_SHIFTER_DEFAULT_FREQUENCY	.\inc\openal\efx.h	517;"	d
AL_FREQUENCY_SHIFTER_DEFAULT_LEFT_DIRECTION	.\OpenAL 1.1 SDK\include\efx.h	521;"	d
AL_FREQUENCY_SHIFTER_DEFAULT_LEFT_DIRECTION	.\inc\openal\efx.h	521;"	d
AL_FREQUENCY_SHIFTER_DEFAULT_RIGHT_DIRECTION	.\OpenAL 1.1 SDK\include\efx.h	525;"	d
AL_FREQUENCY_SHIFTER_DEFAULT_RIGHT_DIRECTION	.\inc\openal\efx.h	525;"	d
AL_FREQUENCY_SHIFTER_DIRECTION_DOWN	.\OpenAL 1.1 SDK\include\efx.h	527;"	d
AL_FREQUENCY_SHIFTER_DIRECTION_DOWN	.\inc\openal\efx.h	527;"	d
AL_FREQUENCY_SHIFTER_DIRECTION_OFF	.\OpenAL 1.1 SDK\include\efx.h	529;"	d
AL_FREQUENCY_SHIFTER_DIRECTION_OFF	.\inc\openal\efx.h	529;"	d
AL_FREQUENCY_SHIFTER_DIRECTION_UP	.\OpenAL 1.1 SDK\include\efx.h	528;"	d
AL_FREQUENCY_SHIFTER_DIRECTION_UP	.\inc\openal\efx.h	528;"	d
AL_FREQUENCY_SHIFTER_FREQUENCY	.\OpenAL 1.1 SDK\include\efx.h	103;"	d
AL_FREQUENCY_SHIFTER_FREQUENCY	.\inc\openal\efx.h	103;"	d
AL_FREQUENCY_SHIFTER_LEFT_DIRECTION	.\OpenAL 1.1 SDK\include\efx.h	104;"	d
AL_FREQUENCY_SHIFTER_LEFT_DIRECTION	.\inc\openal\efx.h	104;"	d
AL_FREQUENCY_SHIFTER_MAX_FREQUENCY	.\OpenAL 1.1 SDK\include\efx.h	516;"	d
AL_FREQUENCY_SHIFTER_MAX_FREQUENCY	.\inc\openal\efx.h	516;"	d
AL_FREQUENCY_SHIFTER_MAX_LEFT_DIRECTION	.\OpenAL 1.1 SDK\include\efx.h	520;"	d
AL_FREQUENCY_SHIFTER_MAX_LEFT_DIRECTION	.\inc\openal\efx.h	520;"	d
AL_FREQUENCY_SHIFTER_MAX_RIGHT_DIRECTION	.\OpenAL 1.1 SDK\include\efx.h	524;"	d
AL_FREQUENCY_SHIFTER_MAX_RIGHT_DIRECTION	.\inc\openal\efx.h	524;"	d
AL_FREQUENCY_SHIFTER_MIN_FREQUENCY	.\OpenAL 1.1 SDK\include\efx.h	515;"	d
AL_FREQUENCY_SHIFTER_MIN_FREQUENCY	.\inc\openal\efx.h	515;"	d
AL_FREQUENCY_SHIFTER_MIN_LEFT_DIRECTION	.\OpenAL 1.1 SDK\include\efx.h	519;"	d
AL_FREQUENCY_SHIFTER_MIN_LEFT_DIRECTION	.\inc\openal\efx.h	519;"	d
AL_FREQUENCY_SHIFTER_MIN_RIGHT_DIRECTION	.\OpenAL 1.1 SDK\include\efx.h	523;"	d
AL_FREQUENCY_SHIFTER_MIN_RIGHT_DIRECTION	.\inc\openal\efx.h	523;"	d
AL_FREQUENCY_SHIFTER_RIGHT_DIRECTION	.\OpenAL 1.1 SDK\include\efx.h	105;"	d
AL_FREQUENCY_SHIFTER_RIGHT_DIRECTION	.\inc\openal\efx.h	105;"	d
AL_GAIN	.\OpenAL 1.1 SDK\include\al.h	165;"	d
AL_GAIN	.\inc\openal\al.h	165;"	d
AL_HIGHPASS_GAIN	.\OpenAL 1.1 SDK\include\efx.h	188;"	d
AL_HIGHPASS_GAIN	.\inc\openal\efx.h	188;"	d
AL_HIGHPASS_GAINLF	.\OpenAL 1.1 SDK\include\efx.h	189;"	d
AL_HIGHPASS_GAINLF	.\inc\openal\efx.h	189;"	d
AL_ILLEGAL_COMMAND	.\OpenAL 1.1 SDK\include\al.h	319;"	d
AL_ILLEGAL_COMMAND	.\inc\openal\al.h	319;"	d
AL_ILLEGAL_ENUM	.\OpenAL 1.1 SDK\include\al.h	308;"	d
AL_ILLEGAL_ENUM	.\inc\openal\al.h	308;"	d
AL_INITIAL	.\OpenAL 1.1 SDK\include\al.h	204;"	d
AL_INITIAL	.\inc\openal\al.h	204;"	d
AL_INVALID	.\OpenAL 1.1 SDK\include\al.h	84;"	d
AL_INVALID	.\inc\openal\al.h	84;"	d
AL_INVALID_ENUM	.\OpenAL 1.1 SDK\include\al.h	309;"	d
AL_INVALID_ENUM	.\inc\openal\al.h	309;"	d
AL_INVALID_NAME	.\OpenAL 1.1 SDK\include\al.h	303;"	d
AL_INVALID_NAME	.\inc\openal\al.h	303;"	d
AL_INVALID_OPERATION	.\OpenAL 1.1 SDK\include\al.h	320;"	d
AL_INVALID_OPERATION	.\inc\openal\al.h	320;"	d
AL_INVALID_VALUE	.\OpenAL 1.1 SDK\include\al.h	314;"	d
AL_INVALID_VALUE	.\inc\openal\al.h	314;"	d
AL_INVERSE_DISTANCE	.\OpenAL 1.1 SDK\include\al.h	360;"	d
AL_INVERSE_DISTANCE	.\inc\openal\al.h	360;"	d
AL_INVERSE_DISTANCE_CLAMPED	.\OpenAL 1.1 SDK\include\al.h	361;"	d
AL_INVERSE_DISTANCE_CLAMPED	.\inc\openal\al.h	361;"	d
AL_LINEAR_DISTANCE	.\OpenAL 1.1 SDK\include\al.h	362;"	d
AL_LINEAR_DISTANCE	.\inc\openal\al.h	362;"	d
AL_LINEAR_DISTANCE_CLAMPED	.\OpenAL 1.1 SDK\include\al.h	363;"	d
AL_LINEAR_DISTANCE_CLAMPED	.\inc\openal\al.h	363;"	d
AL_LOOPING	.\OpenAL 1.1 SDK\include\al.h	145;"	d
AL_LOOPING	.\inc\openal\al.h	145;"	d
AL_LOWPASS_GAIN	.\OpenAL 1.1 SDK\include\efx.h	184;"	d
AL_LOWPASS_GAIN	.\inc\openal\efx.h	184;"	d
AL_LOWPASS_GAINHF	.\OpenAL 1.1 SDK\include\efx.h	185;"	d
AL_LOWPASS_GAINHF	.\inc\openal\efx.h	185;"	d
AL_MAX_AIR_ABSORPTION_FACTOR	.\OpenAL 1.1 SDK\include\efx.h	699;"	d
AL_MAX_AIR_ABSORPTION_FACTOR	.\inc\openal\efx.h	699;"	d
AL_MAX_AUXILIARY_SEND_FILTER_GAINHF_AUTO	.\OpenAL 1.1 SDK\include\efx.h	719;"	d
AL_MAX_AUXILIARY_SEND_FILTER_GAINHF_AUTO	.\inc\openal\efx.h	719;"	d
AL_MAX_AUXILIARY_SEND_FILTER_GAIN_AUTO	.\OpenAL 1.1 SDK\include\efx.h	715;"	d
AL_MAX_AUXILIARY_SEND_FILTER_GAIN_AUTO	.\inc\openal\efx.h	715;"	d
AL_MAX_CONE_OUTER_GAINHF	.\OpenAL 1.1 SDK\include\efx.h	707;"	d
AL_MAX_CONE_OUTER_GAINHF	.\inc\openal\efx.h	707;"	d
AL_MAX_DIRECT_FILTER_GAINHF_AUTO	.\OpenAL 1.1 SDK\include\efx.h	711;"	d
AL_MAX_DIRECT_FILTER_GAINHF_AUTO	.\inc\openal\efx.h	711;"	d
AL_MAX_DISTANCE	.\OpenAL 1.1 SDK\include\al.h	274;"	d
AL_MAX_DISTANCE	.\inc\openal\al.h	274;"	d
AL_MAX_GAIN	.\OpenAL 1.1 SDK\include\al.h	183;"	d
AL_MAX_GAIN	.\inc\openal\al.h	183;"	d
AL_MAX_METERS_PER_UNIT	.\OpenAL 1.1 SDK\include\efx.h	729;"	d
AL_MAX_METERS_PER_UNIT	.\inc\openal\efx.h	729;"	d
AL_MAX_ROOM_ROLLOFF_FACTOR	.\OpenAL 1.1 SDK\include\efx.h	703;"	d
AL_MAX_ROOM_ROLLOFF_FACTOR	.\inc\openal\efx.h	703;"	d
AL_METERS_PER_UNIT	.\OpenAL 1.1 SDK\include\efx.h	28;"	d
AL_METERS_PER_UNIT	.\inc\openal\efx.h	28;"	d
AL_MIN_AIR_ABSORPTION_FACTOR	.\OpenAL 1.1 SDK\include\efx.h	698;"	d
AL_MIN_AIR_ABSORPTION_FACTOR	.\inc\openal\efx.h	698;"	d
AL_MIN_AUXILIARY_SEND_FILTER_GAINHF_AUTO	.\OpenAL 1.1 SDK\include\efx.h	718;"	d
AL_MIN_AUXILIARY_SEND_FILTER_GAINHF_AUTO	.\inc\openal\efx.h	718;"	d
AL_MIN_AUXILIARY_SEND_FILTER_GAIN_AUTO	.\OpenAL 1.1 SDK\include\efx.h	714;"	d
AL_MIN_AUXILIARY_SEND_FILTER_GAIN_AUTO	.\inc\openal\efx.h	714;"	d
AL_MIN_CONE_OUTER_GAINHF	.\OpenAL 1.1 SDK\include\efx.h	706;"	d
AL_MIN_CONE_OUTER_GAINHF	.\inc\openal\efx.h	706;"	d
AL_MIN_DIRECT_FILTER_GAINHF_AUTO	.\OpenAL 1.1 SDK\include\efx.h	710;"	d
AL_MIN_DIRECT_FILTER_GAINHF_AUTO	.\inc\openal\efx.h	710;"	d
AL_MIN_GAIN	.\OpenAL 1.1 SDK\include\al.h	174;"	d
AL_MIN_GAIN	.\inc\openal\al.h	174;"	d
AL_MIN_METERS_PER_UNIT	.\OpenAL 1.1 SDK\include\efx.h	728;"	d
AL_MIN_METERS_PER_UNIT	.\inc\openal\efx.h	728;"	d
AL_MIN_ROOM_ROLLOFF_FACTOR	.\OpenAL 1.1 SDK\include\efx.h	702;"	d
AL_MIN_ROOM_ROLLOFF_FACTOR	.\inc\openal\efx.h	702;"	d
AL_NONE	.\OpenAL 1.1 SDK\include\al.h	86;"	d
AL_NONE	.\inc\openal\al.h	86;"	d
AL_NO_ERROR	.\OpenAL 1.1 SDK\include\al.h	298;"	d
AL_NO_ERROR	.\inc\openal\al.h	298;"	d
AL_ORIENTATION	.\OpenAL 1.1 SDK\include\al.h	190;"	d
AL_ORIENTATION	.\inc\openal\al.h	190;"	d
AL_OUT_OF_MEMORY	.\OpenAL 1.1 SDK\include\al.h	326;"	d
AL_OUT_OF_MEMORY	.\inc\openal\al.h	326;"	d
AL_PAUSED	.\OpenAL 1.1 SDK\include\al.h	206;"	d
AL_PAUSED	.\inc\openal\al.h	206;"	d
AL_PENDING	.\OpenAL 1.1 SDK\include\al.h	293;"	d
AL_PENDING	.\inc\openal\al.h	293;"	d
AL_PITCH	.\OpenAL 1.1 SDK\include\al.h	119;"	d
AL_PITCH	.\inc\openal\al.h	119;"	d
AL_PITCH_SHIFTER_COARSE_TUNE	.\OpenAL 1.1 SDK\include\efx.h	116;"	d
AL_PITCH_SHIFTER_COARSE_TUNE	.\inc\openal\efx.h	116;"	d
AL_PITCH_SHIFTER_DEFAULT_COARSE_TUNE	.\OpenAL 1.1 SDK\include\efx.h	598;"	d
AL_PITCH_SHIFTER_DEFAULT_COARSE_TUNE	.\inc\openal\efx.h	598;"	d
AL_PITCH_SHIFTER_DEFAULT_FINE_TUNE	.\OpenAL 1.1 SDK\include\efx.h	602;"	d
AL_PITCH_SHIFTER_DEFAULT_FINE_TUNE	.\inc\openal\efx.h	602;"	d
AL_PITCH_SHIFTER_FINE_TUNE	.\OpenAL 1.1 SDK\include\efx.h	117;"	d
AL_PITCH_SHIFTER_FINE_TUNE	.\inc\openal\efx.h	117;"	d
AL_PITCH_SHIFTER_MAX_COARSE_TUNE	.\OpenAL 1.1 SDK\include\efx.h	597;"	d
AL_PITCH_SHIFTER_MAX_COARSE_TUNE	.\inc\openal\efx.h	597;"	d
AL_PITCH_SHIFTER_MAX_FINE_TUNE	.\OpenAL 1.1 SDK\include\efx.h	601;"	d
AL_PITCH_SHIFTER_MAX_FINE_TUNE	.\inc\openal\efx.h	601;"	d
AL_PITCH_SHIFTER_MIN_COARSE_TUNE	.\OpenAL 1.1 SDK\include\efx.h	596;"	d
AL_PITCH_SHIFTER_MIN_COARSE_TUNE	.\inc\openal\efx.h	596;"	d
AL_PITCH_SHIFTER_MIN_FINE_TUNE	.\OpenAL 1.1 SDK\include\efx.h	600;"	d
AL_PITCH_SHIFTER_MIN_FINE_TUNE	.\inc\openal\efx.h	600;"	d
AL_PLAYING	.\OpenAL 1.1 SDK\include\al.h	205;"	d
AL_PLAYING	.\inc\openal\al.h	205;"	d
AL_POSITION	.\OpenAL 1.1 SDK\include\al.h	131;"	d
AL_POSITION	.\inc\openal\al.h	131;"	d
AL_PROCESSED	.\OpenAL 1.1 SDK\include\al.h	294;"	d
AL_PROCESSED	.\inc\openal\al.h	294;"	d
AL_REFERENCE_DISTANCE	.\OpenAL 1.1 SDK\include\al.h	247;"	d
AL_REFERENCE_DISTANCE	.\inc\openal\al.h	247;"	d
AL_RENDERER	.\OpenAL 1.1 SDK\include\al.h	332;"	d
AL_RENDERER	.\inc\openal\al.h	332;"	d
AL_REVERB_AIR_ABSORPTION_GAINHF	.\OpenAL 1.1 SDK\include\efx.h	68;"	d
AL_REVERB_AIR_ABSORPTION_GAINHF	.\inc\openal\efx.h	68;"	d
AL_REVERB_DECAY_HFLIMIT	.\OpenAL 1.1 SDK\include\efx.h	70;"	d
AL_REVERB_DECAY_HFLIMIT	.\inc\openal\efx.h	70;"	d
AL_REVERB_DECAY_HFRATIO	.\OpenAL 1.1 SDK\include\efx.h	63;"	d
AL_REVERB_DECAY_HFRATIO	.\inc\openal\efx.h	63;"	d
AL_REVERB_DECAY_TIME	.\OpenAL 1.1 SDK\include\efx.h	62;"	d
AL_REVERB_DECAY_TIME	.\inc\openal\efx.h	62;"	d
AL_REVERB_DEFAULT_AIR_ABSORPTION_GAINHF	.\OpenAL 1.1 SDK\include\efx.h	396;"	d
AL_REVERB_DEFAULT_AIR_ABSORPTION_GAINHF	.\inc\openal\efx.h	396;"	d
AL_REVERB_DEFAULT_DECAY_HFLIMIT	.\OpenAL 1.1 SDK\include\efx.h	404;"	d
AL_REVERB_DEFAULT_DECAY_HFLIMIT	.\inc\openal\efx.h	404;"	d
AL_REVERB_DEFAULT_DECAY_HFRATIO	.\OpenAL 1.1 SDK\include\efx.h	376;"	d
AL_REVERB_DEFAULT_DECAY_HFRATIO	.\inc\openal\efx.h	376;"	d
AL_REVERB_DEFAULT_DECAY_TIME	.\OpenAL 1.1 SDK\include\efx.h	372;"	d
AL_REVERB_DEFAULT_DECAY_TIME	.\inc\openal\efx.h	372;"	d
AL_REVERB_DEFAULT_DENSITY	.\OpenAL 1.1 SDK\include\efx.h	356;"	d
AL_REVERB_DEFAULT_DENSITY	.\inc\openal\efx.h	356;"	d
AL_REVERB_DEFAULT_DIFFUSION	.\OpenAL 1.1 SDK\include\efx.h	360;"	d
AL_REVERB_DEFAULT_DIFFUSION	.\inc\openal\efx.h	360;"	d
AL_REVERB_DEFAULT_GAIN	.\OpenAL 1.1 SDK\include\efx.h	364;"	d
AL_REVERB_DEFAULT_GAIN	.\inc\openal\efx.h	364;"	d
AL_REVERB_DEFAULT_GAINHF	.\OpenAL 1.1 SDK\include\efx.h	368;"	d
AL_REVERB_DEFAULT_GAINHF	.\inc\openal\efx.h	368;"	d
AL_REVERB_DEFAULT_LATE_REVERB_DELAY	.\OpenAL 1.1 SDK\include\efx.h	392;"	d
AL_REVERB_DEFAULT_LATE_REVERB_DELAY	.\inc\openal\efx.h	392;"	d
AL_REVERB_DEFAULT_LATE_REVERB_GAIN	.\OpenAL 1.1 SDK\include\efx.h	388;"	d
AL_REVERB_DEFAULT_LATE_REVERB_GAIN	.\inc\openal\efx.h	388;"	d
AL_REVERB_DEFAULT_REFLECTIONS_DELAY	.\OpenAL 1.1 SDK\include\efx.h	384;"	d
AL_REVERB_DEFAULT_REFLECTIONS_DELAY	.\inc\openal\efx.h	384;"	d
AL_REVERB_DEFAULT_REFLECTIONS_GAIN	.\OpenAL 1.1 SDK\include\efx.h	380;"	d
AL_REVERB_DEFAULT_REFLECTIONS_GAIN	.\inc\openal\efx.h	380;"	d
AL_REVERB_DEFAULT_ROOM_ROLLOFF_FACTOR	.\OpenAL 1.1 SDK\include\efx.h	400;"	d
AL_REVERB_DEFAULT_ROOM_ROLLOFF_FACTOR	.\inc\openal\efx.h	400;"	d
AL_REVERB_DENSITY	.\OpenAL 1.1 SDK\include\efx.h	58;"	d
AL_REVERB_DENSITY	.\inc\openal\efx.h	58;"	d
AL_REVERB_DIFFUSION	.\OpenAL 1.1 SDK\include\efx.h	59;"	d
AL_REVERB_DIFFUSION	.\inc\openal\efx.h	59;"	d
AL_REVERB_GAIN	.\OpenAL 1.1 SDK\include\efx.h	60;"	d
AL_REVERB_GAIN	.\inc\openal\efx.h	60;"	d
AL_REVERB_GAINHF	.\OpenAL 1.1 SDK\include\efx.h	61;"	d
AL_REVERB_GAINHF	.\inc\openal\efx.h	61;"	d
AL_REVERB_LATE_REVERB_DELAY	.\OpenAL 1.1 SDK\include\efx.h	67;"	d
AL_REVERB_LATE_REVERB_DELAY	.\inc\openal\efx.h	67;"	d
AL_REVERB_LATE_REVERB_GAIN	.\OpenAL 1.1 SDK\include\efx.h	66;"	d
AL_REVERB_LATE_REVERB_GAIN	.\inc\openal\efx.h	66;"	d
AL_REVERB_MAX_AIR_ABSORPTION_GAINHF	.\OpenAL 1.1 SDK\include\efx.h	395;"	d
AL_REVERB_MAX_AIR_ABSORPTION_GAINHF	.\inc\openal\efx.h	395;"	d
AL_REVERB_MAX_DECAY_HFLIMIT	.\OpenAL 1.1 SDK\include\efx.h	403;"	d
AL_REVERB_MAX_DECAY_HFLIMIT	.\inc\openal\efx.h	403;"	d
AL_REVERB_MAX_DECAY_HFRATIO	.\OpenAL 1.1 SDK\include\efx.h	375;"	d
AL_REVERB_MAX_DECAY_HFRATIO	.\inc\openal\efx.h	375;"	d
AL_REVERB_MAX_DECAY_TIME	.\OpenAL 1.1 SDK\include\efx.h	371;"	d
AL_REVERB_MAX_DECAY_TIME	.\inc\openal\efx.h	371;"	d
AL_REVERB_MAX_DENSITY	.\OpenAL 1.1 SDK\include\efx.h	355;"	d
AL_REVERB_MAX_DENSITY	.\inc\openal\efx.h	355;"	d
AL_REVERB_MAX_DIFFUSION	.\OpenAL 1.1 SDK\include\efx.h	359;"	d
AL_REVERB_MAX_DIFFUSION	.\inc\openal\efx.h	359;"	d
AL_REVERB_MAX_GAIN	.\OpenAL 1.1 SDK\include\efx.h	363;"	d
AL_REVERB_MAX_GAIN	.\inc\openal\efx.h	363;"	d
AL_REVERB_MAX_GAINHF	.\OpenAL 1.1 SDK\include\efx.h	367;"	d
AL_REVERB_MAX_GAINHF	.\inc\openal\efx.h	367;"	d
AL_REVERB_MAX_LATE_REVERB_DELAY	.\OpenAL 1.1 SDK\include\efx.h	391;"	d
AL_REVERB_MAX_LATE_REVERB_DELAY	.\inc\openal\efx.h	391;"	d
AL_REVERB_MAX_LATE_REVERB_GAIN	.\OpenAL 1.1 SDK\include\efx.h	387;"	d
AL_REVERB_MAX_LATE_REVERB_GAIN	.\inc\openal\efx.h	387;"	d
AL_REVERB_MAX_REFLECTIONS_DELAY	.\OpenAL 1.1 SDK\include\efx.h	383;"	d
AL_REVERB_MAX_REFLECTIONS_DELAY	.\inc\openal\efx.h	383;"	d
AL_REVERB_MAX_REFLECTIONS_GAIN	.\OpenAL 1.1 SDK\include\efx.h	379;"	d
AL_REVERB_MAX_REFLECTIONS_GAIN	.\inc\openal\efx.h	379;"	d
AL_REVERB_MAX_ROOM_ROLLOFF_FACTOR	.\OpenAL 1.1 SDK\include\efx.h	399;"	d
AL_REVERB_MAX_ROOM_ROLLOFF_FACTOR	.\inc\openal\efx.h	399;"	d
AL_REVERB_MIN_AIR_ABSORPTION_GAINHF	.\OpenAL 1.1 SDK\include\efx.h	394;"	d
AL_REVERB_MIN_AIR_ABSORPTION_GAINHF	.\inc\openal\efx.h	394;"	d
AL_REVERB_MIN_DECAY_HFLIMIT	.\OpenAL 1.1 SDK\include\efx.h	402;"	d
AL_REVERB_MIN_DECAY_HFLIMIT	.\inc\openal\efx.h	402;"	d
AL_REVERB_MIN_DECAY_HFRATIO	.\OpenAL 1.1 SDK\include\efx.h	374;"	d
AL_REVERB_MIN_DECAY_HFRATIO	.\inc\openal\efx.h	374;"	d
AL_REVERB_MIN_DECAY_TIME	.\OpenAL 1.1 SDK\include\efx.h	370;"	d
AL_REVERB_MIN_DECAY_TIME	.\inc\openal\efx.h	370;"	d
AL_REVERB_MIN_DENSITY	.\OpenAL 1.1 SDK\include\efx.h	354;"	d
AL_REVERB_MIN_DENSITY	.\inc\openal\efx.h	354;"	d
AL_REVERB_MIN_DIFFUSION	.\OpenAL 1.1 SDK\include\efx.h	358;"	d
AL_REVERB_MIN_DIFFUSION	.\inc\openal\efx.h	358;"	d
AL_REVERB_MIN_GAIN	.\OpenAL 1.1 SDK\include\efx.h	362;"	d
AL_REVERB_MIN_GAIN	.\inc\openal\efx.h	362;"	d
AL_REVERB_MIN_GAINHF	.\OpenAL 1.1 SDK\include\efx.h	366;"	d
AL_REVERB_MIN_GAINHF	.\inc\openal\efx.h	366;"	d
AL_REVERB_MIN_LATE_REVERB_DELAY	.\OpenAL 1.1 SDK\include\efx.h	390;"	d
AL_REVERB_MIN_LATE_REVERB_DELAY	.\inc\openal\efx.h	390;"	d
AL_REVERB_MIN_LATE_REVERB_GAIN	.\OpenAL 1.1 SDK\include\efx.h	386;"	d
AL_REVERB_MIN_LATE_REVERB_GAIN	.\inc\openal\efx.h	386;"	d
AL_REVERB_MIN_REFLECTIONS_DELAY	.\OpenAL 1.1 SDK\include\efx.h	382;"	d
AL_REVERB_MIN_REFLECTIONS_DELAY	.\inc\openal\efx.h	382;"	d
AL_REVERB_MIN_REFLECTIONS_GAIN	.\OpenAL 1.1 SDK\include\efx.h	378;"	d
AL_REVERB_MIN_REFLECTIONS_GAIN	.\inc\openal\efx.h	378;"	d
AL_REVERB_MIN_ROOM_ROLLOFF_FACTOR	.\OpenAL 1.1 SDK\include\efx.h	398;"	d
AL_REVERB_MIN_ROOM_ROLLOFF_FACTOR	.\inc\openal\efx.h	398;"	d
AL_REVERB_REFLECTIONS_DELAY	.\OpenAL 1.1 SDK\include\efx.h	65;"	d
AL_REVERB_REFLECTIONS_DELAY	.\inc\openal\efx.h	65;"	d
AL_REVERB_REFLECTIONS_GAIN	.\OpenAL 1.1 SDK\include\efx.h	64;"	d
AL_REVERB_REFLECTIONS_GAIN	.\inc\openal\efx.h	64;"	d
AL_REVERB_ROOM_ROLLOFF_FACTOR	.\OpenAL 1.1 SDK\include\efx.h	69;"	d
AL_REVERB_ROOM_ROLLOFF_FACTOR	.\inc\openal\efx.h	69;"	d
AL_RING_MODULATOR_DEFAULT_FREQUENCY	.\OpenAL 1.1 SDK\include\efx.h	609;"	d
AL_RING_MODULATOR_DEFAULT_FREQUENCY	.\inc\openal\efx.h	609;"	d
AL_RING_MODULATOR_DEFAULT_HIGHPASS_CUTOFF	.\OpenAL 1.1 SDK\include\efx.h	613;"	d
AL_RING_MODULATOR_DEFAULT_HIGHPASS_CUTOFF	.\inc\openal\efx.h	613;"	d
AL_RING_MODULATOR_DEFAULT_WAVEFORM	.\OpenAL 1.1 SDK\include\efx.h	617;"	d
AL_RING_MODULATOR_DEFAULT_WAVEFORM	.\inc\openal\efx.h	617;"	d
AL_RING_MODULATOR_FREQUENCY	.\OpenAL 1.1 SDK\include\efx.h	120;"	d
AL_RING_MODULATOR_FREQUENCY	.\inc\openal\efx.h	120;"	d
AL_RING_MODULATOR_HIGHPASS_CUTOFF	.\OpenAL 1.1 SDK\include\efx.h	121;"	d
AL_RING_MODULATOR_HIGHPASS_CUTOFF	.\inc\openal\efx.h	121;"	d
AL_RING_MODULATOR_MAX_FREQUENCY	.\OpenAL 1.1 SDK\include\efx.h	608;"	d
AL_RING_MODULATOR_MAX_FREQUENCY	.\inc\openal\efx.h	608;"	d
AL_RING_MODULATOR_MAX_HIGHPASS_CUTOFF	.\OpenAL 1.1 SDK\include\efx.h	612;"	d
AL_RING_MODULATOR_MAX_HIGHPASS_CUTOFF	.\inc\openal\efx.h	612;"	d
AL_RING_MODULATOR_MAX_WAVEFORM	.\OpenAL 1.1 SDK\include\efx.h	616;"	d
AL_RING_MODULATOR_MAX_WAVEFORM	.\inc\openal\efx.h	616;"	d
AL_RING_MODULATOR_MIN_FREQUENCY	.\OpenAL 1.1 SDK\include\efx.h	607;"	d
AL_RING_MODULATOR_MIN_FREQUENCY	.\inc\openal\efx.h	607;"	d
AL_RING_MODULATOR_MIN_HIGHPASS_CUTOFF	.\OpenAL 1.1 SDK\include\efx.h	611;"	d
AL_RING_MODULATOR_MIN_HIGHPASS_CUTOFF	.\inc\openal\efx.h	611;"	d
AL_RING_MODULATOR_MIN_WAVEFORM	.\OpenAL 1.1 SDK\include\efx.h	615;"	d
AL_RING_MODULATOR_MIN_WAVEFORM	.\inc\openal\efx.h	615;"	d
AL_RING_MODULATOR_SAWTOOTH	.\OpenAL 1.1 SDK\include\efx.h	620;"	d
AL_RING_MODULATOR_SAWTOOTH	.\inc\openal\efx.h	620;"	d
AL_RING_MODULATOR_SINUSOID	.\OpenAL 1.1 SDK\include\efx.h	619;"	d
AL_RING_MODULATOR_SINUSOID	.\inc\openal\efx.h	619;"	d
AL_RING_MODULATOR_SQUARE	.\OpenAL 1.1 SDK\include\efx.h	621;"	d
AL_RING_MODULATOR_SQUARE	.\inc\openal\efx.h	621;"	d
AL_RING_MODULATOR_WAVEFORM	.\OpenAL 1.1 SDK\include\efx.h	122;"	d
AL_RING_MODULATOR_WAVEFORM	.\inc\openal\efx.h	122;"	d
AL_ROLLOFF_FACTOR	.\OpenAL 1.1 SDK\include\al.h	255;"	d
AL_ROLLOFF_FACTOR	.\inc\openal\al.h	255;"	d
AL_ROOM_ROLLOFF_FACTOR	.\OpenAL 1.1 SDK\include\efx.h	41;"	d
AL_ROOM_ROLLOFF_FACTOR	.\inc\openal\efx.h	41;"	d
AL_SAMPLE_OFFSET	.\OpenAL 1.1 SDK\include\al.h	219;"	d
AL_SAMPLE_OFFSET	.\inc\openal\al.h	219;"	d
AL_SEC_OFFSET	.\OpenAL 1.1 SDK\include\al.h	218;"	d
AL_SEC_OFFSET	.\inc\openal\al.h	218;"	d
AL_SIZE	.\OpenAL 1.1 SDK\include\al.h	285;"	d
AL_SIZE	.\inc\openal\al.h	285;"	d
AL_SOURCE_RELATIVE	.\OpenAL 1.1 SDK\include\al.h	95;"	d
AL_SOURCE_RELATIVE	.\inc\openal\al.h	95;"	d
AL_SOURCE_STATE	.\OpenAL 1.1 SDK\include\al.h	203;"	d
AL_SOURCE_STATE	.\inc\openal\al.h	203;"	d
AL_SOURCE_TYPE	.\OpenAL 1.1 SDK\include\al.h	228;"	d
AL_SOURCE_TYPE	.\inc\openal\al.h	228;"	d
AL_SPEED_OF_SOUND	.\OpenAL 1.1 SDK\include\al.h	350;"	d
AL_SPEED_OF_SOUND	.\inc\openal\al.h	350;"	d
AL_STATIC	.\OpenAL 1.1 SDK\include\al.h	229;"	d
AL_STATIC	.\inc\openal\al.h	229;"	d
AL_STOPPED	.\OpenAL 1.1 SDK\include\al.h	207;"	d
AL_STOPPED	.\inc\openal\al.h	207;"	d
AL_STREAMING	.\OpenAL 1.1 SDK\include\al.h	230;"	d
AL_STREAMING	.\inc\openal\al.h	230;"	d
AL_TRUE	.\OpenAL 1.1 SDK\include\al.h	92;"	d
AL_TRUE	.\inc\openal\al.h	92;"	d
AL_UNDETERMINED	.\OpenAL 1.1 SDK\include\al.h	231;"	d
AL_UNDETERMINED	.\inc\openal\al.h	231;"	d
AL_UNUSED	.\OpenAL 1.1 SDK\include\al.h	292;"	d
AL_UNUSED	.\inc\openal\al.h	292;"	d
AL_VELOCITY	.\OpenAL 1.1 SDK\include\al.h	137;"	d
AL_VELOCITY	.\inc\openal\al.h	137;"	d
AL_VENDOR	.\OpenAL 1.1 SDK\include\al.h	330;"	d
AL_VENDOR	.\inc\openal\al.h	330;"	d
AL_VERSION	.\OpenAL 1.1 SDK\include\al.h	331;"	d
AL_VERSION	.\inc\openal\al.h	331;"	d
AL_VERSION_1_0	.\OpenAL 1.1 SDK\include\al.h	37;"	d
AL_VERSION_1_0	.\inc\openal\al.h	37;"	d
AL_VERSION_1_1	.\OpenAL 1.1 SDK\include\al.h	38;"	d
AL_VERSION_1_1	.\inc\openal\al.h	38;"	d
AL_VOCAL_MORPHER_DEFAULT_PHONEMEA	.\OpenAL 1.1 SDK\include\efx.h	536;"	d
AL_VOCAL_MORPHER_DEFAULT_PHONEMEA	.\inc\openal\efx.h	536;"	d
AL_VOCAL_MORPHER_DEFAULT_PHONEMEA_COARSE_TUNING	.\OpenAL 1.1 SDK\include\efx.h	540;"	d
AL_VOCAL_MORPHER_DEFAULT_PHONEMEA_COARSE_TUNING	.\inc\openal\efx.h	540;"	d
AL_VOCAL_MORPHER_DEFAULT_PHONEMEB	.\OpenAL 1.1 SDK\include\efx.h	544;"	d
AL_VOCAL_MORPHER_DEFAULT_PHONEMEB	.\inc\openal\efx.h	544;"	d
AL_VOCAL_MORPHER_DEFAULT_PHONEMEB_COARSE_TUNING	.\OpenAL 1.1 SDK\include\efx.h	579;"	d
AL_VOCAL_MORPHER_DEFAULT_PHONEMEB_COARSE_TUNING	.\inc\openal\efx.h	579;"	d
AL_VOCAL_MORPHER_DEFAULT_RATE	.\OpenAL 1.1 SDK\include\efx.h	591;"	d
AL_VOCAL_MORPHER_DEFAULT_RATE	.\inc\openal\efx.h	591;"	d
AL_VOCAL_MORPHER_DEFAULT_WAVEFORM	.\OpenAL 1.1 SDK\include\efx.h	583;"	d
AL_VOCAL_MORPHER_DEFAULT_WAVEFORM	.\inc\openal\efx.h	583;"	d
AL_VOCAL_MORPHER_MAX_PHONEMEA	.\OpenAL 1.1 SDK\include\efx.h	535;"	d
AL_VOCAL_MORPHER_MAX_PHONEMEA	.\inc\openal\efx.h	535;"	d
AL_VOCAL_MORPHER_MAX_PHONEMEA_COARSE_TUNING	.\OpenAL 1.1 SDK\include\efx.h	539;"	d
AL_VOCAL_MORPHER_MAX_PHONEMEA_COARSE_TUNING	.\inc\openal\efx.h	539;"	d
AL_VOCAL_MORPHER_MAX_PHONEMEB	.\OpenAL 1.1 SDK\include\efx.h	543;"	d
AL_VOCAL_MORPHER_MAX_PHONEMEB	.\inc\openal\efx.h	543;"	d
AL_VOCAL_MORPHER_MAX_PHONEMEB_COARSE_TUNING	.\OpenAL 1.1 SDK\include\efx.h	578;"	d
AL_VOCAL_MORPHER_MAX_PHONEMEB_COARSE_TUNING	.\inc\openal\efx.h	578;"	d
AL_VOCAL_MORPHER_MAX_RATE	.\OpenAL 1.1 SDK\include\efx.h	590;"	d
AL_VOCAL_MORPHER_MAX_RATE	.\inc\openal\efx.h	590;"	d
AL_VOCAL_MORPHER_MAX_WAVEFORM	.\OpenAL 1.1 SDK\include\efx.h	582;"	d
AL_VOCAL_MORPHER_MAX_WAVEFORM	.\inc\openal\efx.h	582;"	d
AL_VOCAL_MORPHER_MIN_PHONEMEA	.\OpenAL 1.1 SDK\include\efx.h	534;"	d
AL_VOCAL_MORPHER_MIN_PHONEMEA	.\inc\openal\efx.h	534;"	d
AL_VOCAL_MORPHER_MIN_PHONEMEA_COARSE_TUNING	.\OpenAL 1.1 SDK\include\efx.h	538;"	d
AL_VOCAL_MORPHER_MIN_PHONEMEA_COARSE_TUNING	.\inc\openal\efx.h	538;"	d
AL_VOCAL_MORPHER_MIN_PHONEMEB	.\OpenAL 1.1 SDK\include\efx.h	542;"	d
AL_VOCAL_MORPHER_MIN_PHONEMEB	.\inc\openal\efx.h	542;"	d
AL_VOCAL_MORPHER_MIN_PHONEMEB_COARSE_TUNING	.\OpenAL 1.1 SDK\include\efx.h	577;"	d
AL_VOCAL_MORPHER_MIN_PHONEMEB_COARSE_TUNING	.\inc\openal\efx.h	577;"	d
AL_VOCAL_MORPHER_MIN_RATE	.\OpenAL 1.1 SDK\include\efx.h	589;"	d
AL_VOCAL_MORPHER_MIN_RATE	.\inc\openal\efx.h	589;"	d
AL_VOCAL_MORPHER_MIN_WAVEFORM	.\OpenAL 1.1 SDK\include\efx.h	581;"	d
AL_VOCAL_MORPHER_MIN_WAVEFORM	.\inc\openal\efx.h	581;"	d
AL_VOCAL_MORPHER_PHONEMEA	.\OpenAL 1.1 SDK\include\efx.h	108;"	d
AL_VOCAL_MORPHER_PHONEMEA	.\inc\openal\efx.h	108;"	d
AL_VOCAL_MORPHER_PHONEMEA_COARSE_TUNING	.\OpenAL 1.1 SDK\include\efx.h	109;"	d
AL_VOCAL_MORPHER_PHONEMEA_COARSE_TUNING	.\inc\openal\efx.h	109;"	d
AL_VOCAL_MORPHER_PHONEMEB	.\OpenAL 1.1 SDK\include\efx.h	110;"	d
AL_VOCAL_MORPHER_PHONEMEB	.\inc\openal\efx.h	110;"	d
AL_VOCAL_MORPHER_PHONEMEB_COARSE_TUNING	.\OpenAL 1.1 SDK\include\efx.h	111;"	d
AL_VOCAL_MORPHER_PHONEMEB_COARSE_TUNING	.\inc\openal\efx.h	111;"	d
AL_VOCAL_MORPHER_PHONEME_A	.\OpenAL 1.1 SDK\include\efx.h	546;"	d
AL_VOCAL_MORPHER_PHONEME_A	.\inc\openal\efx.h	546;"	d
AL_VOCAL_MORPHER_PHONEME_AA	.\OpenAL 1.1 SDK\include\efx.h	551;"	d
AL_VOCAL_MORPHER_PHONEME_AA	.\inc\openal\efx.h	551;"	d
AL_VOCAL_MORPHER_PHONEME_AE	.\OpenAL 1.1 SDK\include\efx.h	552;"	d
AL_VOCAL_MORPHER_PHONEME_AE	.\inc\openal\efx.h	552;"	d
AL_VOCAL_MORPHER_PHONEME_AH	.\OpenAL 1.1 SDK\include\efx.h	553;"	d
AL_VOCAL_MORPHER_PHONEME_AH	.\inc\openal\efx.h	553;"	d
AL_VOCAL_MORPHER_PHONEME_AO	.\OpenAL 1.1 SDK\include\efx.h	554;"	d
AL_VOCAL_MORPHER_PHONEME_AO	.\inc\openal\efx.h	554;"	d
AL_VOCAL_MORPHER_PHONEME_B	.\OpenAL 1.1 SDK\include\efx.h	561;"	d
AL_VOCAL_MORPHER_PHONEME_B	.\inc\openal\efx.h	561;"	d
AL_VOCAL_MORPHER_PHONEME_D	.\OpenAL 1.1 SDK\include\efx.h	562;"	d
AL_VOCAL_MORPHER_PHONEME_D	.\inc\openal\efx.h	562;"	d
AL_VOCAL_MORPHER_PHONEME_E	.\OpenAL 1.1 SDK\include\efx.h	547;"	d
AL_VOCAL_MORPHER_PHONEME_E	.\inc\openal\efx.h	547;"	d
AL_VOCAL_MORPHER_PHONEME_EH	.\OpenAL 1.1 SDK\include\efx.h	555;"	d
AL_VOCAL_MORPHER_PHONEME_EH	.\inc\openal\efx.h	555;"	d
AL_VOCAL_MORPHER_PHONEME_ER	.\OpenAL 1.1 SDK\include\efx.h	556;"	d
AL_VOCAL_MORPHER_PHONEME_ER	.\inc\openal\efx.h	556;"	d
AL_VOCAL_MORPHER_PHONEME_F	.\OpenAL 1.1 SDK\include\efx.h	563;"	d
AL_VOCAL_MORPHER_PHONEME_F	.\inc\openal\efx.h	563;"	d
AL_VOCAL_MORPHER_PHONEME_G	.\OpenAL 1.1 SDK\include\efx.h	564;"	d
AL_VOCAL_MORPHER_PHONEME_G	.\inc\openal\efx.h	564;"	d
AL_VOCAL_MORPHER_PHONEME_I	.\OpenAL 1.1 SDK\include\efx.h	548;"	d
AL_VOCAL_MORPHER_PHONEME_I	.\inc\openal\efx.h	548;"	d
AL_VOCAL_MORPHER_PHONEME_IH	.\OpenAL 1.1 SDK\include\efx.h	557;"	d
AL_VOCAL_MORPHER_PHONEME_IH	.\inc\openal\efx.h	557;"	d
AL_VOCAL_MORPHER_PHONEME_IY	.\OpenAL 1.1 SDK\include\efx.h	558;"	d
AL_VOCAL_MORPHER_PHONEME_IY	.\inc\openal\efx.h	558;"	d
AL_VOCAL_MORPHER_PHONEME_J	.\OpenAL 1.1 SDK\include\efx.h	565;"	d
AL_VOCAL_MORPHER_PHONEME_J	.\inc\openal\efx.h	565;"	d
AL_VOCAL_MORPHER_PHONEME_K	.\OpenAL 1.1 SDK\include\efx.h	566;"	d
AL_VOCAL_MORPHER_PHONEME_K	.\inc\openal\efx.h	566;"	d
AL_VOCAL_MORPHER_PHONEME_L	.\OpenAL 1.1 SDK\include\efx.h	567;"	d
AL_VOCAL_MORPHER_PHONEME_L	.\inc\openal\efx.h	567;"	d
AL_VOCAL_MORPHER_PHONEME_M	.\OpenAL 1.1 SDK\include\efx.h	568;"	d
AL_VOCAL_MORPHER_PHONEME_M	.\inc\openal\efx.h	568;"	d
AL_VOCAL_MORPHER_PHONEME_N	.\OpenAL 1.1 SDK\include\efx.h	569;"	d
AL_VOCAL_MORPHER_PHONEME_N	.\inc\openal\efx.h	569;"	d
AL_VOCAL_MORPHER_PHONEME_O	.\OpenAL 1.1 SDK\include\efx.h	549;"	d
AL_VOCAL_MORPHER_PHONEME_O	.\inc\openal\efx.h	549;"	d
AL_VOCAL_MORPHER_PHONEME_P	.\OpenAL 1.1 SDK\include\efx.h	570;"	d
AL_VOCAL_MORPHER_PHONEME_P	.\inc\openal\efx.h	570;"	d
AL_VOCAL_MORPHER_PHONEME_R	.\OpenAL 1.1 SDK\include\efx.h	571;"	d
AL_VOCAL_MORPHER_PHONEME_R	.\inc\openal\efx.h	571;"	d
AL_VOCAL_MORPHER_PHONEME_S	.\OpenAL 1.1 SDK\include\efx.h	572;"	d
AL_VOCAL_MORPHER_PHONEME_S	.\inc\openal\efx.h	572;"	d
AL_VOCAL_MORPHER_PHONEME_T	.\OpenAL 1.1 SDK\include\efx.h	573;"	d
AL_VOCAL_MORPHER_PHONEME_T	.\inc\openal\efx.h	573;"	d
AL_VOCAL_MORPHER_PHONEME_U	.\OpenAL 1.1 SDK\include\efx.h	550;"	d
AL_VOCAL_MORPHER_PHONEME_U	.\inc\openal\efx.h	550;"	d
AL_VOCAL_MORPHER_PHONEME_UH	.\OpenAL 1.1 SDK\include\efx.h	559;"	d
AL_VOCAL_MORPHER_PHONEME_UH	.\inc\openal\efx.h	559;"	d
AL_VOCAL_MORPHER_PHONEME_UW	.\OpenAL 1.1 SDK\include\efx.h	560;"	d
AL_VOCAL_MORPHER_PHONEME_UW	.\inc\openal\efx.h	560;"	d
AL_VOCAL_MORPHER_PHONEME_V	.\OpenAL 1.1 SDK\include\efx.h	574;"	d
AL_VOCAL_MORPHER_PHONEME_V	.\inc\openal\efx.h	574;"	d
AL_VOCAL_MORPHER_PHONEME_Z	.\OpenAL 1.1 SDK\include\efx.h	575;"	d
AL_VOCAL_MORPHER_PHONEME_Z	.\inc\openal\efx.h	575;"	d
AL_VOCAL_MORPHER_RATE	.\OpenAL 1.1 SDK\include\efx.h	113;"	d
AL_VOCAL_MORPHER_RATE	.\inc\openal\efx.h	113;"	d
AL_VOCAL_MORPHER_WAVEFORM	.\OpenAL 1.1 SDK\include\efx.h	112;"	d
AL_VOCAL_MORPHER_WAVEFORM	.\inc\openal\efx.h	112;"	d
AL_VOCAL_MORPHER_WAVEFORM_SAWTOOTH	.\OpenAL 1.1 SDK\include\efx.h	587;"	d
AL_VOCAL_MORPHER_WAVEFORM_SAWTOOTH	.\inc\openal\efx.h	587;"	d
AL_VOCAL_MORPHER_WAVEFORM_SINUSOID	.\OpenAL 1.1 SDK\include\efx.h	585;"	d
AL_VOCAL_MORPHER_WAVEFORM_SINUSOID	.\inc\openal\efx.h	585;"	d
AL_VOCAL_MORPHER_WAVEFORM_TRIANGLE	.\OpenAL 1.1 SDK\include\efx.h	586;"	d
AL_VOCAL_MORPHER_WAVEFORM_TRIANGLE	.\inc\openal\efx.h	586;"	d
ALboolean	.\OpenAL 1.1 SDK\include\al.h	/^typedef char ALboolean;$/;"	t
ALboolean	.\inc\openal\al.h	/^typedef char ALboolean;$/;"	t
ALbyte	.\OpenAL 1.1 SDK\include\al.h	/^typedef char ALbyte;$/;"	t
ALbyte	.\inc\openal\al.h	/^typedef char ALbyte;$/;"	t
ALchar	.\OpenAL 1.1 SDK\include\al.h	/^typedef char ALchar;$/;"	t
ALchar	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	13;"	d
ALchar	.\inc\openal\al.h	/^typedef char ALchar;$/;"	t
ALdouble	.\OpenAL 1.1 SDK\include\al.h	/^typedef double ALdouble;$/;"	t
ALdouble	.\inc\openal\al.h	/^typedef double ALdouble;$/;"	t
ALenum	.\OpenAL 1.1 SDK\include\al.h	/^typedef int ALenum;$/;"	t
ALenum	.\inc\openal\al.h	/^typedef int ALenum;$/;"	t
ALfloat	.\OpenAL 1.1 SDK\include\al.h	/^typedef float ALfloat;$/;"	t
ALfloat	.\inc\openal\al.h	/^typedef float ALfloat;$/;"	t
ALint	.\OpenAL 1.1 SDK\include\al.h	/^typedef int ALint;$/;"	t
ALint	.\inc\openal\al.h	/^typedef int ALint;$/;"	t
ALshort	.\OpenAL 1.1 SDK\include\al.h	/^typedef short ALshort;$/;"	t
ALshort	.\inc\openal\al.h	/^typedef short ALshort;$/;"	t
ALsizei	.\OpenAL 1.1 SDK\include\al.h	/^typedef int ALsizei;$/;"	t
ALsizei	.\inc\openal\al.h	/^typedef int ALsizei;$/;"	t
ALubyte	.\OpenAL 1.1 SDK\include\al.h	/^typedef unsigned char ALubyte;$/;"	t
ALubyte	.\inc\openal\al.h	/^typedef unsigned char ALubyte;$/;"	t
ALuint	.\OpenAL 1.1 SDK\include\al.h	/^typedef unsigned int ALuint;$/;"	t
ALuint	.\inc\openal\al.h	/^typedef unsigned int ALuint;$/;"	t
ALushort	.\OpenAL 1.1 SDK\include\al.h	/^typedef unsigned short ALushort;$/;"	t
ALushort	.\inc\openal\al.h	/^typedef unsigned short ALushort;$/;"	t
ALvoid	.\OpenAL 1.1 SDK\include\al.h	/^typedef void ALvoid;$/;"	t
ALvoid	.\inc\openal\al.h	/^typedef void ALvoid;$/;"	t
BANDPASS_DEFAULT_GAIN	.\OpenAL 1.1 SDK\include\efx.h	334;"	d
BANDPASS_DEFAULT_GAIN	.\inc\openal\efx.h	334;"	d
BANDPASS_DEFAULT_GAINHF	.\OpenAL 1.1 SDK\include\efx.h	338;"	d
BANDPASS_DEFAULT_GAINHF	.\inc\openal\efx.h	338;"	d
BANDPASS_DEFAULT_GAINLF	.\OpenAL 1.1 SDK\include\efx.h	342;"	d
BANDPASS_DEFAULT_GAINLF	.\inc\openal\efx.h	342;"	d
BANDPASS_MAX_GAIN	.\OpenAL 1.1 SDK\include\efx.h	333;"	d
BANDPASS_MAX_GAIN	.\inc\openal\efx.h	333;"	d
BANDPASS_MAX_GAINHF	.\OpenAL 1.1 SDK\include\efx.h	337;"	d
BANDPASS_MAX_GAINHF	.\inc\openal\efx.h	337;"	d
BANDPASS_MAX_GAINLF	.\OpenAL 1.1 SDK\include\efx.h	341;"	d
BANDPASS_MAX_GAINLF	.\inc\openal\efx.h	341;"	d
BANDPASS_MIN_GAIN	.\OpenAL 1.1 SDK\include\efx.h	332;"	d
BANDPASS_MIN_GAIN	.\inc\openal\efx.h	332;"	d
BANDPASS_MIN_GAINHF	.\OpenAL 1.1 SDK\include\efx.h	336;"	d
BANDPASS_MIN_GAINHF	.\inc\openal\efx.h	336;"	d
BANDPASS_MIN_GAINLF	.\OpenAL 1.1 SDK\include\efx.h	340;"	d
BANDPASS_MIN_GAINLF	.\inc\openal\efx.h	340;"	d
BUFFERSIZE	.\OpenAL 1.1 SDK\samples\capture\Source\Capture.cpp	28;"	d	file:
BUFFERSIZE	.\src\mic\main.cpp	35;"	d	file:
CWaves	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^CWaves::CWaves()$/;"	f	class:CWaves
CWaves	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^class CWaves  $/;"	c
CommitData	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^void CommitData(void *pOutput, void **pEffectOutputs)$/;"	f
CreateAuxEffectSlot	.\OpenAL 1.1 SDK\samples\efxreverb\Source\EFXReverb.cpp	/^ALboolean CreateAuxEffectSlot(ALuint *puiAuxEffectSlot)$/;"	f
CreateEffect	.\OpenAL 1.1 SDK\samples\efxreverb\Source\EFXReverb.cpp	/^ALboolean CreateEffect(ALuint *puiEffect, ALenum eEffectType)$/;"	f
CreateFilter	.\OpenAL 1.1 SDK\samples\efxfilter\Source\EFXFilter.cpp	/^ALboolean CreateFilter( ALuint *filter, ALenum filterType, ALfloat gain, ALfloat gainHF)$/;"	f
DecodeOggVorbis	.\OpenAL 1.1 SDK\samples\playoggvorbis\Source\PlayOggVorbis.cpp	/^unsigned long DecodeOggVorbis(OggVorbis_File *psOggVorbisFile, char *pDecodeBuffer, unsigned long ulBufferSize, unsigned long ulChannels)$/;"	f
DeleteWaveFile	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^WAVERESULT CWaves::DeleteWaveFile(WAVEID WaveID)$/;"	f	class:CWaves
EAXEXCLUSIONPROPERTIES	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^} EAXEXCLUSIONPROPERTIES, *LPEAXEXCLUSIONPROPERTIES;$/;"	t	typeref:struct:_EAXEXCLUSIONPROPERTIES
EAXEXCLUSIONPROPERTIES	.\inc\openal\EFX-Util.h	/^} EAXEXCLUSIONPROPERTIES, *LPEAXEXCLUSIONPROPERTIES;$/;"	t	typeref:struct:_EAXEXCLUSIONPROPERTIES
EAXEXCLUSIONPROPERTIES_DEFINED	.\OpenAL 1.1 SDK\include\EFX-Util.h	109;"	d
EAXEXCLUSIONPROPERTIES_DEFINED	.\inc\openal\EFX-Util.h	109;"	d
EAXGetBufferMode	.\OpenAL 1.1 SDK\include\xram.h	/^typedef ALenum    (__cdecl *EAXGetBufferMode)(ALuint buffer, ALint *value);$/;"	t
EAXGetBufferMode	.\inc\openal\xram.h	/^typedef ALenum    (__cdecl *EAXGetBufferMode)(ALuint buffer, ALint *value);$/;"	t
EAXOBSTRUCTIONPROPERTIES	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^} EAXOBSTRUCTIONPROPERTIES, *LPEAXOBSTRUCTIONPROPERTIES;$/;"	t	typeref:struct:_EAXOBSTRUCTIONPROPERTIES
EAXOBSTRUCTIONPROPERTIES	.\inc\openal\EFX-Util.h	/^} EAXOBSTRUCTIONPROPERTIES, *LPEAXOBSTRUCTIONPROPERTIES;$/;"	t	typeref:struct:_EAXOBSTRUCTIONPROPERTIES
EAXOBSTRUCTIONPROPERTIES_DEFINED	.\OpenAL 1.1 SDK\include\EFX-Util.h	89;"	d
EAXOBSTRUCTIONPROPERTIES_DEFINED	.\inc\openal\EFX-Util.h	89;"	d
EAXOCCLUSIONPROPERTIES	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^} EAXOCCLUSIONPROPERTIES, *LPEAXOCCLUSIONPROPERTIES;$/;"	t	typeref:struct:_EAXOCCLUSIONPROPERTIES
EAXOCCLUSIONPROPERTIES	.\inc\openal\EFX-Util.h	/^} EAXOCCLUSIONPROPERTIES, *LPEAXOCCLUSIONPROPERTIES;$/;"	t	typeref:struct:_EAXOCCLUSIONPROPERTIES
EAXOCCLUSIONPROPERTIES_DEFINED	.\OpenAL 1.1 SDK\include\EFX-Util.h	98;"	d
EAXOCCLUSIONPROPERTIES_DEFINED	.\inc\openal\EFX-Util.h	98;"	d
EAXREVERBPROPERTIES	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^} EAXREVERBPROPERTIES, *LPEAXREVERBPROPERTIES;$/;"	t	typeref:struct:_EAXREVERBPROPERTIES
EAXREVERBPROPERTIES	.\inc\openal\EFX-Util.h	/^} EAXREVERBPROPERTIES, *LPEAXREVERBPROPERTIES;$/;"	t	typeref:struct:_EAXREVERBPROPERTIES
EAXREVERBPROPERTIES_DEFINED	.\OpenAL 1.1 SDK\include\EFX-Util.h	28;"	d
EAXREVERBPROPERTIES_DEFINED	.\inc\openal\EFX-Util.h	28;"	d
EAXSetBufferMode	.\OpenAL 1.1 SDK\include\xram.h	/^typedef ALboolean (__cdecl *EAXSetBufferMode)(ALsizei n, ALuint *buffers, ALint value);$/;"	t
EAXSetBufferMode	.\inc\openal\xram.h	/^typedef ALboolean (__cdecl *EAXSetBufferMode)(ALsizei n, ALuint *buffers, ALint value);$/;"	t
EAXVECTOR	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^} EAXVECTOR;$/;"	t	typeref:struct:_EAXVECTOR
EAXVECTOR	.\inc\openal\EFX-Util.h	/^} EAXVECTOR;$/;"	t	typeref:struct:_EAXVECTOR
EAXVECTOR_DEFINED	.\OpenAL 1.1 SDK\include\EFX-Util.h	19;"	d
EAXVECTOR_DEFINED	.\inc\openal\EFX-Util.h	19;"	d
EFXEAXREVERBPROPERTIES	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^} EFXEAXREVERBPROPERTIES, *LPEFXEAXREVERBPROPERTIES;$/;"	t	typeref:struct:__anon2
EFXEAXREVERBPROPERTIES	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	/^} EFXEAXREVERBPROPERTIES, *LPEFXEAXREVERBPROPERTIES;$/;"	t	typeref:struct:__anon18
EFXEAXREVERBPROPERTIES	.\inc\openal\EFX-Util.h	/^} EFXEAXREVERBPROPERTIES, *LPEFXEAXREVERBPROPERTIES;$/;"	t	typeref:struct:__anon1
EFXEAXREVERBPROPERTIES_DEFINED	.\OpenAL 1.1 SDK\include\EFX-Util.h	59;"	d
EFXEAXREVERBPROPERTIES_DEFINED	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	5;"	d
EFXEAXREVERBPROPERTIES_DEFINED	.\inc\openal\EFX-Util.h	59;"	d
EFXLOWPASSFILTER	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^} EFXLOWPASSFILTER, *LPEFXLOWPASSFILTER;$/;"	t	typeref:struct:_EFXLOWPASSFILTER
EFXLOWPASSFILTER	.\inc\openal\EFX-Util.h	/^} EFXLOWPASSFILTER, *LPEFXLOWPASSFILTER;$/;"	t	typeref:struct:_EFXLOWPASSFILTER
EFXLOWPASSFILTER_DEFINED	.\OpenAL 1.1 SDK\include\EFX-Util.h	118;"	d
EFXLOWPASSFILTER_DEFINED	.\inc\openal\EFX-Util.h	118;"	d
EFX_API	.\OpenAL 1.1 SDK\include\EFX-Util.h	127;"	d
EFX_API	.\OpenAL 1.1 SDK\include\EFX-Util.h	129;"	d
EFX_API	.\inc\openal\EFX-Util.h	127;"	d
EFX_API	.\inc\openal\EFX-Util.h	129;"	d
EFX_EAX_REVERB_ALLEY	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	48;"	d
EFX_EAX_REVERB_ARENA	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	43;"	d
EFX_EAX_REVERB_AUDITORIUM	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	40;"	d
EFX_EAX_REVERB_BATHROOM	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	37;"	d
EFX_EAX_REVERB_CARPETTEDHALLWAY	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	45;"	d
EFX_EAX_REVERB_CAVE	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	42;"	d
EFX_EAX_REVERB_CITY	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	50;"	d
EFX_EAX_REVERB_CONCERTHALL	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	41;"	d
EFX_EAX_REVERB_DIZZY	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	58;"	d
EFX_EAX_REVERB_DRUGGED	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	57;"	d
EFX_EAX_REVERB_FOREST	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	49;"	d
EFX_EAX_REVERB_GENERIC	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	34;"	d
EFX_EAX_REVERB_HALLWAY	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	46;"	d
EFX_EAX_REVERB_HANGAR	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	44;"	d
EFX_EAX_REVERB_LIVINGROOM	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	38;"	d
EFX_EAX_REVERB_MOUNTAINS	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	51;"	d
EFX_EAX_REVERB_PADDEDCELL	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	35;"	d
EFX_EAX_REVERB_PARKINGLOT	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	54;"	d
EFX_EAX_REVERB_PLAIN	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	53;"	d
EFX_EAX_REVERB_PSYCHOTIC	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	59;"	d
EFX_EAX_REVERB_QUARRY	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	52;"	d
EFX_EAX_REVERB_ROOM	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	36;"	d
EFX_EAX_REVERB_SEWERPIPE	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	55;"	d
EFX_EAX_REVERB_STONECORRIDOR	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	47;"	d
EFX_EAX_REVERB_STONEROOM	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	39;"	d
EFX_EAX_REVERB_UNDERWATER	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	56;"	d
EFX_UTIL_H_INCLUDED	.\OpenAL 1.1 SDK\include\EFX-Util.h	10;"	d
EFX_UTIL_H_INCLUDED	.\inc\openal\EFX-Util.h	10;"	d
FFTW3_H	.\fftw-dlls\32\include\fftw3.h	48;"	d
FFTW3_H	.\fftw-dlls\64\include\fftw3.h	48;"	d
FFTW3_H	.\inc\fftw\fftw3.h	48;"	d
FFTW_ALLOW_LARGE_GENERIC	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_ALLOW_LARGE_GENERIC$/;"	v
FFTW_ALLOW_LARGE_GENERIC	.\fftw-dlls\32\include\fftw3.h	402;"	d
FFTW_ALLOW_LARGE_GENERIC	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_ALLOW_LARGE_GENERIC$/;"	v
FFTW_ALLOW_LARGE_GENERIC	.\fftw-dlls\64\include\fftw3.h	402;"	d
FFTW_ALLOW_LARGE_GENERIC	.\inc\fftw\fftw3.h	402;"	d
FFTW_ALLOW_PRUNING	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_ALLOW_PRUNING$/;"	v
FFTW_ALLOW_PRUNING	.\fftw-dlls\32\include\fftw3.h	409;"	d
FFTW_ALLOW_PRUNING	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_ALLOW_PRUNING$/;"	v
FFTW_ALLOW_PRUNING	.\fftw-dlls\64\include\fftw3.h	409;"	d
FFTW_ALLOW_PRUNING	.\inc\fftw\fftw3.h	409;"	d
FFTW_BACKWARD	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_BACKWARD$/;"	v
FFTW_BACKWARD	.\fftw-dlls\32\include\fftw3.h	380;"	d
FFTW_BACKWARD	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_BACKWARD$/;"	v
FFTW_BACKWARD	.\fftw-dlls\64\include\fftw3.h	380;"	d
FFTW_BACKWARD	.\inc\fftw\fftw3.h	380;"	d
FFTW_BELIEVE_PCOST	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_BELIEVE_PCOST$/;"	v
FFTW_BELIEVE_PCOST	.\fftw-dlls\32\include\fftw3.h	397;"	d
FFTW_BELIEVE_PCOST	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_BELIEVE_PCOST$/;"	v
FFTW_BELIEVE_PCOST	.\fftw-dlls\64\include\fftw3.h	397;"	d
FFTW_BELIEVE_PCOST	.\inc\fftw\fftw3.h	397;"	d
FFTW_CONCAT	.\fftw-dlls\32\include\fftw3.h	65;"	d
FFTW_CONCAT	.\fftw-dlls\64\include\fftw3.h	65;"	d
FFTW_CONCAT	.\inc\fftw\fftw3.h	65;"	d
FFTW_CONSERVE_MEMORY	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_CONSERVE_MEMORY$/;"	v
FFTW_CONSERVE_MEMORY	.\fftw-dlls\32\include\fftw3.h	388;"	d
FFTW_CONSERVE_MEMORY	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_CONSERVE_MEMORY$/;"	v
FFTW_CONSERVE_MEMORY	.\fftw-dlls\64\include\fftw3.h	388;"	d
FFTW_CONSERVE_MEMORY	.\inc\fftw\fftw3.h	388;"	d
FFTW_DEFINE_API	.\fftw-dlls\32\include\fftw3.h	122;"	d
FFTW_DEFINE_API	.\fftw-dlls\64\include\fftw3.h	122;"	d
FFTW_DEFINE_API	.\inc\fftw\fftw3.h	122;"	d
FFTW_DEFINE_COMPLEX	.\fftw-dlls\32\include\fftw3.h	373;"	d
FFTW_DEFINE_COMPLEX	.\fftw-dlls\32\include\fftw3.h	374;"	d
FFTW_DEFINE_COMPLEX	.\fftw-dlls\32\include\fftw3.h	60;"	d
FFTW_DEFINE_COMPLEX	.\fftw-dlls\32\include\fftw3.h	62;"	d
FFTW_DEFINE_COMPLEX	.\fftw-dlls\64\include\fftw3.h	373;"	d
FFTW_DEFINE_COMPLEX	.\fftw-dlls\64\include\fftw3.h	374;"	d
FFTW_DEFINE_COMPLEX	.\fftw-dlls\64\include\fftw3.h	60;"	d
FFTW_DEFINE_COMPLEX	.\fftw-dlls\64\include\fftw3.h	62;"	d
FFTW_DEFINE_COMPLEX	.\inc\fftw\fftw3.h	373;"	d
FFTW_DEFINE_COMPLEX	.\inc\fftw\fftw3.h	374;"	d
FFTW_DEFINE_COMPLEX	.\inc\fftw\fftw3.h	60;"	d
FFTW_DEFINE_COMPLEX	.\inc\fftw\fftw3.h	62;"	d
FFTW_DESTROY_INPUT	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_DESTROY_INPUT$/;"	v
FFTW_DESTROY_INPUT	.\fftw-dlls\32\include\fftw3.h	386;"	d
FFTW_DESTROY_INPUT	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_DESTROY_INPUT$/;"	v
FFTW_DESTROY_INPUT	.\fftw-dlls\64\include\fftw3.h	386;"	d
FFTW_DESTROY_INPUT	.\inc\fftw\fftw3.h	386;"	d
FFTW_DHT	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_DHT$/;"	v
FFTW_DHT	.\fftw-dlls\32\include\fftw3.h	/^     FFTW_R2HC=0, FFTW_HC2R=1, FFTW_DHT=2,$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_DHT	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_DHT$/;"	v
FFTW_DHT	.\fftw-dlls\64\include\fftw3.h	/^     FFTW_R2HC=0, FFTW_HC2R=1, FFTW_DHT=2,$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_DHT	.\inc\fftw\fftw3.h	/^     FFTW_R2HC=0, FFTW_HC2R=1, FFTW_DHT=2,$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_DLL	.\fftw-dlls\32\include\fftw3.h	73;"	d
FFTW_DLL	.\fftw-dlls\64\include\fftw3.h	73;"	d
FFTW_DLL	.\inc\fftw\fftw3.h	73;"	d
FFTW_ESTIMATE	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_ESTIMATE$/;"	v
FFTW_ESTIMATE	.\fftw-dlls\32\include\fftw3.h	392;"	d
FFTW_ESTIMATE	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_ESTIMATE$/;"	v
FFTW_ESTIMATE	.\fftw-dlls\64\include\fftw3.h	392;"	d
FFTW_ESTIMATE	.\inc\fftw\fftw3.h	392;"	d
FFTW_ESTIMATE_PATIENT	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_ESTIMATE_PATIENT$/;"	v
FFTW_ESTIMATE_PATIENT	.\fftw-dlls\32\include\fftw3.h	396;"	d
FFTW_ESTIMATE_PATIENT	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_ESTIMATE_PATIENT$/;"	v
FFTW_ESTIMATE_PATIENT	.\fftw-dlls\64\include\fftw3.h	396;"	d
FFTW_ESTIMATE_PATIENT	.\inc\fftw\fftw3.h	396;"	d
FFTW_EXHAUSTIVE	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_EXHAUSTIVE$/;"	v
FFTW_EXHAUSTIVE	.\fftw-dlls\32\include\fftw3.h	389;"	d
FFTW_EXHAUSTIVE	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_EXHAUSTIVE$/;"	v
FFTW_EXHAUSTIVE	.\fftw-dlls\64\include\fftw3.h	389;"	d
FFTW_EXHAUSTIVE	.\inc\fftw\fftw3.h	389;"	d
FFTW_EXTERN	.\fftw-dlls\32\include\fftw3.h	83;"	d
FFTW_EXTERN	.\fftw-dlls\32\include\fftw3.h	85;"	d
FFTW_EXTERN	.\fftw-dlls\32\include\fftw3.h	88;"	d
FFTW_EXTERN	.\fftw-dlls\64\include\fftw3.h	83;"	d
FFTW_EXTERN	.\fftw-dlls\64\include\fftw3.h	85;"	d
FFTW_EXTERN	.\fftw-dlls\64\include\fftw3.h	88;"	d
FFTW_EXTERN	.\inc\fftw\fftw3.h	83;"	d
FFTW_EXTERN	.\inc\fftw\fftw3.h	85;"	d
FFTW_EXTERN	.\inc\fftw\fftw3.h	88;"	d
FFTW_FORWARD	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_FORWARD$/;"	v
FFTW_FORWARD	.\fftw-dlls\32\include\fftw3.h	379;"	d
FFTW_FORWARD	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_FORWARD$/;"	v
FFTW_FORWARD	.\fftw-dlls\64\include\fftw3.h	379;"	d
FFTW_FORWARD	.\inc\fftw\fftw3.h	379;"	d
FFTW_HC2R	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_HC2R$/;"	v
FFTW_HC2R	.\fftw-dlls\32\include\fftw3.h	/^     FFTW_R2HC=0, FFTW_HC2R=1, FFTW_DHT=2,$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_HC2R	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_HC2R$/;"	v
FFTW_HC2R	.\fftw-dlls\64\include\fftw3.h	/^     FFTW_R2HC=0, FFTW_HC2R=1, FFTW_DHT=2,$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_HC2R	.\inc\fftw\fftw3.h	/^     FFTW_R2HC=0, FFTW_HC2R=1, FFTW_DHT=2,$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_MANGLE_DOUBLE	.\fftw-dlls\32\include\fftw3.h	66;"	d
FFTW_MANGLE_DOUBLE	.\fftw-dlls\64\include\fftw3.h	66;"	d
FFTW_MANGLE_DOUBLE	.\inc\fftw\fftw3.h	66;"	d
FFTW_MANGLE_FLOAT	.\fftw-dlls\32\include\fftw3.h	67;"	d
FFTW_MANGLE_FLOAT	.\fftw-dlls\64\include\fftw3.h	67;"	d
FFTW_MANGLE_FLOAT	.\inc\fftw\fftw3.h	67;"	d
FFTW_MANGLE_LONG_DOUBLE	.\fftw-dlls\32\include\fftw3.h	68;"	d
FFTW_MANGLE_LONG_DOUBLE	.\fftw-dlls\64\include\fftw3.h	68;"	d
FFTW_MANGLE_LONG_DOUBLE	.\inc\fftw\fftw3.h	68;"	d
FFTW_MANGLE_QUAD	.\fftw-dlls\32\include\fftw3.h	69;"	d
FFTW_MANGLE_QUAD	.\fftw-dlls\64\include\fftw3.h	69;"	d
FFTW_MANGLE_QUAD	.\inc\fftw\fftw3.h	69;"	d
FFTW_MEASURE	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_MEASURE$/;"	v
FFTW_MEASURE	.\fftw-dlls\32\include\fftw3.h	385;"	d
FFTW_MEASURE	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_MEASURE$/;"	v
FFTW_MEASURE	.\fftw-dlls\64\include\fftw3.h	385;"	d
FFTW_MEASURE	.\inc\fftw\fftw3.h	385;"	d
FFTW_NO_BUFFERING	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_NO_BUFFERING$/;"	v
FFTW_NO_BUFFERING	.\fftw-dlls\32\include\fftw3.h	400;"	d
FFTW_NO_BUFFERING	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_NO_BUFFERING$/;"	v
FFTW_NO_BUFFERING	.\fftw-dlls\64\include\fftw3.h	400;"	d
FFTW_NO_BUFFERING	.\inc\fftw\fftw3.h	400;"	d
FFTW_NO_DFT_R2HC	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_NO_DFT_R2HC$/;"	v
FFTW_NO_DFT_R2HC	.\fftw-dlls\32\include\fftw3.h	398;"	d
FFTW_NO_DFT_R2HC	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_NO_DFT_R2HC$/;"	v
FFTW_NO_DFT_R2HC	.\fftw-dlls\64\include\fftw3.h	398;"	d
FFTW_NO_DFT_R2HC	.\inc\fftw\fftw3.h	398;"	d
FFTW_NO_FIXED_RADIX_LARGE_N	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_NO_FIXED_RADIX_LARGE_N$/;"	v
FFTW_NO_FIXED_RADIX_LARGE_N	.\fftw-dlls\32\include\fftw3.h	408;"	d
FFTW_NO_FIXED_RADIX_LARGE_N	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_NO_FIXED_RADIX_LARGE_N$/;"	v
FFTW_NO_FIXED_RADIX_LARGE_N	.\fftw-dlls\64\include\fftw3.h	408;"	d
FFTW_NO_FIXED_RADIX_LARGE_N	.\inc\fftw\fftw3.h	408;"	d
FFTW_NO_INDIRECT_OP	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_NO_INDIRECT_OP$/;"	v
FFTW_NO_INDIRECT_OP	.\fftw-dlls\32\include\fftw3.h	401;"	d
FFTW_NO_INDIRECT_OP	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_NO_INDIRECT_OP$/;"	v
FFTW_NO_INDIRECT_OP	.\fftw-dlls\64\include\fftw3.h	401;"	d
FFTW_NO_INDIRECT_OP	.\inc\fftw\fftw3.h	401;"	d
FFTW_NO_NONTHREADED	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_NO_NONTHREADED$/;"	v
FFTW_NO_NONTHREADED	.\fftw-dlls\32\include\fftw3.h	399;"	d
FFTW_NO_NONTHREADED	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_NO_NONTHREADED$/;"	v
FFTW_NO_NONTHREADED	.\fftw-dlls\64\include\fftw3.h	399;"	d
FFTW_NO_NONTHREADED	.\inc\fftw\fftw3.h	399;"	d
FFTW_NO_RANK_SPLITS	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_NO_RANK_SPLITS$/;"	v
FFTW_NO_RANK_SPLITS	.\fftw-dlls\32\include\fftw3.h	403;"	d
FFTW_NO_RANK_SPLITS	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_NO_RANK_SPLITS$/;"	v
FFTW_NO_RANK_SPLITS	.\fftw-dlls\64\include\fftw3.h	403;"	d
FFTW_NO_RANK_SPLITS	.\inc\fftw\fftw3.h	403;"	d
FFTW_NO_SIMD	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_NO_SIMD$/;"	v
FFTW_NO_SIMD	.\fftw-dlls\32\include\fftw3.h	406;"	d
FFTW_NO_SIMD	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_NO_SIMD$/;"	v
FFTW_NO_SIMD	.\fftw-dlls\64\include\fftw3.h	406;"	d
FFTW_NO_SIMD	.\inc\fftw\fftw3.h	406;"	d
FFTW_NO_SLOW	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_NO_SLOW$/;"	v
FFTW_NO_SLOW	.\fftw-dlls\32\include\fftw3.h	407;"	d
FFTW_NO_SLOW	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_NO_SLOW$/;"	v
FFTW_NO_SLOW	.\fftw-dlls\64\include\fftw3.h	407;"	d
FFTW_NO_SLOW	.\inc\fftw\fftw3.h	407;"	d
FFTW_NO_TIMELIMIT	.\fftw-dlls\32\include\fftw3.h	382;"	d
FFTW_NO_TIMELIMIT	.\fftw-dlls\64\include\fftw3.h	382;"	d
FFTW_NO_TIMELIMIT	.\inc\fftw\fftw3.h	382;"	d
FFTW_NO_VRANK_SPLITS	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_NO_VRANK_SPLITS$/;"	v
FFTW_NO_VRANK_SPLITS	.\fftw-dlls\32\include\fftw3.h	404;"	d
FFTW_NO_VRANK_SPLITS	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_NO_VRANK_SPLITS$/;"	v
FFTW_NO_VRANK_SPLITS	.\fftw-dlls\64\include\fftw3.h	404;"	d
FFTW_NO_VRANK_SPLITS	.\inc\fftw\fftw3.h	404;"	d
FFTW_NO_VRECURSE	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_NO_VRECURSE$/;"	v
FFTW_NO_VRECURSE	.\fftw-dlls\32\include\fftw3.h	405;"	d
FFTW_NO_VRECURSE	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_NO_VRECURSE$/;"	v
FFTW_NO_VRECURSE	.\fftw-dlls\64\include\fftw3.h	405;"	d
FFTW_NO_VRECURSE	.\inc\fftw\fftw3.h	405;"	d
FFTW_PATIENT	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_PATIENT$/;"	v
FFTW_PATIENT	.\fftw-dlls\32\include\fftw3.h	391;"	d
FFTW_PATIENT	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_PATIENT$/;"	v
FFTW_PATIENT	.\fftw-dlls\64\include\fftw3.h	391;"	d
FFTW_PATIENT	.\inc\fftw\fftw3.h	391;"	d
FFTW_PRESERVE_INPUT	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_PRESERVE_INPUT$/;"	v
FFTW_PRESERVE_INPUT	.\fftw-dlls\32\include\fftw3.h	390;"	d
FFTW_PRESERVE_INPUT	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_PRESERVE_INPUT$/;"	v
FFTW_PRESERVE_INPUT	.\fftw-dlls\64\include\fftw3.h	390;"	d
FFTW_PRESERVE_INPUT	.\inc\fftw\fftw3.h	390;"	d
FFTW_R2HC	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_R2HC$/;"	v
FFTW_R2HC	.\fftw-dlls\32\include\fftw3.h	/^     FFTW_R2HC=0, FFTW_HC2R=1, FFTW_DHT=2,$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_R2HC	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_R2HC$/;"	v
FFTW_R2HC	.\fftw-dlls\64\include\fftw3.h	/^     FFTW_R2HC=0, FFTW_HC2R=1, FFTW_DHT=2,$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_R2HC	.\inc\fftw\fftw3.h	/^     FFTW_R2HC=0, FFTW_HC2R=1, FFTW_DHT=2,$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_REDFT00	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_REDFT00$/;"	v
FFTW_REDFT00	.\fftw-dlls\32\include\fftw3.h	/^     FFTW_REDFT00=3, FFTW_REDFT01=4, FFTW_REDFT10=5, FFTW_REDFT11=6,$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_REDFT00	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_REDFT00$/;"	v
FFTW_REDFT00	.\fftw-dlls\64\include\fftw3.h	/^     FFTW_REDFT00=3, FFTW_REDFT01=4, FFTW_REDFT10=5, FFTW_REDFT11=6,$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_REDFT00	.\inc\fftw\fftw3.h	/^     FFTW_REDFT00=3, FFTW_REDFT01=4, FFTW_REDFT10=5, FFTW_REDFT11=6,$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_REDFT01	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_REDFT01$/;"	v
FFTW_REDFT01	.\fftw-dlls\32\include\fftw3.h	/^     FFTW_REDFT00=3, FFTW_REDFT01=4, FFTW_REDFT10=5, FFTW_REDFT11=6,$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_REDFT01	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_REDFT01$/;"	v
FFTW_REDFT01	.\fftw-dlls\64\include\fftw3.h	/^     FFTW_REDFT00=3, FFTW_REDFT01=4, FFTW_REDFT10=5, FFTW_REDFT11=6,$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_REDFT01	.\inc\fftw\fftw3.h	/^     FFTW_REDFT00=3, FFTW_REDFT01=4, FFTW_REDFT10=5, FFTW_REDFT11=6,$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_REDFT10	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_REDFT10$/;"	v
FFTW_REDFT10	.\fftw-dlls\32\include\fftw3.h	/^     FFTW_REDFT00=3, FFTW_REDFT01=4, FFTW_REDFT10=5, FFTW_REDFT11=6,$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_REDFT10	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_REDFT10$/;"	v
FFTW_REDFT10	.\fftw-dlls\64\include\fftw3.h	/^     FFTW_REDFT00=3, FFTW_REDFT01=4, FFTW_REDFT10=5, FFTW_REDFT11=6,$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_REDFT10	.\inc\fftw\fftw3.h	/^     FFTW_REDFT00=3, FFTW_REDFT01=4, FFTW_REDFT10=5, FFTW_REDFT11=6,$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_REDFT11	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_REDFT11$/;"	v
FFTW_REDFT11	.\fftw-dlls\32\include\fftw3.h	/^     FFTW_REDFT00=3, FFTW_REDFT01=4, FFTW_REDFT10=5, FFTW_REDFT11=6,$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_REDFT11	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_REDFT11$/;"	v
FFTW_REDFT11	.\fftw-dlls\64\include\fftw3.h	/^     FFTW_REDFT00=3, FFTW_REDFT01=4, FFTW_REDFT10=5, FFTW_REDFT11=6,$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_REDFT11	.\inc\fftw\fftw3.h	/^     FFTW_REDFT00=3, FFTW_REDFT01=4, FFTW_REDFT10=5, FFTW_REDFT11=6,$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_RODFT00	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_RODFT00$/;"	v
FFTW_RODFT00	.\fftw-dlls\32\include\fftw3.h	/^     FFTW_RODFT00=7, FFTW_RODFT01=8, FFTW_RODFT10=9, FFTW_RODFT11=10$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_RODFT00	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_RODFT00$/;"	v
FFTW_RODFT00	.\fftw-dlls\64\include\fftw3.h	/^     FFTW_RODFT00=7, FFTW_RODFT01=8, FFTW_RODFT10=9, FFTW_RODFT11=10$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_RODFT00	.\inc\fftw\fftw3.h	/^     FFTW_RODFT00=7, FFTW_RODFT01=8, FFTW_RODFT10=9, FFTW_RODFT11=10$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_RODFT01	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_RODFT01$/;"	v
FFTW_RODFT01	.\fftw-dlls\32\include\fftw3.h	/^     FFTW_RODFT00=7, FFTW_RODFT01=8, FFTW_RODFT10=9, FFTW_RODFT11=10$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_RODFT01	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_RODFT01$/;"	v
FFTW_RODFT01	.\fftw-dlls\64\include\fftw3.h	/^     FFTW_RODFT00=7, FFTW_RODFT01=8, FFTW_RODFT10=9, FFTW_RODFT11=10$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_RODFT01	.\inc\fftw\fftw3.h	/^     FFTW_RODFT00=7, FFTW_RODFT01=8, FFTW_RODFT10=9, FFTW_RODFT11=10$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_RODFT10	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_RODFT10$/;"	v
FFTW_RODFT10	.\fftw-dlls\32\include\fftw3.h	/^     FFTW_RODFT00=7, FFTW_RODFT01=8, FFTW_RODFT10=9, FFTW_RODFT11=10$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_RODFT10	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_RODFT10$/;"	v
FFTW_RODFT10	.\fftw-dlls\64\include\fftw3.h	/^     FFTW_RODFT00=7, FFTW_RODFT01=8, FFTW_RODFT10=9, FFTW_RODFT11=10$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_RODFT10	.\inc\fftw\fftw3.h	/^     FFTW_RODFT00=7, FFTW_RODFT01=8, FFTW_RODFT10=9, FFTW_RODFT11=10$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_RODFT11	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_RODFT11$/;"	v
FFTW_RODFT11	.\fftw-dlls\32\include\fftw3.h	/^     FFTW_RODFT00=7, FFTW_RODFT01=8, FFTW_RODFT10=9, FFTW_RODFT11=10$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_RODFT11	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_RODFT11$/;"	v
FFTW_RODFT11	.\fftw-dlls\64\include\fftw3.h	/^     FFTW_RODFT00=7, FFTW_RODFT01=8, FFTW_RODFT10=9, FFTW_RODFT11=10$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_RODFT11	.\inc\fftw\fftw3.h	/^     FFTW_RODFT00=7, FFTW_RODFT01=8, FFTW_RODFT10=9, FFTW_RODFT11=10$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_UNALIGNED	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_UNALIGNED$/;"	v
FFTW_UNALIGNED	.\fftw-dlls\32\include\fftw3.h	387;"	d
FFTW_UNALIGNED	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_UNALIGNED$/;"	v
FFTW_UNALIGNED	.\fftw-dlls\64\include\fftw3.h	387;"	d
FFTW_UNALIGNED	.\inc\fftw\fftw3.h	387;"	d
FFTW_WISDOM_ONLY	.\fftw-dlls\32\fftw3.f	/^      INTEGER FFTW_WISDOM_ONLY$/;"	v
FFTW_WISDOM_ONLY	.\fftw-dlls\32\include\fftw3.h	393;"	d
FFTW_WISDOM_ONLY	.\fftw-dlls\64\fftw3.f	/^      INTEGER FFTW_WISDOM_ONLY$/;"	v
FFTW_WISDOM_ONLY	.\fftw-dlls\64\include\fftw3.h	393;"	d
FFTW_WISDOM_ONLY	.\inc\fftw\fftw3.h	393;"	d
FilterDevicesExtension	.\OpenAL 1.1 SDK\samples\framework\Win32\aldlist.cpp	/^void ALDeviceList::FilterDevicesExtension(char *szExtName)$/;"	f	class:ALDeviceList
FilterDevicesMaxVer	.\OpenAL 1.1 SDK\samples\framework\Win32\aldlist.cpp	/^void ALDeviceList::FilterDevicesMaxVer(int major, int minor)$/;"	f	class:ALDeviceList
FilterDevicesMinVer	.\OpenAL 1.1 SDK\samples\framework\Win32\aldlist.cpp	/^void ALDeviceList::FilterDevicesMinVer(int major, int minor)$/;"	f	class:ALDeviceList
Format	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^    WAVEFORMATEX    Format;$/;"	m	struct:__anon8
GetBuffersProcessed	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^unsigned long GetBuffersProcessed()$/;"	f
GetDefaultDevice	.\OpenAL 1.1 SDK\samples\framework\Win32\aldlist.cpp	/^int ALDeviceList::GetDefaultDevice()$/;"	f	class:ALDeviceList
GetDeviceName	.\OpenAL 1.1 SDK\samples\framework\Win32\aldlist.cpp	/^char * ALDeviceList::GetDeviceName(int index)$/;"	f	class:ALDeviceList
GetDeviceVersion	.\OpenAL 1.1 SDK\samples\framework\Win32\aldlist.cpp	/^void ALDeviceList::GetDeviceVersion(int index, int *major, int *minor)$/;"	f	class:ALDeviceList
GetErrorString	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^char *CWaves::GetErrorString(WAVERESULT wr, char *szErrorString, unsigned long nSizeOfErrorString)$/;"	f	class:CWaves
GetFirstFilteredDevice	.\OpenAL 1.1 SDK\samples\framework\Win32\aldlist.cpp	/^int ALDeviceList::GetFirstFilteredDevice()$/;"	f	class:ALDeviceList
GetMaxNumSources	.\OpenAL 1.1 SDK\samples\framework\Win32\aldlist.cpp	/^unsigned int ALDeviceList::GetMaxNumSources()$/;"	f	class:ALDeviceList
GetMaxNumSources	.\OpenAL 1.1 SDK\samples\framework\Win32\aldlist.cpp	/^unsigned int ALDeviceList::GetMaxNumSources(int index)$/;"	f	class:ALDeviceList
GetModeString	.\OpenAL 1.1 SDK\samples\xramdemo\Source\XRAMDemo.cpp	/^const ALchar *GetModeString(ALenum eBufferMode)$/;"	f
GetNextFilteredDevice	.\OpenAL 1.1 SDK\samples\framework\Win32\aldlist.cpp	/^int ALDeviceList::GetNextFilteredDevice()$/;"	f	class:ALDeviceList
GetNumDevices	.\OpenAL 1.1 SDK\samples\framework\Win32\aldlist.cpp	/^int ALDeviceList::GetNumDevices()$/;"	f	class:ALDeviceList
GetNumEffects	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^unsigned long GetNumEffects()$/;"	f
GetNumOutputChannels	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^unsigned long GetNumOutputChannels()$/;"	f
GetNumSamplesPerBuffer	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^unsigned long GetNumSamplesPerBuffer()$/;"	f
GetWaveALBufferFormat	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^WAVERESULT CWaves::GetWaveALBufferFormat(WAVEID WaveID, PFNALGETENUMVALUE pfnGetEnumValue, unsigned long *pulFormat)$/;"	f	class:CWaves
GetWaveData	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^WAVERESULT CWaves::GetWaveData(WAVEID WaveID, void **lplpAudioData)$/;"	f	class:CWaves
GetWaveDataOffset	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^WAVERESULT CWaves::GetWaveDataOffset(WAVEID WaveID, unsigned long *pulOffset)$/;"	f	class:CWaves
GetWaveFormatExHeader	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^WAVERESULT CWaves::GetWaveFormatExHeader(WAVEID WaveID, WAVEFORMATEX *wfex)$/;"	f	class:CWaves
GetWaveFormatExtensibleHeader	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^WAVERESULT CWaves::GetWaveFormatExtensibleHeader(WAVEID WaveID, WAVEFORMATEXTENSIBLE *wfext)$/;"	f	class:CWaves
GetWaveFrequency	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^WAVERESULT CWaves::GetWaveFrequency(WAVEID WaveID, unsigned long *pulFrequency)$/;"	f	class:CWaves
GetWaveSize	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^WAVERESULT CWaves::GetWaveSize(WAVEID WaveID, unsigned long *size)$/;"	f	class:CWaves
GetWaveType	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^WAVERESULT CWaves::GetWaveType(WAVEID WaveID, WAVEFILETYPE *wfType)$/;"	f	class:CWaves
HIGHPASS_DEFAULT_GAIN	.\OpenAL 1.1 SDK\include\efx.h	322;"	d
HIGHPASS_DEFAULT_GAIN	.\inc\openal\efx.h	322;"	d
HIGHPASS_DEFAULT_GAINLF	.\OpenAL 1.1 SDK\include\efx.h	326;"	d
HIGHPASS_DEFAULT_GAINLF	.\inc\openal\efx.h	326;"	d
HIGHPASS_MAX_GAIN	.\OpenAL 1.1 SDK\include\efx.h	321;"	d
HIGHPASS_MAX_GAIN	.\inc\openal\efx.h	321;"	d
HIGHPASS_MAX_GAINLF	.\OpenAL 1.1 SDK\include\efx.h	325;"	d
HIGHPASS_MAX_GAINLF	.\inc\openal\efx.h	325;"	d
HIGHPASS_MIN_GAIN	.\OpenAL 1.1 SDK\include\efx.h	320;"	d
HIGHPASS_MIN_GAIN	.\inc\openal\efx.h	320;"	d
HIGHPASS_MIN_GAINLF	.\OpenAL 1.1 SDK\include\efx.h	324;"	d
HIGHPASS_MIN_GAINLF	.\inc\openal\efx.h	324;"	d
INITSET	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	50;"	d
InitEFX	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^void InitEFX(unsigned long ulNumEffects)$/;"	f
InitVorbisFile	.\OpenAL 1.1 SDK\samples\playoggvorbis\Source\PlayOggVorbis.cpp	/^void InitVorbisFile()$/;"	f
InitializeOpenAL	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^bool InitializeOpenAL(char *szALDevice, unsigned long ulNumOutputChannels, unsigned long ulNumEffects,$/;"	f
IsExtensionSupported	.\OpenAL 1.1 SDK\samples\framework\Win32\aldlist.cpp	/^bool ALDeviceList::IsExtensionSupported(int index, char *szExtName)$/;"	f	class:ALDeviceList
IsWaveID	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^bool CWaves::IsWaveID(WAVEID WaveID)$/;"	f	class:CWaves
LOWPASS_DEFAULT_GAIN	.\OpenAL 1.1 SDK\include\efx.h	310;"	d
LOWPASS_DEFAULT_GAIN	.\inc\openal\efx.h	310;"	d
LOWPASS_DEFAULT_GAINHF	.\OpenAL 1.1 SDK\include\efx.h	314;"	d
LOWPASS_DEFAULT_GAINHF	.\inc\openal\efx.h	314;"	d
LOWPASS_MAX_GAIN	.\OpenAL 1.1 SDK\include\efx.h	309;"	d
LOWPASS_MAX_GAIN	.\inc\openal\efx.h	309;"	d
LOWPASS_MAX_GAINHF	.\OpenAL 1.1 SDK\include\efx.h	313;"	d
LOWPASS_MAX_GAINHF	.\inc\openal\efx.h	313;"	d
LOWPASS_MIN_GAIN	.\OpenAL 1.1 SDK\include\efx.h	308;"	d
LOWPASS_MIN_GAIN	.\inc\openal\efx.h	308;"	d
LOWPASS_MIN_GAINHF	.\OpenAL 1.1 SDK\include\efx.h	312;"	d
LOWPASS_MIN_GAINHF	.\inc\openal\efx.h	312;"	d
LPALAUXILIARYEFFECTSLOTF	.\OpenAL 1.1 SDK\include\efx.h	/^typedef void (__cdecl *LPALAUXILIARYEFFECTSLOTF)( ALuint asid, ALenum param, ALfloat value ); $/;"	t
LPALAUXILIARYEFFECTSLOTF	.\inc\openal\efx.h	/^typedef void (__cdecl *LPALAUXILIARYEFFECTSLOTF)( ALuint asid, ALenum param, ALfloat value ); $/;"	t
LPALAUXILIARYEFFECTSLOTFV	.\OpenAL 1.1 SDK\include\efx.h	/^typedef void (__cdecl *LPALAUXILIARYEFFECTSLOTFV)( ALuint asid, ALenum param, ALfloat* values ); $/;"	t
LPALAUXILIARYEFFECTSLOTFV	.\inc\openal\efx.h	/^typedef void (__cdecl *LPALAUXILIARYEFFECTSLOTFV)( ALuint asid, ALenum param, ALfloat* values ); $/;"	t
LPALAUXILIARYEFFECTSLOTI	.\OpenAL 1.1 SDK\include\efx.h	/^typedef void (__cdecl *LPALAUXILIARYEFFECTSLOTI)( ALuint asid, ALenum param, ALint value ); $/;"	t
LPALAUXILIARYEFFECTSLOTI	.\inc\openal\efx.h	/^typedef void (__cdecl *LPALAUXILIARYEFFECTSLOTI)( ALuint asid, ALenum param, ALint value ); $/;"	t
LPALAUXILIARYEFFECTSLOTIV	.\OpenAL 1.1 SDK\include\efx.h	/^typedef void (__cdecl *LPALAUXILIARYEFFECTSLOTIV)( ALuint asid, ALenum param, ALint* values ); $/;"	t
LPALAUXILIARYEFFECTSLOTIV	.\inc\openal\efx.h	/^typedef void (__cdecl *LPALAUXILIARYEFFECTSLOTIV)( ALuint asid, ALenum param, ALint* values ); $/;"	t
LPALBUFFER3F	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALBUFFER3F)( ALuint bid, ALenum param, ALfloat value1, ALfloat value2, ALfloat value3 );$/;"	t
LPALBUFFER3F	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALBUFFER3F)( ALuint bid, ALenum param, ALfloat value1, ALfloat value2, ALfloat value3 );$/;"	t
LPALBUFFER3I	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALBUFFER3I)( ALuint bid, ALenum param, ALint value1, ALint value2, ALint value3 );$/;"	t
LPALBUFFER3I	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALBUFFER3I)( ALuint bid, ALenum param, ALint value1, ALint value2, ALint value3 );$/;"	t
LPALBUFFERDATA	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALBUFFERDATA)( ALuint bid, ALenum format, const ALvoid* data, ALsizei size, ALsizei freq );$/;"	t
LPALBUFFERDATA	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALBUFFERDATA)( ALuint bid, ALenum format, const ALvoid* data, ALsizei size, ALsizei freq );$/;"	t
LPALBUFFERDATA	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALBUFFERDATA)( ALuint bid, ALenum format, const ALvoid* data, ALsizei size, ALsizei freq );$/;"	t
LPALBUFFERF	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALBUFFERF)( ALuint bid, ALenum param, ALfloat value);$/;"	t
LPALBUFFERF	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALBUFFERF)( ALuint bid, ALenum param, ALfloat value);$/;"	t
LPALBUFFERFV	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALBUFFERFV)( ALuint bid, ALenum param, const ALfloat* values );$/;"	t
LPALBUFFERFV	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALBUFFERFV)( ALuint bid, ALenum param, const ALfloat* values );$/;"	t
LPALBUFFERI	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALBUFFERI)( ALuint bid, ALenum param, ALint value);$/;"	t
LPALBUFFERI	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALBUFFERI)( ALuint bid, ALenum param, ALint value);$/;"	t
LPALBUFFERIV	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALBUFFERIV)( ALuint bid, ALenum param, const ALint* values );$/;"	t
LPALBUFFERIV	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALBUFFERIV)( ALuint bid, ALenum param, const ALint* values );$/;"	t
LPALCCAPTURECLOSEDEVICE	.\OpenAL 1.1 SDK\include\alc.h	/^typedef ALCboolean     (ALC_APIENTRY *LPALCCAPTURECLOSEDEVICE)( ALCdevice *device );$/;"	t
LPALCCAPTURECLOSEDEVICE	.\inc\openal\alc.h	/^typedef ALCboolean     (ALC_APIENTRY *LPALCCAPTURECLOSEDEVICE)( ALCdevice *device );$/;"	t
LPALCCAPTUREOPENDEVICE	.\OpenAL 1.1 SDK\include\alc.h	/^typedef ALCdevice *    (ALC_APIENTRY *LPALCCAPTUREOPENDEVICE)( const ALCchar *devicename, ALCuint frequency, ALCenum format, ALCsizei buffersize );$/;"	t
LPALCCAPTUREOPENDEVICE	.\inc\openal\alc.h	/^typedef ALCdevice *    (ALC_APIENTRY *LPALCCAPTUREOPENDEVICE)( const ALCchar *devicename, ALCuint frequency, ALCenum format, ALCsizei buffersize );$/;"	t
LPALCCAPTURESAMPLES	.\OpenAL 1.1 SDK\include\alc.h	/^typedef void           (ALC_APIENTRY *LPALCCAPTURESAMPLES)( ALCdevice *device, ALCvoid *buffer, ALCsizei samples );$/;"	t
LPALCCAPTURESAMPLES	.\inc\openal\alc.h	/^typedef void           (ALC_APIENTRY *LPALCCAPTURESAMPLES)( ALCdevice *device, ALCvoid *buffer, ALCsizei samples );$/;"	t
LPALCCAPTURESTART	.\OpenAL 1.1 SDK\include\alc.h	/^typedef void           (ALC_APIENTRY *LPALCCAPTURESTART)( ALCdevice *device );$/;"	t
LPALCCAPTURESTART	.\inc\openal\alc.h	/^typedef void           (ALC_APIENTRY *LPALCCAPTURESTART)( ALCdevice *device );$/;"	t
LPALCCAPTURESTOP	.\OpenAL 1.1 SDK\include\alc.h	/^typedef void           (ALC_APIENTRY *LPALCCAPTURESTOP)( ALCdevice *device );$/;"	t
LPALCCAPTURESTOP	.\inc\openal\alc.h	/^typedef void           (ALC_APIENTRY *LPALCCAPTURESTOP)( ALCdevice *device );$/;"	t
LPALCCLOSEDEVICE	.\OpenAL 1.1 SDK\include\alc.h	/^typedef ALCboolean     (ALC_APIENTRY *LPALCCLOSEDEVICE)( ALCdevice *device );$/;"	t
LPALCCLOSEDEVICE	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef ALCboolean     (ALCAPIENTRY *LPALCCLOSEDEVICE)( ALCdevice *device );$/;"	t
LPALCCLOSEDEVICE	.\inc\openal\alc.h	/^typedef ALCboolean     (ALC_APIENTRY *LPALCCLOSEDEVICE)( ALCdevice *device );$/;"	t
LPALCCREATECONTEXT	.\OpenAL 1.1 SDK\include\alc.h	/^typedef ALCcontext *   (ALC_APIENTRY *LPALCCREATECONTEXT) (ALCdevice *device, const ALCint *attrlist);$/;"	t
LPALCCREATECONTEXT	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef ALCcontext *   (ALCAPIENTRY *LPALCCREATECONTEXT) (ALCdevice *device, const ALCint *attrlist);$/;"	t
LPALCCREATECONTEXT	.\inc\openal\alc.h	/^typedef ALCcontext *   (ALC_APIENTRY *LPALCCREATECONTEXT) (ALCdevice *device, const ALCint *attrlist);$/;"	t
LPALCDESTROYCONTEXT	.\OpenAL 1.1 SDK\include\alc.h	/^typedef void           (ALC_APIENTRY *LPALCDESTROYCONTEXT)( ALCcontext *context );$/;"	t
LPALCDESTROYCONTEXT	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALCAPIENTRY *LPALCDESTROYCONTEXT)( ALCcontext *context );$/;"	t
LPALCDESTROYCONTEXT	.\inc\openal\alc.h	/^typedef void           (ALC_APIENTRY *LPALCDESTROYCONTEXT)( ALCcontext *context );$/;"	t
LPALCGETCONTEXTSDEVICE	.\OpenAL 1.1 SDK\include\alc.h	/^typedef ALCdevice *    (ALC_APIENTRY *LPALCGETCONTEXTSDEVICE)( ALCcontext *context );$/;"	t
LPALCGETCONTEXTSDEVICE	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef ALCdevice *    (ALCAPIENTRY *LPALCGETCONTEXTSDEVICE)( ALCcontext *context );$/;"	t
LPALCGETCONTEXTSDEVICE	.\inc\openal\alc.h	/^typedef ALCdevice *    (ALC_APIENTRY *LPALCGETCONTEXTSDEVICE)( ALCcontext *context );$/;"	t
LPALCGETCURRENTCONTEXT	.\OpenAL 1.1 SDK\include\alc.h	/^typedef ALCcontext *   (ALC_APIENTRY *LPALCGETCURRENTCONTEXT)( void );$/;"	t
LPALCGETCURRENTCONTEXT	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef ALCcontext *   (ALCAPIENTRY *LPALCGETCURRENTCONTEXT)( ALCvoid );$/;"	t
LPALCGETCURRENTCONTEXT	.\inc\openal\alc.h	/^typedef ALCcontext *   (ALC_APIENTRY *LPALCGETCURRENTCONTEXT)( void );$/;"	t
LPALCGETENUMVALUE	.\OpenAL 1.1 SDK\include\alc.h	/^typedef ALCenum        (ALC_APIENTRY *LPALCGETENUMVALUE)(ALCdevice *device, const ALCchar *enumname );$/;"	t
LPALCGETENUMVALUE	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef ALCenum        (ALCAPIENTRY *LPALCGETENUMVALUE)(ALCdevice *device, const ALCchar *enumname );$/;"	t
LPALCGETENUMVALUE	.\inc\openal\alc.h	/^typedef ALCenum        (ALC_APIENTRY *LPALCGETENUMVALUE)(ALCdevice *device, const ALCchar *enumname );$/;"	t
LPALCGETERROR	.\OpenAL 1.1 SDK\include\alc.h	/^typedef ALCenum        (ALC_APIENTRY *LPALCGETERROR)( ALCdevice *device );$/;"	t
LPALCGETERROR	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef ALCenum        (ALCAPIENTRY *LPALCGETERROR)( ALCdevice *device );$/;"	t
LPALCGETERROR	.\inc\openal\alc.h	/^typedef ALCenum        (ALC_APIENTRY *LPALCGETERROR)( ALCdevice *device );$/;"	t
LPALCGETINTEGERV	.\OpenAL 1.1 SDK\include\alc.h	/^typedef void           (ALC_APIENTRY *LPALCGETINTEGERV)( ALCdevice *device, ALCenum param, ALCsizei size, ALCint *dest );$/;"	t
LPALCGETINTEGERV	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALCAPIENTRY *LPALCGETINTEGERV)( ALCdevice *device, ALCenum param, ALCsizei size, ALCint *dest );$/;"	t
LPALCGETINTEGERV	.\inc\openal\alc.h	/^typedef void           (ALC_APIENTRY *LPALCGETINTEGERV)( ALCdevice *device, ALCenum param, ALCsizei size, ALCint *dest );$/;"	t
LPALCGETPROCADDRESS	.\OpenAL 1.1 SDK\include\alc.h	/^typedef void *         (ALC_APIENTRY *LPALCGETPROCADDRESS)(ALCdevice *device, const ALCchar *funcname );$/;"	t
LPALCGETPROCADDRESS	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void *         (ALCAPIENTRY *LPALCGETPROCADDRESS)(ALCdevice *device, const ALCchar *funcname );$/;"	t
LPALCGETPROCADDRESS	.\inc\openal\alc.h	/^typedef void *         (ALC_APIENTRY *LPALCGETPROCADDRESS)(ALCdevice *device, const ALCchar *funcname );$/;"	t
LPALCGETSTRING	.\OpenAL 1.1 SDK\include\alc.h	/^typedef const ALCchar* (ALC_APIENTRY *LPALCGETSTRING)( ALCdevice *device, ALCenum param );$/;"	t
LPALCGETSTRING	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef const ALCchar* (ALCAPIENTRY *LPALCGETSTRING)( ALCdevice *device, ALCenum param );$/;"	t
LPALCGETSTRING	.\inc\openal\alc.h	/^typedef const ALCchar* (ALC_APIENTRY *LPALCGETSTRING)( ALCdevice *device, ALCenum param );$/;"	t
LPALCISEXTENSIONPRESENT	.\OpenAL 1.1 SDK\include\alc.h	/^typedef ALCboolean     (ALC_APIENTRY *LPALCISEXTENSIONPRESENT)( ALCdevice *device, const ALCchar *extname );$/;"	t
LPALCISEXTENSIONPRESENT	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef ALCboolean     (ALCAPIENTRY *LPALCISEXTENSIONPRESENT)( ALCdevice *device, const ALCchar *extname );$/;"	t
LPALCISEXTENSIONPRESENT	.\inc\openal\alc.h	/^typedef ALCboolean     (ALC_APIENTRY *LPALCISEXTENSIONPRESENT)( ALCdevice *device, const ALCchar *extname );$/;"	t
LPALCMAKECONTEXTCURRENT	.\OpenAL 1.1 SDK\include\alc.h	/^typedef ALCboolean     (ALC_APIENTRY *LPALCMAKECONTEXTCURRENT)( ALCcontext *context );$/;"	t
LPALCMAKECONTEXTCURRENT	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef ALCboolean     (ALCAPIENTRY *LPALCMAKECONTEXTCURRENT)( ALCcontext *context );$/;"	t
LPALCMAKECONTEXTCURRENT	.\inc\openal\alc.h	/^typedef ALCboolean     (ALC_APIENTRY *LPALCMAKECONTEXTCURRENT)( ALCcontext *context );$/;"	t
LPALCOPENDEVICE	.\OpenAL 1.1 SDK\include\alc.h	/^typedef ALCdevice *    (ALC_APIENTRY *LPALCOPENDEVICE)( const ALCchar *devicename );$/;"	t
LPALCOPENDEVICE	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef ALCdevice *    (ALCAPIENTRY *LPALCOPENDEVICE)( const ALCchar *devicename );$/;"	t
LPALCOPENDEVICE	.\inc\openal\alc.h	/^typedef ALCdevice *    (ALC_APIENTRY *LPALCOPENDEVICE)( const ALCchar *devicename );$/;"	t
LPALCPROCESSCONTEXT	.\OpenAL 1.1 SDK\include\alc.h	/^typedef void           (ALC_APIENTRY *LPALCPROCESSCONTEXT)( ALCcontext *context );$/;"	t
LPALCPROCESSCONTEXT	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALCAPIENTRY *LPALCPROCESSCONTEXT)( ALCcontext *context );$/;"	t
LPALCPROCESSCONTEXT	.\inc\openal\alc.h	/^typedef void           (ALC_APIENTRY *LPALCPROCESSCONTEXT)( ALCcontext *context );$/;"	t
LPALCSUSPENDCONTEXT	.\OpenAL 1.1 SDK\include\alc.h	/^typedef void           (ALC_APIENTRY *LPALCSUSPENDCONTEXT)( ALCcontext *context );$/;"	t
LPALCSUSPENDCONTEXT	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALCAPIENTRY *LPALCSUSPENDCONTEXT)( ALCcontext *context );$/;"	t
LPALCSUSPENDCONTEXT	.\inc\openal\alc.h	/^typedef void           (ALC_APIENTRY *LPALCSUSPENDCONTEXT)( ALCcontext *context );$/;"	t
LPALDELETEAUXILIARYEFFECTSLOTS	.\OpenAL 1.1 SDK\include\efx.h	/^typedef void (__cdecl *LPALDELETEAUXILIARYEFFECTSLOTS)( ALsizei n, ALuint* slots );$/;"	t
LPALDELETEAUXILIARYEFFECTSLOTS	.\inc\openal\efx.h	/^typedef void (__cdecl *LPALDELETEAUXILIARYEFFECTSLOTS)( ALsizei n, ALuint* slots );$/;"	t
LPALDELETEBUFFERS	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALDELETEBUFFERS)( ALsizei n, const ALuint* buffers );$/;"	t
LPALDELETEBUFFERS	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALDELETEBUFFERS)( ALsizei n, const ALuint* buffers );$/;"	t
LPALDELETEBUFFERS	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALDELETEBUFFERS)( ALsizei n, const ALuint* buffers );$/;"	t
LPALDELETEEFFECTS	.\OpenAL 1.1 SDK\include\efx.h	/^typedef void (__cdecl *LPALDELETEEFFECTS)( ALsizei n, ALuint* effects );$/;"	t
LPALDELETEEFFECTS	.\inc\openal\efx.h	/^typedef void (__cdecl *LPALDELETEEFFECTS)( ALsizei n, ALuint* effects );$/;"	t
LPALDELETEFILTERS	.\OpenAL 1.1 SDK\include\efx.h	/^typedef void (__cdecl *LPALDELETEFILTERS)( ALsizei n, ALuint* filters );$/;"	t
LPALDELETEFILTERS	.\inc\openal\efx.h	/^typedef void (__cdecl *LPALDELETEFILTERS)( ALsizei n, ALuint* filters );$/;"	t
LPALDELETESOURCES	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALDELETESOURCES)( ALsizei n, const ALuint* sources );$/;"	t
LPALDELETESOURCES	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALDELETESOURCES)( ALsizei n, const ALuint* sources );$/;"	t
LPALDELETESOURCES	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALDELETESOURCES)( ALsizei n, const ALuint* sources );$/;"	t
LPALDEVICEINFO	.\OpenAL 1.1 SDK\samples\framework\Win32\aldlist.h	/^} ALDEVICEINFO, *LPALDEVICEINFO;$/;"	t	typeref:struct:__anon4
LPALDISABLE	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALDISABLE)( ALenum capability ); $/;"	t
LPALDISABLE	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALDISABLE)( ALenum capability ); $/;"	t
LPALDISABLE	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALDISABLE)( ALenum capability ); $/;"	t
LPALDISTANCEMODEL	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALDISTANCEMODEL)( ALenum distanceModel );$/;"	t
LPALDISTANCEMODEL	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALDISTANCEMODEL)( ALenum distanceModel );$/;"	t
LPALDISTANCEMODEL	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALDISTANCEMODEL)( ALenum distanceModel );$/;"	t
LPALDOPPLERFACTOR	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALDOPPLERFACTOR)( ALfloat value );$/;"	t
LPALDOPPLERFACTOR	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALDOPPLERFACTOR)( ALfloat value );$/;"	t
LPALDOPPLERFACTOR	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALDOPPLERFACTOR)( ALfloat value );$/;"	t
LPALDOPPLERVELOCITY	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALDOPPLERVELOCITY)( ALfloat value );$/;"	t
LPALDOPPLERVELOCITY	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALDOPPLERVELOCITY)( ALfloat value );$/;"	t
LPALDOPPLERVELOCITY	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALDOPPLERVELOCITY)( ALfloat value );$/;"	t
LPALEFFECTF	.\OpenAL 1.1 SDK\include\efx.h	/^typedef void (__cdecl *LPALEFFECTF)( ALuint eid, ALenum param, ALfloat value); $/;"	t
LPALEFFECTF	.\inc\openal\efx.h	/^typedef void (__cdecl *LPALEFFECTF)( ALuint eid, ALenum param, ALfloat value); $/;"	t
LPALEFFECTFV	.\OpenAL 1.1 SDK\include\efx.h	/^typedef void (__cdecl *LPALEFFECTFV)( ALuint eid, ALenum param, ALfloat* values ); $/;"	t
LPALEFFECTFV	.\inc\openal\efx.h	/^typedef void (__cdecl *LPALEFFECTFV)( ALuint eid, ALenum param, ALfloat* values ); $/;"	t
LPALEFFECTI	.\OpenAL 1.1 SDK\include\efx.h	/^typedef void (__cdecl *LPALEFFECTI)( ALuint eid, ALenum param, ALint value); $/;"	t
LPALEFFECTI	.\inc\openal\efx.h	/^typedef void (__cdecl *LPALEFFECTI)( ALuint eid, ALenum param, ALint value); $/;"	t
LPALEFFECTIV	.\OpenAL 1.1 SDK\include\efx.h	/^typedef void (__cdecl *LPALEFFECTIV)( ALuint eid, ALenum param, ALint* values ); $/;"	t
LPALEFFECTIV	.\inc\openal\efx.h	/^typedef void (__cdecl *LPALEFFECTIV)( ALuint eid, ALenum param, ALint* values ); $/;"	t
LPALENABLE	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALENABLE)( ALenum capability );$/;"	t
LPALENABLE	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALENABLE)( ALenum capability );$/;"	t
LPALENABLE	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALENABLE)( ALenum capability );$/;"	t
LPALFILTERF	.\OpenAL 1.1 SDK\include\efx.h	/^typedef void (__cdecl *LPALFILTERF)( ALuint fid, ALenum param, ALfloat value); $/;"	t
LPALFILTERF	.\inc\openal\efx.h	/^typedef void (__cdecl *LPALFILTERF)( ALuint fid, ALenum param, ALfloat value); $/;"	t
LPALFILTERFV	.\OpenAL 1.1 SDK\include\efx.h	/^typedef void (__cdecl *LPALFILTERFV)( ALuint fid, ALenum param, ALfloat* values ); $/;"	t
LPALFILTERFV	.\inc\openal\efx.h	/^typedef void (__cdecl *LPALFILTERFV)( ALuint fid, ALenum param, ALfloat* values ); $/;"	t
LPALFILTERI	.\OpenAL 1.1 SDK\include\efx.h	/^typedef void (__cdecl *LPALFILTERI)( ALuint fid, ALenum param, ALint value ); $/;"	t
LPALFILTERI	.\inc\openal\efx.h	/^typedef void (__cdecl *LPALFILTERI)( ALuint fid, ALenum param, ALint value ); $/;"	t
LPALFILTERIV	.\OpenAL 1.1 SDK\include\efx.h	/^typedef void (__cdecl *LPALFILTERIV)( ALuint fid, ALenum param, ALint* values ); $/;"	t
LPALFILTERIV	.\inc\openal\efx.h	/^typedef void (__cdecl *LPALFILTERIV)( ALuint fid, ALenum param, ALint* values ); $/;"	t
LPALGENAUXILIARYEFFECTSLOTS	.\OpenAL 1.1 SDK\include\efx.h	/^typedef void (__cdecl *LPALGENAUXILIARYEFFECTSLOTS)( ALsizei n, ALuint* slots ); $/;"	t
LPALGENAUXILIARYEFFECTSLOTS	.\inc\openal\efx.h	/^typedef void (__cdecl *LPALGENAUXILIARYEFFECTSLOTS)( ALsizei n, ALuint* slots ); $/;"	t
LPALGENBUFFERS	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALGENBUFFERS)( ALsizei n, ALuint* buffers );$/;"	t
LPALGENBUFFERS	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALGENBUFFERS)( ALsizei n, ALuint* buffers );$/;"	t
LPALGENBUFFERS	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALGENBUFFERS)( ALsizei n, ALuint* buffers );$/;"	t
LPALGENEFFECTS	.\OpenAL 1.1 SDK\include\efx.h	/^typedef void (__cdecl *LPALGENEFFECTS)( ALsizei n, ALuint* effects );$/;"	t
LPALGENEFFECTS	.\inc\openal\efx.h	/^typedef void (__cdecl *LPALGENEFFECTS)( ALsizei n, ALuint* effects );$/;"	t
LPALGENFILTERS	.\OpenAL 1.1 SDK\include\efx.h	/^typedef void (__cdecl *LPALGENFILTERS)( ALsizei n, ALuint* filters ); $/;"	t
LPALGENFILTERS	.\inc\openal\efx.h	/^typedef void (__cdecl *LPALGENFILTERS)( ALsizei n, ALuint* filters ); $/;"	t
LPALGENSOURCES	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALGENSOURCES)( ALsizei n, ALuint* sources ); $/;"	t
LPALGENSOURCES	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALGENSOURCES)( ALsizei n, ALuint* sources ); $/;"	t
LPALGENSOURCES	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALGENSOURCES)( ALsizei n, ALuint* sources ); $/;"	t
LPALGETAUXILIARYEFFECTSLOTF	.\OpenAL 1.1 SDK\include\efx.h	/^typedef void (__cdecl *LPALGETAUXILIARYEFFECTSLOTF)( ALuint asid, ALenum pname, ALfloat* value );$/;"	t
LPALGETAUXILIARYEFFECTSLOTF	.\inc\openal\efx.h	/^typedef void (__cdecl *LPALGETAUXILIARYEFFECTSLOTF)( ALuint asid, ALenum pname, ALfloat* value );$/;"	t
LPALGETAUXILIARYEFFECTSLOTFV	.\OpenAL 1.1 SDK\include\efx.h	/^typedef void (__cdecl *LPALGETAUXILIARYEFFECTSLOTFV)( ALuint asid, ALenum pname, ALfloat* values );$/;"	t
LPALGETAUXILIARYEFFECTSLOTFV	.\inc\openal\efx.h	/^typedef void (__cdecl *LPALGETAUXILIARYEFFECTSLOTFV)( ALuint asid, ALenum pname, ALfloat* values );$/;"	t
LPALGETAUXILIARYEFFECTSLOTI	.\OpenAL 1.1 SDK\include\efx.h	/^typedef void (__cdecl *LPALGETAUXILIARYEFFECTSLOTI)( ALuint asid, ALenum pname, ALint* value );$/;"	t
LPALGETAUXILIARYEFFECTSLOTI	.\inc\openal\efx.h	/^typedef void (__cdecl *LPALGETAUXILIARYEFFECTSLOTI)( ALuint asid, ALenum pname, ALint* value );$/;"	t
LPALGETAUXILIARYEFFECTSLOTIV	.\OpenAL 1.1 SDK\include\efx.h	/^typedef void (__cdecl *LPALGETAUXILIARYEFFECTSLOTIV)( ALuint asid, ALenum pname, ALint* values );$/;"	t
LPALGETAUXILIARYEFFECTSLOTIV	.\inc\openal\efx.h	/^typedef void (__cdecl *LPALGETAUXILIARYEFFECTSLOTIV)( ALuint asid, ALenum pname, ALint* values );$/;"	t
LPALGETBOOLEAN	.\OpenAL 1.1 SDK\include\al.h	/^typedef ALboolean      (AL_APIENTRY *LPALGETBOOLEAN)( ALenum param );$/;"	t
LPALGETBOOLEAN	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef ALboolean      (ALAPIENTRY *LPALGETBOOLEAN)( ALenum param );$/;"	t
LPALGETBOOLEAN	.\inc\openal\al.h	/^typedef ALboolean      (AL_APIENTRY *LPALGETBOOLEAN)( ALenum param );$/;"	t
LPALGETBOOLEANV	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALGETBOOLEANV)( ALenum param, ALboolean* data );$/;"	t
LPALGETBOOLEANV	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALGETBOOLEANV)( ALenum param, ALboolean* data );$/;"	t
LPALGETBOOLEANV	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALGETBOOLEANV)( ALenum param, ALboolean* data );$/;"	t
LPALGETBUFFER3F	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALGETBUFFER3F)( ALuint bid, ALenum param, ALfloat* value1, ALfloat* value2, ALfloat* value3);$/;"	t
LPALGETBUFFER3F	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALGETBUFFER3F)( ALuint bid, ALenum param, ALfloat* value1, ALfloat* value2, ALfloat* value3);$/;"	t
LPALGETBUFFER3I	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALGETBUFFER3I)( ALuint bid, ALenum param, ALint* value1, ALint* value2, ALint* value3);$/;"	t
LPALGETBUFFER3I	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALGETBUFFER3I)( ALuint bid, ALenum param, ALint* value1, ALint* value2, ALint* value3);$/;"	t
LPALGETBUFFERF	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALGETBUFFERF)( ALuint bid, ALenum param, ALfloat* value );$/;"	t
LPALGETBUFFERF	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALGETBUFFERF)( ALuint bid, ALenum param, ALfloat* value );$/;"	t
LPALGETBUFFERF	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALGETBUFFERF)( ALuint bid, ALenum param, ALfloat* value );$/;"	t
LPALGETBUFFERFV	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALGETBUFFERFV)( ALuint bid, ALenum param, ALfloat* values );$/;"	t
LPALGETBUFFERFV	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALGETBUFFERFV)( ALuint bid, ALenum param, ALfloat* values );$/;"	t
LPALGETBUFFERI	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALGETBUFFERI)( ALuint bid, ALenum param, ALint* value );$/;"	t
LPALGETBUFFERI	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALGETBUFFERI)( ALuint bid, ALenum param, ALint* value );$/;"	t
LPALGETBUFFERI	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALGETBUFFERI)( ALuint bid, ALenum param, ALint* value );$/;"	t
LPALGETBUFFERIV	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALGETBUFFERIV)( ALuint bid, ALenum param, ALint* values );$/;"	t
LPALGETBUFFERIV	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALGETBUFFERIV)( ALuint bid, ALenum param, ALint* values );$/;"	t
LPALGETDOUBLE	.\OpenAL 1.1 SDK\include\al.h	/^typedef ALdouble       (AL_APIENTRY *LPALGETDOUBLE)( ALenum param );$/;"	t
LPALGETDOUBLE	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef ALdouble       (ALAPIENTRY *LPALGETDOUBLE)( ALenum param );$/;"	t
LPALGETDOUBLE	.\inc\openal\al.h	/^typedef ALdouble       (AL_APIENTRY *LPALGETDOUBLE)( ALenum param );$/;"	t
LPALGETDOUBLEV	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALGETDOUBLEV)( ALenum param, ALdouble* data );$/;"	t
LPALGETDOUBLEV	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALGETDOUBLEV)( ALenum param, ALdouble* data );$/;"	t
LPALGETDOUBLEV	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALGETDOUBLEV)( ALenum param, ALdouble* data );$/;"	t
LPALGETEFFECTF	.\OpenAL 1.1 SDK\include\efx.h	/^typedef void (__cdecl *LPALGETEFFECTF)( ALuint eid, ALenum pname, ALfloat* value );$/;"	t
LPALGETEFFECTF	.\inc\openal\efx.h	/^typedef void (__cdecl *LPALGETEFFECTF)( ALuint eid, ALenum pname, ALfloat* value );$/;"	t
LPALGETEFFECTFV	.\OpenAL 1.1 SDK\include\efx.h	/^typedef void (__cdecl *LPALGETEFFECTFV)( ALuint eid, ALenum pname, ALfloat* values );$/;"	t
LPALGETEFFECTFV	.\inc\openal\efx.h	/^typedef void (__cdecl *LPALGETEFFECTFV)( ALuint eid, ALenum pname, ALfloat* values );$/;"	t
LPALGETEFFECTI	.\OpenAL 1.1 SDK\include\efx.h	/^typedef void (__cdecl *LPALGETEFFECTI)( ALuint eid, ALenum pname, ALint* value );$/;"	t
LPALGETEFFECTI	.\inc\openal\efx.h	/^typedef void (__cdecl *LPALGETEFFECTI)( ALuint eid, ALenum pname, ALint* value );$/;"	t
LPALGETEFFECTIV	.\OpenAL 1.1 SDK\include\efx.h	/^typedef void (__cdecl *LPALGETEFFECTIV)( ALuint eid, ALenum pname, ALint* values );$/;"	t
LPALGETEFFECTIV	.\inc\openal\efx.h	/^typedef void (__cdecl *LPALGETEFFECTIV)( ALuint eid, ALenum pname, ALint* values );$/;"	t
LPALGETENUMVALUE	.\OpenAL 1.1 SDK\include\al.h	/^typedef ALenum         (AL_APIENTRY *LPALGETENUMVALUE)( const ALchar* ename );$/;"	t
LPALGETENUMVALUE	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef ALenum         (ALAPIENTRY *LPALGETENUMVALUE)( const ALchar* ename );$/;"	t
LPALGETENUMVALUE	.\inc\openal\al.h	/^typedef ALenum         (AL_APIENTRY *LPALGETENUMVALUE)( const ALchar* ename );$/;"	t
LPALGETERROR	.\OpenAL 1.1 SDK\include\al.h	/^typedef ALenum         (AL_APIENTRY *LPALGETERROR)( void );$/;"	t
LPALGETERROR	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef ALenum         (ALAPIENTRY *LPALGETERROR)( void );$/;"	t
LPALGETERROR	.\inc\openal\al.h	/^typedef ALenum         (AL_APIENTRY *LPALGETERROR)( void );$/;"	t
LPALGETFILTERF	.\OpenAL 1.1 SDK\include\efx.h	/^typedef void (__cdecl *LPALGETFILTERF)( ALuint fid, ALenum pname, ALfloat* value );$/;"	t
LPALGETFILTERF	.\inc\openal\efx.h	/^typedef void (__cdecl *LPALGETFILTERF)( ALuint fid, ALenum pname, ALfloat* value );$/;"	t
LPALGETFILTERFV	.\OpenAL 1.1 SDK\include\efx.h	/^typedef void (__cdecl *LPALGETFILTERFV)( ALuint fid, ALenum pname, ALfloat* values );$/;"	t
LPALGETFILTERFV	.\inc\openal\efx.h	/^typedef void (__cdecl *LPALGETFILTERFV)( ALuint fid, ALenum pname, ALfloat* values );$/;"	t
LPALGETFILTERI	.\OpenAL 1.1 SDK\include\efx.h	/^typedef void (__cdecl *LPALGETFILTERI)( ALuint fid, ALenum pname, ALint* value );$/;"	t
LPALGETFILTERI	.\inc\openal\efx.h	/^typedef void (__cdecl *LPALGETFILTERI)( ALuint fid, ALenum pname, ALint* value );$/;"	t
LPALGETFILTERIV	.\OpenAL 1.1 SDK\include\efx.h	/^typedef void (__cdecl *LPALGETFILTERIV)( ALuint fid, ALenum pname, ALint* values );$/;"	t
LPALGETFILTERIV	.\inc\openal\efx.h	/^typedef void (__cdecl *LPALGETFILTERIV)( ALuint fid, ALenum pname, ALint* values );$/;"	t
LPALGETFLOAT	.\OpenAL 1.1 SDK\include\al.h	/^typedef ALfloat        (AL_APIENTRY *LPALGETFLOAT)( ALenum param );$/;"	t
LPALGETFLOAT	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef ALfloat        (ALAPIENTRY *LPALGETFLOAT)( ALenum param );$/;"	t
LPALGETFLOAT	.\inc\openal\al.h	/^typedef ALfloat        (AL_APIENTRY *LPALGETFLOAT)( ALenum param );$/;"	t
LPALGETFLOATV	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALGETFLOATV)( ALenum param, ALfloat* data );$/;"	t
LPALGETFLOATV	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALGETFLOATV)( ALenum param, ALfloat* data );$/;"	t
LPALGETFLOATV	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALGETFLOATV)( ALenum param, ALfloat* data );$/;"	t
LPALGETINTEGER	.\OpenAL 1.1 SDK\include\al.h	/^typedef ALint          (AL_APIENTRY *LPALGETINTEGER)( ALenum param );$/;"	t
LPALGETINTEGER	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef ALint          (ALAPIENTRY *LPALGETINTEGER)( ALenum param );$/;"	t
LPALGETINTEGER	.\inc\openal\al.h	/^typedef ALint          (AL_APIENTRY *LPALGETINTEGER)( ALenum param );$/;"	t
LPALGETINTEGERV	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALGETINTEGERV)( ALenum param, ALint* data );$/;"	t
LPALGETINTEGERV	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALGETINTEGERV)( ALenum param, ALint* data );$/;"	t
LPALGETINTEGERV	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALGETINTEGERV)( ALenum param, ALint* data );$/;"	t
LPALGETLISTENER3F	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALGETLISTENER3F)( ALenum param, ALfloat *value1, ALfloat *value2, ALfloat *value3 );$/;"	t
LPALGETLISTENER3F	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALGETLISTENER3F)( ALenum param, ALfloat *value1, ALfloat *value2, ALfloat *value3 );$/;"	t
LPALGETLISTENER3F	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALGETLISTENER3F)( ALenum param, ALfloat *value1, ALfloat *value2, ALfloat *value3 );$/;"	t
LPALGETLISTENER3I	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALGETLISTENER3I)( ALenum param, ALint *value1, ALint *value2, ALint *value3 );$/;"	t
LPALGETLISTENER3I	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALGETLISTENER3I)( ALenum param, ALint *value1, ALint *value2, ALint *value3 );$/;"	t
LPALGETLISTENERF	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALGETLISTENERF)( ALenum param, ALfloat* value );$/;"	t
LPALGETLISTENERF	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALGETLISTENERF)( ALenum param, ALfloat* value );$/;"	t
LPALGETLISTENERF	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALGETLISTENERF)( ALenum param, ALfloat* value );$/;"	t
LPALGETLISTENERFV	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALGETLISTENERFV)( ALenum param, ALfloat* values );$/;"	t
LPALGETLISTENERFV	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALGETLISTENERFV)( ALenum param, ALfloat* values );$/;"	t
LPALGETLISTENERFV	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALGETLISTENERFV)( ALenum param, ALfloat* values );$/;"	t
LPALGETLISTENERI	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALGETLISTENERI)( ALenum param, ALint* value );$/;"	t
LPALGETLISTENERI	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALGETLISTENERI)( ALenum param, ALint* value );$/;"	t
LPALGETLISTENERI	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALGETLISTENERI)( ALenum param, ALint* value );$/;"	t
LPALGETLISTENERIV	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALGETLISTENERIV)( ALenum param, ALint* values );$/;"	t
LPALGETLISTENERIV	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALGETLISTENERIV)( ALenum param, ALint* values );$/;"	t
LPALGETPROCADDRESS	.\OpenAL 1.1 SDK\include\al.h	/^typedef void*          (AL_APIENTRY *LPALGETPROCADDRESS)( const ALchar* fname );$/;"	t
LPALGETPROCADDRESS	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void*          (ALAPIENTRY *LPALGETPROCADDRESS)( const ALchar* fname );$/;"	t
LPALGETPROCADDRESS	.\inc\openal\al.h	/^typedef void*          (AL_APIENTRY *LPALGETPROCADDRESS)( const ALchar* fname );$/;"	t
LPALGETSOURCE3F	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALGETSOURCE3F)( ALuint sid, ALenum param, ALfloat* value1, ALfloat* value2, ALfloat* value3);$/;"	t
LPALGETSOURCE3F	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALGETSOURCE3F)( ALuint sid, ALenum param, ALfloat* value1, ALfloat* value2, ALfloat* value3);$/;"	t
LPALGETSOURCE3F	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALGETSOURCE3F)( ALuint sid, ALenum param, ALfloat* value1, ALfloat* value2, ALfloat* value3);$/;"	t
LPALGETSOURCE3I	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALGETSOURCE3I)( ALuint sid, ALenum param, ALint* value1, ALint* value2, ALint* value3);$/;"	t
LPALGETSOURCE3I	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALGETSOURCE3I)( ALuint sid, ALenum param, ALint* value1, ALint* value2, ALint* value3);$/;"	t
LPALGETSOURCEF	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALGETSOURCEF)( ALuint sid, ALenum param, ALfloat* value );$/;"	t
LPALGETSOURCEF	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALGETSOURCEF)( ALuint sid, ALenum param, ALfloat* value );$/;"	t
LPALGETSOURCEF	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALGETSOURCEF)( ALuint sid, ALenum param, ALfloat* value );$/;"	t
LPALGETSOURCEFV	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALGETSOURCEFV)( ALuint sid, ALenum param, ALfloat* values );$/;"	t
LPALGETSOURCEFV	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALGETSOURCEFV)( ALuint sid, ALenum param, ALfloat* values );$/;"	t
LPALGETSOURCEFV	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALGETSOURCEFV)( ALuint sid, ALenum param, ALfloat* values );$/;"	t
LPALGETSOURCEI	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALGETSOURCEI)( ALuint sid, ALenum param, ALint* value );$/;"	t
LPALGETSOURCEI	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALGETSOURCEI)( ALuint sid, ALenum param, ALint* value );$/;"	t
LPALGETSOURCEI	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALGETSOURCEI)( ALuint sid, ALenum param, ALint* value );$/;"	t
LPALGETSOURCEIV	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALGETSOURCEIV)( ALuint sid, ALenum param, ALint* values );$/;"	t
LPALGETSOURCEIV	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALGETSOURCEIV)( ALuint sid, ALenum param, ALint* values );$/;"	t
LPALGETSTRING	.\OpenAL 1.1 SDK\include\al.h	/^typedef const ALchar*  (AL_APIENTRY *LPALGETSTRING)( ALenum param );$/;"	t
LPALGETSTRING	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef const ALchar*  (ALAPIENTRY *LPALGETSTRING)( ALenum param );$/;"	t
LPALGETSTRING	.\inc\openal\al.h	/^typedef const ALchar*  (AL_APIENTRY *LPALGETSTRING)( ALenum param );$/;"	t
LPALISAUXILIARYEFFECTSLOT	.\OpenAL 1.1 SDK\include\efx.h	/^typedef ALboolean (__cdecl *LPALISAUXILIARYEFFECTSLOT)( ALuint slot ); $/;"	t
LPALISAUXILIARYEFFECTSLOT	.\inc\openal\efx.h	/^typedef ALboolean (__cdecl *LPALISAUXILIARYEFFECTSLOT)( ALuint slot ); $/;"	t
LPALISBUFFER	.\OpenAL 1.1 SDK\include\al.h	/^typedef ALboolean      (AL_APIENTRY *LPALISBUFFER)( ALuint bid );$/;"	t
LPALISBUFFER	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef ALboolean      (ALAPIENTRY *LPALISBUFFER)( ALuint bid );$/;"	t
LPALISBUFFER	.\inc\openal\al.h	/^typedef ALboolean      (AL_APIENTRY *LPALISBUFFER)( ALuint bid );$/;"	t
LPALISEFFECT	.\OpenAL 1.1 SDK\include\efx.h	/^typedef ALboolean (__cdecl *LPALISEFFECT)( ALuint eid );$/;"	t
LPALISEFFECT	.\inc\openal\efx.h	/^typedef ALboolean (__cdecl *LPALISEFFECT)( ALuint eid );$/;"	t
LPALISENABLED	.\OpenAL 1.1 SDK\include\al.h	/^typedef ALboolean      (AL_APIENTRY *LPALISENABLED)( ALenum capability ); $/;"	t
LPALISENABLED	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef ALboolean      (ALAPIENTRY *LPALISENABLED)( ALenum capability ); $/;"	t
LPALISENABLED	.\inc\openal\al.h	/^typedef ALboolean      (AL_APIENTRY *LPALISENABLED)( ALenum capability ); $/;"	t
LPALISEXTENSIONPRESENT	.\OpenAL 1.1 SDK\include\al.h	/^typedef ALboolean      (AL_APIENTRY *LPALISEXTENSIONPRESENT)(const ALchar* extname );$/;"	t
LPALISEXTENSIONPRESENT	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef ALboolean      (ALAPIENTRY *LPALISEXTENSIONPRESENT)(const ALchar* extname );$/;"	t
LPALISEXTENSIONPRESENT	.\inc\openal\al.h	/^typedef ALboolean      (AL_APIENTRY *LPALISEXTENSIONPRESENT)(const ALchar* extname );$/;"	t
LPALISFILTER	.\OpenAL 1.1 SDK\include\efx.h	/^typedef ALboolean (__cdecl *LPALISFILTER)( ALuint fid );$/;"	t
LPALISFILTER	.\inc\openal\efx.h	/^typedef ALboolean (__cdecl *LPALISFILTER)( ALuint fid );$/;"	t
LPALISSOURCE	.\OpenAL 1.1 SDK\include\al.h	/^typedef ALboolean      (AL_APIENTRY *LPALISSOURCE)( ALuint sid ); $/;"	t
LPALISSOURCE	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef ALboolean      (ALAPIENTRY *LPALISSOURCE)( ALuint sid ); $/;"	t
LPALISSOURCE	.\inc\openal\al.h	/^typedef ALboolean      (AL_APIENTRY *LPALISSOURCE)( ALuint sid ); $/;"	t
LPALLISTENER3F	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALLISTENER3F)( ALenum param, ALfloat value1, ALfloat value2, ALfloat value3 );$/;"	t
LPALLISTENER3F	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALLISTENER3F)( ALenum param, ALfloat value1, ALfloat value2, ALfloat value3 );$/;"	t
LPALLISTENER3F	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALLISTENER3F)( ALenum param, ALfloat value1, ALfloat value2, ALfloat value3 );$/;"	t
LPALLISTENER3I	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALLISTENER3I)( ALenum param, ALint value1, ALint value2, ALint value3 );$/;"	t
LPALLISTENER3I	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALLISTENER3I)( ALenum param, ALint value1, ALint value2, ALint value3 );$/;"	t
LPALLISTENERF	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALLISTENERF)( ALenum param, ALfloat value );$/;"	t
LPALLISTENERF	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALLISTENERF)( ALenum param, ALfloat value );$/;"	t
LPALLISTENERF	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALLISTENERF)( ALenum param, ALfloat value );$/;"	t
LPALLISTENERFV	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALLISTENERFV)( ALenum param, const ALfloat* values );$/;"	t
LPALLISTENERFV	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALLISTENERFV)( ALenum param, const ALfloat* values );$/;"	t
LPALLISTENERFV	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALLISTENERFV)( ALenum param, const ALfloat* values );$/;"	t
LPALLISTENERI	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALLISTENERI)( ALenum param, ALint value );$/;"	t
LPALLISTENERI	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALLISTENERI)( ALenum param, ALint value );$/;"	t
LPALLISTENERI	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALLISTENERI)( ALenum param, ALint value );$/;"	t
LPALLISTENERIV	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALLISTENERIV)( ALenum param, const ALint* values );$/;"	t
LPALLISTENERIV	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALLISTENERIV)( ALenum param, const ALint* values );$/;"	t
LPALSOURCE3F	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALSOURCE3F)( ALuint sid, ALenum param, ALfloat value1, ALfloat value2, ALfloat value3 );$/;"	t
LPALSOURCE3F	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALSOURCE3F)( ALuint sid, ALenum param, ALfloat value1, ALfloat value2, ALfloat value3 );$/;"	t
LPALSOURCE3F	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALSOURCE3F)( ALuint sid, ALenum param, ALfloat value1, ALfloat value2, ALfloat value3 );$/;"	t
LPALSOURCE3I	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALSOURCE3I)( ALuint sid, ALenum param, ALint value1, ALint value2, ALint value3 );$/;"	t
LPALSOURCE3I	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALSOURCE3I)( ALuint sid, ALenum param, ALint value1, ALint value2, ALint value3 );$/;"	t
LPALSOURCEF	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALSOURCEF)( ALuint sid, ALenum param, ALfloat value); $/;"	t
LPALSOURCEF	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALSOURCEF)( ALuint sid, ALenum param, ALfloat value); $/;"	t
LPALSOURCEF	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALSOURCEF)( ALuint sid, ALenum param, ALfloat value); $/;"	t
LPALSOURCEFV	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALSOURCEFV)( ALuint sid, ALenum param, const ALfloat* values );$/;"	t
LPALSOURCEFV	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALSOURCEFV)( ALuint sid, ALenum param, const ALfloat* values );$/;"	t
LPALSOURCEFV	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALSOURCEFV)( ALuint sid, ALenum param, const ALfloat* values );$/;"	t
LPALSOURCEI	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALSOURCEI)( ALuint sid, ALenum param, ALint value); $/;"	t
LPALSOURCEI	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALSOURCEI)( ALuint sid, ALenum param, ALint value); $/;"	t
LPALSOURCEI	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALSOURCEI)( ALuint sid, ALenum param, ALint value); $/;"	t
LPALSOURCEIV	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALSOURCEIV)( ALuint sid, ALenum param, const ALint* values );$/;"	t
LPALSOURCEIV	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALSOURCEIV)( ALuint sid, ALenum param, const ALint* values );$/;"	t
LPALSOURCEPAUSE	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALSOURCEPAUSE)( ALuint sid );$/;"	t
LPALSOURCEPAUSE	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALSOURCEPAUSE)( ALuint sid );$/;"	t
LPALSOURCEPAUSE	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALSOURCEPAUSE)( ALuint sid );$/;"	t
LPALSOURCEPAUSEV	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALSOURCEPAUSEV)( ALsizei ns, const ALuint *sids );$/;"	t
LPALSOURCEPAUSEV	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALSOURCEPAUSEV)( ALsizei ns, const ALuint *sids );$/;"	t
LPALSOURCEPAUSEV	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALSOURCEPAUSEV)( ALsizei ns, const ALuint *sids );$/;"	t
LPALSOURCEPLAY	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALSOURCEPLAY)( ALuint sid );$/;"	t
LPALSOURCEPLAY	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALSOURCEPLAY)( ALuint sid );$/;"	t
LPALSOURCEPLAY	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALSOURCEPLAY)( ALuint sid );$/;"	t
LPALSOURCEPLAYV	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALSOURCEPLAYV)( ALsizei ns, const ALuint *sids );$/;"	t
LPALSOURCEPLAYV	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALSOURCEPLAYV)( ALsizei ns, const ALuint *sids );$/;"	t
LPALSOURCEPLAYV	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALSOURCEPLAYV)( ALsizei ns, const ALuint *sids );$/;"	t
LPALSOURCEQUEUEBUFFERS	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALSOURCEQUEUEBUFFERS)(ALuint sid, ALsizei numEntries, const ALuint *bids );$/;"	t
LPALSOURCEQUEUEBUFFERS	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALSOURCEQUEUEBUFFERS)(ALuint sid, ALsizei numEntries, const ALuint *bids );$/;"	t
LPALSOURCEQUEUEBUFFERS	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALSOURCEQUEUEBUFFERS)(ALuint sid, ALsizei numEntries, const ALuint *bids );$/;"	t
LPALSOURCEREWIND	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALSOURCEREWIND)( ALuint sid );$/;"	t
LPALSOURCEREWIND	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALSOURCEREWIND)( ALuint sid );$/;"	t
LPALSOURCEREWIND	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALSOURCEREWIND)( ALuint sid );$/;"	t
LPALSOURCEREWINDV	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALSOURCEREWINDV)( ALsizei ns, const ALuint *sids );$/;"	t
LPALSOURCEREWINDV	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALSOURCEREWINDV)( ALsizei ns, const ALuint *sids );$/;"	t
LPALSOURCEREWINDV	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALSOURCEREWINDV)( ALsizei ns, const ALuint *sids );$/;"	t
LPALSOURCESTOP	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALSOURCESTOP)( ALuint sid );$/;"	t
LPALSOURCESTOP	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALSOURCESTOP)( ALuint sid );$/;"	t
LPALSOURCESTOP	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALSOURCESTOP)( ALuint sid );$/;"	t
LPALSOURCESTOPV	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALSOURCESTOPV)( ALsizei ns, const ALuint *sids );$/;"	t
LPALSOURCESTOPV	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALSOURCESTOPV)( ALsizei ns, const ALuint *sids );$/;"	t
LPALSOURCESTOPV	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALSOURCESTOPV)( ALsizei ns, const ALuint *sids );$/;"	t
LPALSOURCEUNQUEUEBUFFERS	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALSOURCEUNQUEUEBUFFERS)(ALuint sid, ALsizei numEntries, ALuint *bids );$/;"	t
LPALSOURCEUNQUEUEBUFFERS	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALSOURCEUNQUEUEBUFFERS)(ALuint sid, ALsizei numEntries, ALuint *bids );$/;"	t
LPALSOURCEUNQUEUEBUFFERS	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALSOURCEUNQUEUEBUFFERS)(ALuint sid, ALsizei numEntries, ALuint *bids );$/;"	t
LPALSPEEDOFSOUND	.\OpenAL 1.1 SDK\include\al.h	/^typedef void           (AL_APIENTRY *LPALSPEEDOFSOUND)( ALfloat value );$/;"	t
LPALSPEEDOFSOUND	.\inc\openal\al.h	/^typedef void           (AL_APIENTRY *LPALSPEEDOFSOUND)( ALfloat value );$/;"	t
LPEAXEXCLUSIONPROPERTIES	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^} EAXEXCLUSIONPROPERTIES, *LPEAXEXCLUSIONPROPERTIES;$/;"	t	typeref:struct:_EAXEXCLUSIONPROPERTIES
LPEAXEXCLUSIONPROPERTIES	.\inc\openal\EFX-Util.h	/^} EAXEXCLUSIONPROPERTIES, *LPEAXEXCLUSIONPROPERTIES;$/;"	t	typeref:struct:_EAXEXCLUSIONPROPERTIES
LPEAXGETBUFFERMODE	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.h	/^typedef ALenum    (__cdecl *LPEAXGETBUFFERMODE)(ALuint buffer, ALint *value);$/;"	t
LPEAXOBSTRUCTIONPROPERTIES	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^} EAXOBSTRUCTIONPROPERTIES, *LPEAXOBSTRUCTIONPROPERTIES;$/;"	t	typeref:struct:_EAXOBSTRUCTIONPROPERTIES
LPEAXOBSTRUCTIONPROPERTIES	.\inc\openal\EFX-Util.h	/^} EAXOBSTRUCTIONPROPERTIES, *LPEAXOBSTRUCTIONPROPERTIES;$/;"	t	typeref:struct:_EAXOBSTRUCTIONPROPERTIES
LPEAXOCCLUSIONPROPERTIES	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^} EAXOCCLUSIONPROPERTIES, *LPEAXOCCLUSIONPROPERTIES;$/;"	t	typeref:struct:_EAXOCCLUSIONPROPERTIES
LPEAXOCCLUSIONPROPERTIES	.\inc\openal\EFX-Util.h	/^} EAXOCCLUSIONPROPERTIES, *LPEAXOCCLUSIONPROPERTIES;$/;"	t	typeref:struct:_EAXOCCLUSIONPROPERTIES
LPEAXREVERBPROPERTIES	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^} EAXREVERBPROPERTIES, *LPEAXREVERBPROPERTIES;$/;"	t	typeref:struct:_EAXREVERBPROPERTIES
LPEAXREVERBPROPERTIES	.\inc\openal\EFX-Util.h	/^} EAXREVERBPROPERTIES, *LPEAXREVERBPROPERTIES;$/;"	t	typeref:struct:_EAXREVERBPROPERTIES
LPEAXSETBUFFERMODE	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.h	/^typedef ALboolean (__cdecl *LPEAXSETBUFFERMODE)(ALsizei n, ALuint *buffers, ALint value);$/;"	t
LPEFXEAXREVERBPROPERTIES	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^} EFXEAXREVERBPROPERTIES, *LPEFXEAXREVERBPROPERTIES;$/;"	t	typeref:struct:__anon2
LPEFXEAXREVERBPROPERTIES	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	/^} EFXEAXREVERBPROPERTIES, *LPEFXEAXREVERBPROPERTIES;$/;"	t	typeref:struct:__anon18
LPEFXEAXREVERBPROPERTIES	.\inc\openal\EFX-Util.h	/^} EFXEAXREVERBPROPERTIES, *LPEFXEAXREVERBPROPERTIES;$/;"	t	typeref:struct:__anon1
LPEFXLOWPASSFILTER	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^} EFXLOWPASSFILTER, *LPEFXLOWPASSFILTER;$/;"	t	typeref:struct:_EFXLOWPASSFILTER
LPEFXLOWPASSFILTER	.\inc\openal\EFX-Util.h	/^} EFXLOWPASSFILTER, *LPEFXLOWPASSFILTER;$/;"	t	typeref:struct:_EFXLOWPASSFILTER
LPOPENALFNTABLE	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^} OPENALFNTABLE, *LPOPENALFNTABLE;$/;"	t	typeref:struct:__anon11
LPOVCLEAR	.\OpenAL 1.1 SDK\samples\playoggvorbis\Source\PlayOggVorbis.cpp	/^typedef int (*LPOVCLEAR)(OggVorbis_File *vf);$/;"	t	file:
LPOVCOMMENT	.\OpenAL 1.1 SDK\samples\playoggvorbis\Source\PlayOggVorbis.cpp	/^typedef vorbis_comment * (*LPOVCOMMENT)(OggVorbis_File *vf,int link);$/;"	t	file:
LPOVINFO	.\OpenAL 1.1 SDK\samples\playoggvorbis\Source\PlayOggVorbis.cpp	/^typedef vorbis_info * (*LPOVINFO)(OggVorbis_File *vf,int link);$/;"	t	file:
LPOVOPENCALLBACKS	.\OpenAL 1.1 SDK\samples\playoggvorbis\Source\PlayOggVorbis.cpp	/^typedef int (*LPOVOPENCALLBACKS)(void *datasource, OggVorbis_File *vf,char *initial, long ibytes, ov_callbacks callbacks);$/;"	t	file:
LPOVPCMTOTAL	.\OpenAL 1.1 SDK\samples\playoggvorbis\Source\PlayOggVorbis.cpp	/^typedef ogg_int64_t (*LPOVPCMTOTAL)(OggVorbis_File *vf,int i);$/;"	t	file:
LPOVREAD	.\OpenAL 1.1 SDK\samples\playoggvorbis\Source\PlayOggVorbis.cpp	/^typedef long (*LPOVREAD)(OggVorbis_File *vf,char *buffer,int length,int bigendianp,int word,int sgned,int *bitstream);$/;"	t	file:
LPWAVEFILEINFO	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^} WAVEFILEINFO, *LPWAVEFILEINFO;$/;"	t	typeref:struct:__anon10
LoadOAL10Library	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.cpp	/^ALboolean LoadOAL10Library(char *szOALFullPathName, LPOPENALFNTABLE lpOALFnTable)$/;"	f
LoadWaveFile	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^WAVERESULT CWaves::LoadWaveFile(const char *szFilename, WAVEID *pWaveID)$/;"	f	class:CWaves
MAX_NUM_EFFECT_SLOTS	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	14;"	d	file:
MAX_NUM_WAVEID	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	11;"	d
MixData	.\OpenAL 1.1 SDK\samples\renderer\Source\main.cpp	/^void MixData(unsigned long ulNumSamples, unsigned long ulOutputChannels, void *pOutput, unsigned long ulNumEffects, void **pEffectOutput)$/;"	f
N	.\src\mic\main.cpp	52;"	d	file:
NOTOPEN	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	46;"	d
NUMBUFFERS	.\OpenAL 1.1 SDK\samples\playmultichannel\Source\PlayMultiChannel.cpp	28;"	d	file:
NUMBUFFERS	.\OpenAL 1.1 SDK\samples\playoggvorbis\Source\PlayOggVorbis.cpp	28;"	d	file:
NUMBUFFERS	.\OpenAL 1.1 SDK\samples\playstream\Source\PlayStream.cpp	28;"	d	file:
NUM_STREAMING_BUFFERS	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	13;"	d	file:
OPENAL	.\OpenAL 1.1 SDK\include\al.h	33;"	d
OPENAL	.\inc\openal\al.h	33;"	d
OPENALFNTABLE	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^} OPENALFNTABLE, *LPOPENALFNTABLE;$/;"	t	typeref:struct:__anon11
OPENED	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	48;"	d
OUTPUT_WAVE_FILE	.\OpenAL 1.1 SDK\samples\capture\Source\Capture.cpp	27;"	d	file:
OUTPUT_WAVE_FILE	.\src\mic\main.cpp	36;"	d	file:
OV_EBADHEADER	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	228;"	d
OV_EBADLINK	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	232;"	d
OV_EBADPACKET	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	231;"	d
OV_EFAULT	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	224;"	d
OV_EIMPL	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	225;"	d
OV_EINVAL	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	226;"	d
OV_ENOSEEK	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	233;"	d
OV_ENOTAUDIO	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	230;"	d
OV_ENOTVORBIS	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	227;"	d
OV_EOF	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	220;"	d
OV_EREAD	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	223;"	d
OV_EVERSION	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	229;"	d
OV_FALSE	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	219;"	d
OV_HOLE	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	221;"	d
OggVorbis_File	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	/^typedef struct OggVorbis_File {$/;"	s
OggVorbis_File	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	/^} OggVorbis_File;$/;"	t	typeref:struct:OggVorbis_File
OpenWaveFile	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^WAVERESULT CWaves::OpenWaveFile(const char *szFilename, WAVEID *pWaveID)$/;"	f	class:CWaves
OutputDebugMessage	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^void OutputDebugMessage(const char *szOutput,...)$/;"	f
PARTOPEN	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	47;"	d
PFNALGETENUMVALUE	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^typedef int (__cdecl *PFNALGETENUMVALUE)( const char *szEnumName );$/;"	t
PI_DEF	.\src\mic\main.cpp	34;"	d	file:
PWAVEFORMATEXTENSIBLE	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^} WAVEFORMATEXTENSIBLE, *PWAVEFORMATEXTENSIBLE;$/;"	t	typeref:struct:__anon8
ParseFile	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^WAVERESULT CWaves::ParseFile(const char *szFilename, LPWAVEFILEINFO pWaveInfo)$/;"	f	class:CWaves
Play	.\OpenAL 1.1 SDK\samples\efxfilter\Source\EFXFilter.cpp	/^void Play(ALuint uiSource)$/;"	f
PlayAuxiliaryFilter	.\OpenAL 1.1 SDK\samples\efxfilter\Source\EFXFilter.cpp	/^ALboolean PlayAuxiliaryFilter(ALuint uiSource)$/;"	f
PlayAuxiliaryNoFilter	.\OpenAL 1.1 SDK\samples\efxfilter\Source\EFXFilter.cpp	/^ALboolean PlayAuxiliaryNoFilter(ALuint uiSource)$/;"	f
PlayDirectFilter	.\OpenAL 1.1 SDK\samples\efxfilter\Source\EFXFilter.cpp	/^ALboolean PlayDirectFilter(ALuint uiSource)$/;"	f
PlayDry	.\OpenAL 1.1 SDK\samples\efxfilter\Source\EFXFilter.cpp	/^ALboolean PlayDry(ALuint uiSource)$/;"	f
PlaySource	.\OpenAL 1.1 SDK\samples\efxreverb\Source\EFXReverb.cpp	/^ALvoid PlaySource(ALuint uiSource)$/;"	f
REVERB_PRESET_ALLEY	.\OpenAL 1.1 SDK\include\EFX-Util.h	174;"	d
REVERB_PRESET_ALLEY	.\inc\openal\EFX-Util.h	174;"	d
REVERB_PRESET_ARENA	.\OpenAL 1.1 SDK\include\EFX-Util.h	164;"	d
REVERB_PRESET_ARENA	.\inc\openal\EFX-Util.h	164;"	d
REVERB_PRESET_AUDITORIUM	.\OpenAL 1.1 SDK\include\EFX-Util.h	158;"	d
REVERB_PRESET_AUDITORIUM	.\inc\openal\EFX-Util.h	158;"	d
REVERB_PRESET_BATHROOM	.\OpenAL 1.1 SDK\include\EFX-Util.h	152;"	d
REVERB_PRESET_BATHROOM	.\inc\openal\EFX-Util.h	152;"	d
REVERB_PRESET_CARPETTEDHALLWAY	.\OpenAL 1.1 SDK\include\EFX-Util.h	168;"	d
REVERB_PRESET_CARPETTEDHALLWAY	.\inc\openal\EFX-Util.h	168;"	d
REVERB_PRESET_CASTLE_ALCOVE	.\OpenAL 1.1 SDK\include\EFX-Util.h	219;"	d
REVERB_PRESET_CASTLE_ALCOVE	.\inc\openal\EFX-Util.h	219;"	d
REVERB_PRESET_CASTLE_COURTYARD	.\OpenAL 1.1 SDK\include\EFX-Util.h	217;"	d
REVERB_PRESET_CASTLE_COURTYARD	.\inc\openal\EFX-Util.h	217;"	d
REVERB_PRESET_CASTLE_CUPBOARD	.\OpenAL 1.1 SDK\include\EFX-Util.h	215;"	d
REVERB_PRESET_CASTLE_CUPBOARD	.\inc\openal\EFX-Util.h	215;"	d
REVERB_PRESET_CASTLE_HALL	.\OpenAL 1.1 SDK\include\EFX-Util.h	213;"	d
REVERB_PRESET_CASTLE_HALL	.\inc\openal\EFX-Util.h	213;"	d
REVERB_PRESET_CASTLE_LARGEROOM	.\OpenAL 1.1 SDK\include\EFX-Util.h	211;"	d
REVERB_PRESET_CASTLE_LARGEROOM	.\inc\openal\EFX-Util.h	211;"	d
REVERB_PRESET_CASTLE_LONGPASSAGE	.\OpenAL 1.1 SDK\include\EFX-Util.h	209;"	d
REVERB_PRESET_CASTLE_LONGPASSAGE	.\inc\openal\EFX-Util.h	209;"	d
REVERB_PRESET_CASTLE_MEDIUMROOM	.\OpenAL 1.1 SDK\include\EFX-Util.h	207;"	d
REVERB_PRESET_CASTLE_MEDIUMROOM	.\inc\openal\EFX-Util.h	207;"	d
REVERB_PRESET_CASTLE_SHORTPASSAGE	.\OpenAL 1.1 SDK\include\EFX-Util.h	205;"	d
REVERB_PRESET_CASTLE_SHORTPASSAGE	.\inc\openal\EFX-Util.h	205;"	d
REVERB_PRESET_CASTLE_SMALLROOM	.\OpenAL 1.1 SDK\include\EFX-Util.h	203;"	d
REVERB_PRESET_CASTLE_SMALLROOM	.\inc\openal\EFX-Util.h	203;"	d
REVERB_PRESET_CAVE	.\OpenAL 1.1 SDK\include\EFX-Util.h	162;"	d
REVERB_PRESET_CAVE	.\inc\openal\EFX-Util.h	162;"	d
REVERB_PRESET_CHAPEL	.\OpenAL 1.1 SDK\include\EFX-Util.h	434;"	d
REVERB_PRESET_CHAPEL	.\inc\openal\EFX-Util.h	434;"	d
REVERB_PRESET_CITY	.\OpenAL 1.1 SDK\include\EFX-Util.h	178;"	d
REVERB_PRESET_CITY	.\inc\openal\EFX-Util.h	178;"	d
REVERB_PRESET_CITY_ABANDONED	.\OpenAL 1.1 SDK\include\EFX-Util.h	425;"	d
REVERB_PRESET_CITY_ABANDONED	.\inc\openal\EFX-Util.h	425;"	d
REVERB_PRESET_CITY_LIBRARY	.\OpenAL 1.1 SDK\include\EFX-Util.h	421;"	d
REVERB_PRESET_CITY_LIBRARY	.\inc\openal\EFX-Util.h	421;"	d
REVERB_PRESET_CITY_MUSEUM	.\OpenAL 1.1 SDK\include\EFX-Util.h	419;"	d
REVERB_PRESET_CITY_MUSEUM	.\inc\openal\EFX-Util.h	419;"	d
REVERB_PRESET_CITY_STREETS	.\OpenAL 1.1 SDK\include\EFX-Util.h	415;"	d
REVERB_PRESET_CITY_STREETS	.\inc\openal\EFX-Util.h	415;"	d
REVERB_PRESET_CITY_SUBWAY	.\OpenAL 1.1 SDK\include\EFX-Util.h	417;"	d
REVERB_PRESET_CITY_SUBWAY	.\inc\openal\EFX-Util.h	417;"	d
REVERB_PRESET_CITY_UNDERPASS	.\OpenAL 1.1 SDK\include\EFX-Util.h	423;"	d
REVERB_PRESET_CITY_UNDERPASS	.\inc\openal\EFX-Util.h	423;"	d
REVERB_PRESET_CONCERTHALL	.\OpenAL 1.1 SDK\include\EFX-Util.h	160;"	d
REVERB_PRESET_CONCERTHALL	.\inc\openal\EFX-Util.h	160;"	d
REVERB_PRESET_DIZZY	.\OpenAL 1.1 SDK\include\EFX-Util.h	194;"	d
REVERB_PRESET_DIZZY	.\inc\openal\EFX-Util.h	194;"	d
REVERB_PRESET_DOME_SAINTPAULS	.\OpenAL 1.1 SDK\include\EFX-Util.h	355;"	d
REVERB_PRESET_DOME_SAINTPAULS	.\inc\openal\EFX-Util.h	355;"	d
REVERB_PRESET_DOME_TOMB	.\OpenAL 1.1 SDK\include\EFX-Util.h	351;"	d
REVERB_PRESET_DOME_TOMB	.\inc\openal\EFX-Util.h	351;"	d
REVERB_PRESET_DRIVING_COMMENTATOR	.\OpenAL 1.1 SDK\include\EFX-Util.h	394;"	d
REVERB_PRESET_DRIVING_COMMENTATOR	.\inc\openal\EFX-Util.h	394;"	d
REVERB_PRESET_DRIVING_EMPTYGRANDSTAND	.\OpenAL 1.1 SDK\include\EFX-Util.h	406;"	d
REVERB_PRESET_DRIVING_EMPTYGRANDSTAND	.\inc\openal\EFX-Util.h	406;"	d
REVERB_PRESET_DRIVING_FULLGRANDSTAND	.\OpenAL 1.1 SDK\include\EFX-Util.h	404;"	d
REVERB_PRESET_DRIVING_FULLGRANDSTAND	.\inc\openal\EFX-Util.h	404;"	d
REVERB_PRESET_DRIVING_INCAR_LUXURY	.\OpenAL 1.1 SDK\include\EFX-Util.h	402;"	d
REVERB_PRESET_DRIVING_INCAR_LUXURY	.\inc\openal\EFX-Util.h	402;"	d
REVERB_PRESET_DRIVING_INCAR_RACER	.\OpenAL 1.1 SDK\include\EFX-Util.h	398;"	d
REVERB_PRESET_DRIVING_INCAR_RACER	.\inc\openal\EFX-Util.h	398;"	d
REVERB_PRESET_DRIVING_INCAR_SPORTS	.\OpenAL 1.1 SDK\include\EFX-Util.h	400;"	d
REVERB_PRESET_DRIVING_INCAR_SPORTS	.\inc\openal\EFX-Util.h	400;"	d
REVERB_PRESET_DRIVING_PITGARAGE	.\OpenAL 1.1 SDK\include\EFX-Util.h	396;"	d
REVERB_PRESET_DRIVING_PITGARAGE	.\inc\openal\EFX-Util.h	396;"	d
REVERB_PRESET_DRIVING_TUNNEL	.\OpenAL 1.1 SDK\include\EFX-Util.h	408;"	d
REVERB_PRESET_DRIVING_TUNNEL	.\inc\openal\EFX-Util.h	408;"	d
REVERB_PRESET_DRUGGED	.\OpenAL 1.1 SDK\include\EFX-Util.h	192;"	d
REVERB_PRESET_DRUGGED	.\inc\openal\EFX-Util.h	192;"	d
REVERB_PRESET_DUSTYROOM	.\OpenAL 1.1 SDK\include\EFX-Util.h	432;"	d
REVERB_PRESET_DUSTYROOM	.\inc\openal\EFX-Util.h	432;"	d
REVERB_PRESET_FACTORY_ALCOVE	.\OpenAL 1.1 SDK\include\EFX-Util.h	226;"	d
REVERB_PRESET_FACTORY_ALCOVE	.\inc\openal\EFX-Util.h	226;"	d
REVERB_PRESET_FACTORY_COURTYARD	.\OpenAL 1.1 SDK\include\EFX-Util.h	240;"	d
REVERB_PRESET_FACTORY_COURTYARD	.\inc\openal\EFX-Util.h	240;"	d
REVERB_PRESET_FACTORY_CUPBOARD	.\OpenAL 1.1 SDK\include\EFX-Util.h	238;"	d
REVERB_PRESET_FACTORY_CUPBOARD	.\inc\openal\EFX-Util.h	238;"	d
REVERB_PRESET_FACTORY_HALL	.\OpenAL 1.1 SDK\include\EFX-Util.h	236;"	d
REVERB_PRESET_FACTORY_HALL	.\inc\openal\EFX-Util.h	236;"	d
REVERB_PRESET_FACTORY_LARGEROOM	.\OpenAL 1.1 SDK\include\EFX-Util.h	234;"	d
REVERB_PRESET_FACTORY_LARGEROOM	.\inc\openal\EFX-Util.h	234;"	d
REVERB_PRESET_FACTORY_LONGPASSAGE	.\OpenAL 1.1 SDK\include\EFX-Util.h	232;"	d
REVERB_PRESET_FACTORY_LONGPASSAGE	.\inc\openal\EFX-Util.h	232;"	d
REVERB_PRESET_FACTORY_MEDIUMROOM	.\OpenAL 1.1 SDK\include\EFX-Util.h	230;"	d
REVERB_PRESET_FACTORY_MEDIUMROOM	.\inc\openal\EFX-Util.h	230;"	d
REVERB_PRESET_FACTORY_SHORTPASSAGE	.\OpenAL 1.1 SDK\include\EFX-Util.h	228;"	d
REVERB_PRESET_FACTORY_SHORTPASSAGE	.\inc\openal\EFX-Util.h	228;"	d
REVERB_PRESET_FACTORY_SMALLROOM	.\OpenAL 1.1 SDK\include\EFX-Util.h	242;"	d
REVERB_PRESET_FACTORY_SMALLROOM	.\inc\openal\EFX-Util.h	242;"	d
REVERB_PRESET_FOREST	.\OpenAL 1.1 SDK\include\EFX-Util.h	176;"	d
REVERB_PRESET_FOREST	.\inc\openal\EFX-Util.h	176;"	d
REVERB_PRESET_GENERIC	.\OpenAL 1.1 SDK\include\EFX-Util.h	146;"	d
REVERB_PRESET_GENERIC	.\inc\openal\EFX-Util.h	146;"	d
REVERB_PRESET_HALLWAY	.\OpenAL 1.1 SDK\include\EFX-Util.h	170;"	d
REVERB_PRESET_HALLWAY	.\inc\openal\EFX-Util.h	170;"	d
REVERB_PRESET_HANGAR	.\OpenAL 1.1 SDK\include\EFX-Util.h	166;"	d
REVERB_PRESET_HANGAR	.\inc\openal\EFX-Util.h	166;"	d
REVERB_PRESET_ICEPALACE_ALCOVE	.\OpenAL 1.1 SDK\include\EFX-Util.h	249;"	d
REVERB_PRESET_ICEPALACE_ALCOVE	.\inc\openal\EFX-Util.h	249;"	d
REVERB_PRESET_ICEPALACE_COURTYARD	.\OpenAL 1.1 SDK\include\EFX-Util.h	263;"	d
REVERB_PRESET_ICEPALACE_COURTYARD	.\inc\openal\EFX-Util.h	263;"	d
REVERB_PRESET_ICEPALACE_CUPBOARD	.\OpenAL 1.1 SDK\include\EFX-Util.h	261;"	d
REVERB_PRESET_ICEPALACE_CUPBOARD	.\inc\openal\EFX-Util.h	261;"	d
REVERB_PRESET_ICEPALACE_HALL	.\OpenAL 1.1 SDK\include\EFX-Util.h	259;"	d
REVERB_PRESET_ICEPALACE_HALL	.\inc\openal\EFX-Util.h	259;"	d
REVERB_PRESET_ICEPALACE_LARGEROOM	.\OpenAL 1.1 SDK\include\EFX-Util.h	257;"	d
REVERB_PRESET_ICEPALACE_LARGEROOM	.\inc\openal\EFX-Util.h	257;"	d
REVERB_PRESET_ICEPALACE_LONGPASSAGE	.\OpenAL 1.1 SDK\include\EFX-Util.h	255;"	d
REVERB_PRESET_ICEPALACE_LONGPASSAGE	.\inc\openal\EFX-Util.h	255;"	d
REVERB_PRESET_ICEPALACE_MEDIUMROOM	.\OpenAL 1.1 SDK\include\EFX-Util.h	253;"	d
REVERB_PRESET_ICEPALACE_MEDIUMROOM	.\inc\openal\EFX-Util.h	253;"	d
REVERB_PRESET_ICEPALACE_SHORTPASSAGE	.\OpenAL 1.1 SDK\include\EFX-Util.h	251;"	d
REVERB_PRESET_ICEPALACE_SHORTPASSAGE	.\inc\openal\EFX-Util.h	251;"	d
REVERB_PRESET_ICEPALACE_SMALLROOM	.\OpenAL 1.1 SDK\include\EFX-Util.h	265;"	d
REVERB_PRESET_ICEPALACE_SMALLROOM	.\inc\openal\EFX-Util.h	265;"	d
REVERB_PRESET_LIVINGROOM	.\OpenAL 1.1 SDK\include\EFX-Util.h	154;"	d
REVERB_PRESET_LIVINGROOM	.\inc\openal\EFX-Util.h	154;"	d
REVERB_PRESET_MOOD_HEAVEN	.\OpenAL 1.1 SDK\include\EFX-Util.h	383;"	d
REVERB_PRESET_MOOD_HEAVEN	.\inc\openal\EFX-Util.h	383;"	d
REVERB_PRESET_MOOD_HELL	.\OpenAL 1.1 SDK\include\EFX-Util.h	385;"	d
REVERB_PRESET_MOOD_HELL	.\inc\openal\EFX-Util.h	385;"	d
REVERB_PRESET_MOOD_MEMORY	.\OpenAL 1.1 SDK\include\EFX-Util.h	387;"	d
REVERB_PRESET_MOOD_MEMORY	.\inc\openal\EFX-Util.h	387;"	d
REVERB_PRESET_MOUNTAINS	.\OpenAL 1.1 SDK\include\EFX-Util.h	180;"	d
REVERB_PRESET_MOUNTAINS	.\inc\openal\EFX-Util.h	180;"	d
REVERB_PRESET_OUTDOORS_BACKYARD	.\OpenAL 1.1 SDK\include\EFX-Util.h	368;"	d
REVERB_PRESET_OUTDOORS_BACKYARD	.\inc\openal\EFX-Util.h	368;"	d
REVERB_PRESET_OUTDOORS_CREEK	.\OpenAL 1.1 SDK\include\EFX-Util.h	374;"	d
REVERB_PRESET_OUTDOORS_CREEK	.\inc\openal\EFX-Util.h	374;"	d
REVERB_PRESET_OUTDOORS_DEEPCANYON	.\OpenAL 1.1 SDK\include\EFX-Util.h	372;"	d
REVERB_PRESET_OUTDOORS_DEEPCANYON	.\inc\openal\EFX-Util.h	372;"	d
REVERB_PRESET_OUTDOORS_ROLLINGPLAINS	.\OpenAL 1.1 SDK\include\EFX-Util.h	370;"	d
REVERB_PRESET_OUTDOORS_ROLLINGPLAINS	.\inc\openal\EFX-Util.h	370;"	d
REVERB_PRESET_OUTDOORS_VALLEY	.\OpenAL 1.1 SDK\include\EFX-Util.h	376;"	d
REVERB_PRESET_OUTDOORS_VALLEY	.\inc\openal\EFX-Util.h	376;"	d
REVERB_PRESET_PADDEDCELL	.\OpenAL 1.1 SDK\include\EFX-Util.h	148;"	d
REVERB_PRESET_PADDEDCELL	.\inc\openal\EFX-Util.h	148;"	d
REVERB_PRESET_PARKINGLOT	.\OpenAL 1.1 SDK\include\EFX-Util.h	186;"	d
REVERB_PRESET_PARKINGLOT	.\inc\openal\EFX-Util.h	186;"	d
REVERB_PRESET_PIPE_LARGE	.\OpenAL 1.1 SDK\include\EFX-Util.h	359;"	d
REVERB_PRESET_PIPE_LARGE	.\inc\openal\EFX-Util.h	359;"	d
REVERB_PRESET_PIPE_LONGTHIN	.\OpenAL 1.1 SDK\include\EFX-Util.h	357;"	d
REVERB_PRESET_PIPE_LONGTHIN	.\inc\openal\EFX-Util.h	357;"	d
REVERB_PRESET_PIPE_RESONANT	.\OpenAL 1.1 SDK\include\EFX-Util.h	361;"	d
REVERB_PRESET_PIPE_RESONANT	.\inc\openal\EFX-Util.h	361;"	d
REVERB_PRESET_PIPE_SMALL	.\OpenAL 1.1 SDK\include\EFX-Util.h	353;"	d
REVERB_PRESET_PIPE_SMALL	.\inc\openal\EFX-Util.h	353;"	d
REVERB_PRESET_PLAIN	.\OpenAL 1.1 SDK\include\EFX-Util.h	184;"	d
REVERB_PRESET_PLAIN	.\inc\openal\EFX-Util.h	184;"	d
REVERB_PRESET_PREFAB_CARAVAN	.\OpenAL 1.1 SDK\include\EFX-Util.h	343;"	d
REVERB_PRESET_PREFAB_CARAVAN	.\inc\openal\EFX-Util.h	343;"	d
REVERB_PRESET_PREFAB_OUTHOUSE	.\OpenAL 1.1 SDK\include\EFX-Util.h	341;"	d
REVERB_PRESET_PREFAB_OUTHOUSE	.\inc\openal\EFX-Util.h	341;"	d
REVERB_PRESET_PREFAB_PRACTISEROOM	.\OpenAL 1.1 SDK\include\EFX-Util.h	339;"	d
REVERB_PRESET_PREFAB_PRACTISEROOM	.\inc\openal\EFX-Util.h	339;"	d
REVERB_PRESET_PREFAB_SCHOOLROOM	.\OpenAL 1.1 SDK\include\EFX-Util.h	337;"	d
REVERB_PRESET_PREFAB_SCHOOLROOM	.\inc\openal\EFX-Util.h	337;"	d
REVERB_PRESET_PREFAB_WORKSHOP	.\OpenAL 1.1 SDK\include\EFX-Util.h	335;"	d
REVERB_PRESET_PREFAB_WORKSHOP	.\inc\openal\EFX-Util.h	335;"	d
REVERB_PRESET_PSYCHOTIC	.\OpenAL 1.1 SDK\include\EFX-Util.h	196;"	d
REVERB_PRESET_PSYCHOTIC	.\inc\openal\EFX-Util.h	196;"	d
REVERB_PRESET_QUARRY	.\OpenAL 1.1 SDK\include\EFX-Util.h	182;"	d
REVERB_PRESET_QUARRY	.\inc\openal\EFX-Util.h	182;"	d
REVERB_PRESET_ROOM	.\OpenAL 1.1 SDK\include\EFX-Util.h	150;"	d
REVERB_PRESET_ROOM	.\inc\openal\EFX-Util.h	150;"	d
REVERB_PRESET_SEWERPIPE	.\OpenAL 1.1 SDK\include\EFX-Util.h	188;"	d
REVERB_PRESET_SEWERPIPE	.\inc\openal\EFX-Util.h	188;"	d
REVERB_PRESET_SMALLWATERROOM	.\OpenAL 1.1 SDK\include\EFX-Util.h	436;"	d
REVERB_PRESET_SMALLWATERROOM	.\inc\openal\EFX-Util.h	436;"	d
REVERB_PRESET_SPACESTATION_ALCOVE	.\OpenAL 1.1 SDK\include\EFX-Util.h	272;"	d
REVERB_PRESET_SPACESTATION_ALCOVE	.\inc\openal\EFX-Util.h	272;"	d
REVERB_PRESET_SPACESTATION_CUPBOARD	.\OpenAL 1.1 SDK\include\EFX-Util.h	284;"	d
REVERB_PRESET_SPACESTATION_CUPBOARD	.\inc\openal\EFX-Util.h	284;"	d
REVERB_PRESET_SPACESTATION_HALL	.\OpenAL 1.1 SDK\include\EFX-Util.h	282;"	d
REVERB_PRESET_SPACESTATION_HALL	.\inc\openal\EFX-Util.h	282;"	d
REVERB_PRESET_SPACESTATION_LARGEROOM	.\OpenAL 1.1 SDK\include\EFX-Util.h	280;"	d
REVERB_PRESET_SPACESTATION_LARGEROOM	.\inc\openal\EFX-Util.h	280;"	d
REVERB_PRESET_SPACESTATION_LONGPASSAGE	.\OpenAL 1.1 SDK\include\EFX-Util.h	278;"	d
REVERB_PRESET_SPACESTATION_LONGPASSAGE	.\inc\openal\EFX-Util.h	278;"	d
REVERB_PRESET_SPACESTATION_MEDIUMROOM	.\OpenAL 1.1 SDK\include\EFX-Util.h	274;"	d
REVERB_PRESET_SPACESTATION_MEDIUMROOM	.\inc\openal\EFX-Util.h	274;"	d
REVERB_PRESET_SPACESTATION_SHORTPASSAGE	.\OpenAL 1.1 SDK\include\EFX-Util.h	276;"	d
REVERB_PRESET_SPACESTATION_SHORTPASSAGE	.\inc\openal\EFX-Util.h	276;"	d
REVERB_PRESET_SPACESTATION_SMALLROOM	.\OpenAL 1.1 SDK\include\EFX-Util.h	286;"	d
REVERB_PRESET_SPACESTATION_SMALLROOM	.\inc\openal\EFX-Util.h	286;"	d
REVERB_PRESET_SPORT_EMPTYSTADIUM	.\OpenAL 1.1 SDK\include\EFX-Util.h	316;"	d
REVERB_PRESET_SPORT_EMPTYSTADIUM	.\inc\openal\EFX-Util.h	316;"	d
REVERB_PRESET_SPORT_FULLSTADIUM	.\OpenAL 1.1 SDK\include\EFX-Util.h	326;"	d
REVERB_PRESET_SPORT_FULLSTADIUM	.\inc\openal\EFX-Util.h	326;"	d
REVERB_PRESET_SPORT_GYMNASIUM	.\OpenAL 1.1 SDK\include\EFX-Util.h	324;"	d
REVERB_PRESET_SPORT_GYMNASIUM	.\inc\openal\EFX-Util.h	324;"	d
REVERB_PRESET_SPORT_LARGESWIMMINGPOOL	.\OpenAL 1.1 SDK\include\EFX-Util.h	322;"	d
REVERB_PRESET_SPORT_LARGESWIMMINGPOOL	.\inc\openal\EFX-Util.h	322;"	d
REVERB_PRESET_SPORT_SMALLSWIMMINGPOOL	.\OpenAL 1.1 SDK\include\EFX-Util.h	320;"	d
REVERB_PRESET_SPORT_SMALLSWIMMINGPOOL	.\inc\openal\EFX-Util.h	320;"	d
REVERB_PRESET_SPORT_SQUASHCOURT	.\OpenAL 1.1 SDK\include\EFX-Util.h	318;"	d
REVERB_PRESET_SPORT_SQUASHCOURT	.\inc\openal\EFX-Util.h	318;"	d
REVERB_PRESET_SPORT_STADIUMTANNOY	.\OpenAL 1.1 SDK\include\EFX-Util.h	328;"	d
REVERB_PRESET_SPORT_STADIUMTANNOY	.\inc\openal\EFX-Util.h	328;"	d
REVERB_PRESET_STONECORRIDOR	.\OpenAL 1.1 SDK\include\EFX-Util.h	172;"	d
REVERB_PRESET_STONECORRIDOR	.\inc\openal\EFX-Util.h	172;"	d
REVERB_PRESET_STONEROOM	.\OpenAL 1.1 SDK\include\EFX-Util.h	156;"	d
REVERB_PRESET_STONEROOM	.\inc\openal\EFX-Util.h	156;"	d
REVERB_PRESET_UNDERWATER	.\OpenAL 1.1 SDK\include\EFX-Util.h	190;"	d
REVERB_PRESET_UNDERWATER	.\inc\openal\EFX-Util.h	190;"	d
REVERB_PRESET_WOODEN_ALCOVE	.\OpenAL 1.1 SDK\include\EFX-Util.h	293;"	d
REVERB_PRESET_WOODEN_ALCOVE	.\inc\openal\EFX-Util.h	293;"	d
REVERB_PRESET_WOODEN_COURTYARD	.\OpenAL 1.1 SDK\include\EFX-Util.h	309;"	d
REVERB_PRESET_WOODEN_COURTYARD	.\inc\openal\EFX-Util.h	309;"	d
REVERB_PRESET_WOODEN_CUPBOARD	.\OpenAL 1.1 SDK\include\EFX-Util.h	305;"	d
REVERB_PRESET_WOODEN_CUPBOARD	.\inc\openal\EFX-Util.h	305;"	d
REVERB_PRESET_WOODEN_HALL	.\OpenAL 1.1 SDK\include\EFX-Util.h	303;"	d
REVERB_PRESET_WOODEN_HALL	.\inc\openal\EFX-Util.h	303;"	d
REVERB_PRESET_WOODEN_LARGEROOM	.\OpenAL 1.1 SDK\include\EFX-Util.h	301;"	d
REVERB_PRESET_WOODEN_LARGEROOM	.\inc\openal\EFX-Util.h	301;"	d
REVERB_PRESET_WOODEN_LONGPASSAGE	.\OpenAL 1.1 SDK\include\EFX-Util.h	299;"	d
REVERB_PRESET_WOODEN_LONGPASSAGE	.\inc\openal\EFX-Util.h	299;"	d
REVERB_PRESET_WOODEN_MEDIUMROOM	.\OpenAL 1.1 SDK\include\EFX-Util.h	297;"	d
REVERB_PRESET_WOODEN_MEDIUMROOM	.\inc\openal\EFX-Util.h	297;"	d
REVERB_PRESET_WOODEN_SHORTPASSAGE	.\OpenAL 1.1 SDK\include\EFX-Util.h	295;"	d
REVERB_PRESET_WOODEN_SHORTPASSAGE	.\inc\openal\EFX-Util.h	295;"	d
REVERB_PRESET_WOODEN_SMALLROOM	.\OpenAL 1.1 SDK\include\EFX-Util.h	307;"	d
REVERB_PRESET_WOODEN_SMALLROOM	.\inc\openal\EFX-Util.h	307;"	d
RIFFCHUNK	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^} RIFFCHUNK;$/;"	t	typeref:struct:__anon6	file:
ReadWaveData	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^WAVERESULT CWaves::ReadWaveData(WAVEID WaveID, void *pData, unsigned long ulDataSize, unsigned long *pulBytesWritten)$/;"	f	class:CWaves
ResetFilters	.\OpenAL 1.1 SDK\samples\framework\Win32\aldlist.cpp	/^void ALDeviceList::ResetFilters()$/;"	f	class:ALDeviceList
SERVICE_UPDATE_PERIOD	.\OpenAL 1.1 SDK\samples\playmultichannel\Source\PlayMultiChannel.cpp	29;"	d	file:
SERVICE_UPDATE_PERIOD	.\OpenAL 1.1 SDK\samples\playoggvorbis\Source\PlayOggVorbis.cpp	29;"	d	file:
SERVICE_UPDATE_PERIOD	.\OpenAL 1.1 SDK\samples\playstream\Source\PlayStream.cpp	29;"	d	file:
STREAMSET	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	49;"	d
Samples	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^    } Samples;$/;"	m	struct:__anon8	typeref:union:__anon8::__anon9
SetEFXEAXReverbProperties	.\OpenAL 1.1 SDK\samples\efxreverb\Source\EFXReverb.cpp	/^ALboolean SetEFXEAXReverbProperties(EFXEAXREVERBPROPERTIES *pEFXEAXReverb, ALuint uiEffect)$/;"	f
SetEFXEAXReverbProperties	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^bool SetEFXEAXReverbProperties(EFXEAXREVERBPROPERTIES *pEFXEAXReverb, unsigned long ulEffectNumber)$/;"	f
SetWaveDataOffset	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^WAVERESULT CWaves::SetWaveDataOffset(WAVEID WaveID, unsigned long ulOffset)$/;"	f	class:CWaves
ShutdownEFX	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^void ShutdownEFX()$/;"	f
ShutdownOpenAL	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^bool ShutdownOpenAL()$/;"	f
ShutdownVorbisFile	.\OpenAL 1.1 SDK\samples\playoggvorbis\Source\PlayOggVorbis.cpp	/^void ShutdownVorbisFile()$/;"	f
Start	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^bool Start()$/;"	f
Stop	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^bool Stop()$/;"	f
SubFormat	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^    GUID            SubFormat;$/;"	m	struct:__anon8
Swap	.\OpenAL 1.1 SDK\samples\playoggvorbis\Source\PlayOggVorbis.cpp	/^void Swap(short &s1, short &s2)$/;"	f
TEST_OGGVORBIS_FILE	.\OpenAL 1.1 SDK\samples\playoggvorbis\Source\PlayOggVorbis.cpp	31;"	d	file:
TEST_WAVE_FILE	.\OpenAL 1.1 SDK\samples\efxfilter\Source\EFXFilter.cpp	27;"	d	file:
TEST_WAVE_FILE	.\OpenAL 1.1 SDK\samples\efxreverb\Source\EFXReverb.cpp	29;"	d	file:
TEST_WAVE_FILE	.\OpenAL 1.1 SDK\samples\playmultichannel\Source\PlayMultiChannel.cpp	31;"	d	file:
TEST_WAVE_FILE	.\OpenAL 1.1 SDK\samples\playstatic\Source\PlayStatic.cpp	27;"	d	file:
TEST_WAVE_FILE	.\OpenAL 1.1 SDK\samples\playstream\Source\PlayStream.cpp	31;"	d	file:
UnloadOAL10Library	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.cpp	/^ALvoid UnloadOAL10Library()$/;"	f
W	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  long  W;$/;"	m	struct:vorbis_block
W	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  long W;$/;"	m	struct:vorbis_dsp_state
WAVEFILEHEADER	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^} WAVEFILEHEADER;$/;"	t	typeref:struct:__anon5	file:
WAVEFILEINFO	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^} WAVEFILEINFO, *LPWAVEFILEINFO;$/;"	t	typeref:struct:__anon10
WAVEFILETYPE	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^enum WAVEFILETYPE$/;"	g
WAVEFMT	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^} WAVEFMT;$/;"	t	typeref:struct:__anon7	file:
WAVEFORMATEX	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^} WAVEFORMATEX;$/;"	t	typeref:struct:tWAVEFORMATEX
WAVEFORMATEXTENSIBLE	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^} WAVEFORMATEXTENSIBLE, *PWAVEFORMATEXTENSIBLE;$/;"	t	typeref:struct:__anon8
WAVEHEADER	.\OpenAL 1.1 SDK\samples\capture\Source\Capture.cpp	/^} WAVEHEADER;$/;"	t	typeref:struct:__anon3	file:
WAVEHEADER	.\src\mic\main.cpp	/^} WAVEHEADER;$/;"	t	typeref:struct:__anon19	file:
WAVEID	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^typedef int	WAVEID;$/;"	t
WAVERESULT	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^enum WAVERESULT$/;"	g
WF_EX	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^	WF_EX  = 1,$/;"	e	enum:WAVEFILETYPE
WF_EXT	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^	WF_EXT = 2$/;"	e	enum:WAVEFILETYPE
WR_BADWAVEFILE	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^	WR_BADWAVEFILE						= - 2,$/;"	e	enum:WAVERESULT
WR_FILEERROR	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^	WR_FILEERROR						= -13,$/;"	e	enum:WAVERESULT
WR_INVALIDFILENAME	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^	WR_INVALIDFILENAME					= - 1,$/;"	e	enum:WAVERESULT
WR_INVALIDPARAM	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^	WR_INVALIDPARAM						= - 3,$/;"	e	enum:WAVERESULT
WR_INVALIDSPEAKERPOS	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^	WR_INVALIDSPEAKERPOS				= -15,$/;"	e	enum:WAVERESULT
WR_INVALIDWAVEFILETYPE	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^	WR_INVALIDWAVEFILETYPE				= -16,$/;"	e	enum:WAVERESULT
WR_INVALIDWAVEID	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^	WR_INVALIDWAVEID					= - 4,$/;"	e	enum:WAVERESULT
WR_NOTSUPPORTEDYET	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^	WR_NOTSUPPORTEDYET					= - 5,$/;"	e	enum:WAVERESULT
WR_NOTWAVEFORMATEXTENSIBLEFORMAT	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^	WR_NOTWAVEFORMATEXTENSIBLEFORMAT	= -17$/;"	e	enum:WAVERESULT
WR_OFFSETOUTOFDATARANGE	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^	WR_OFFSETOUTOFDATARANGE				= -12,$/;"	e	enum:WAVERESULT
WR_OK	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^	WR_OK = 0,$/;"	e	enum:WAVERESULT
WR_OUTOFMEMORY	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^	WR_OUTOFMEMORY						= -14,$/;"	e	enum:WAVERESULT
WR_WAVEMUSTBEMONO	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^	WR_WAVEMUSTBEMONO					= - 6,$/;"	e	enum:WAVERESULT
WR_WAVEMUSTBEWAVEFORMATPCM	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^	WR_WAVEMUSTBEWAVEFORMATPCM			= - 7,$/;"	e	enum:WAVERESULT
WR_WAVESMUSTHAVESAMEBITRATE	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^	WR_WAVESMUSTHAVESAMEBITRATE			= -10,$/;"	e	enum:WAVERESULT
WR_WAVESMUSTHAVESAMEBITRESOLUTION	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^	WR_WAVESMUSTHAVESAMEBITRESOLUTION	= - 8,$/;"	e	enum:WAVERESULT
WR_WAVESMUSTHAVESAMEBLOCKALIGNMENT	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^	WR_WAVESMUSTHAVESAMEBLOCKALIGNMENT	= -11,$/;"	e	enum:WAVERESULT
WR_WAVESMUSTHAVESAMEFREQUENCY	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^	WR_WAVESMUSTHAVESAMEFREQUENCY		= - 9,$/;"	e	enum:WAVERESULT
_CWAVES_H_	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	6;"	d
_EAXEXCLUSIONPROPERTIES	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^typedef struct _EAXEXCLUSIONPROPERTIES$/;"	s
_EAXEXCLUSIONPROPERTIES	.\inc\openal\EFX-Util.h	/^typedef struct _EAXEXCLUSIONPROPERTIES$/;"	s
_EAXOBSTRUCTIONPROPERTIES	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^typedef struct _EAXOBSTRUCTIONPROPERTIES$/;"	s
_EAXOBSTRUCTIONPROPERTIES	.\inc\openal\EFX-Util.h	/^typedef struct _EAXOBSTRUCTIONPROPERTIES$/;"	s
_EAXOCCLUSIONPROPERTIES	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^typedef struct _EAXOCCLUSIONPROPERTIES$/;"	s
_EAXOCCLUSIONPROPERTIES	.\inc\openal\EFX-Util.h	/^typedef struct _EAXOCCLUSIONPROPERTIES$/;"	s
_EAXREVERBPROPERTIES	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^typedef struct _EAXREVERBPROPERTIES$/;"	s
_EAXREVERBPROPERTIES	.\inc\openal\EFX-Util.h	/^typedef struct _EAXREVERBPROPERTIES$/;"	s
_EAXVECTOR	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^typedef struct _EAXVECTOR {$/;"	s
_EAXVECTOR	.\inc\openal\EFX-Util.h	/^typedef struct _EAXVECTOR {$/;"	s
_EFXLOWPASSFILTER	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^typedef struct _EFXLOWPASSFILTER$/;"	s
_EFXLOWPASSFILTER	.\inc\openal\EFX-Util.h	/^typedef struct _EFXLOWPASSFILTER$/;"	s
_FRAMEWORK_H_	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.h	2;"	d
_OGG_H	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	18;"	d
_OPENALFNTABLE	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	7;"	d
_OS_TYPES_H	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	18;"	d
_OV_FILE_H_	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	19;"	d
_WAVEFORMATEXTENSIBLE_	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	56;"	d
_WAVEFORMATEX_	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	42;"	d
__efx_h_	.\OpenAL 1.1 SDK\include\efx.h	2;"	d
__efx_h_	.\inc\openal\efx.h	2;"	d
__efxcreative_h_	.\OpenAL 1.1 SDK\include\efx-creative.h	2;"	d
__efxcreative_h_	.\inc\openal\efx-creative.h	2;"	d
_ogg_calloc	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	23;"	d
_ogg_free	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	25;"	d
_ogg_malloc	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	22;"	d
_ogg_realloc	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	24;"	d
_vorbis_codec_h_	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	19;"	d
alAuxiliaryEffectSlotf	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPALAUXILIARYEFFECTSLOTF alAuxiliaryEffectSlotf = NULL;$/;"	v
alAuxiliaryEffectSlotfv	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPALAUXILIARYEFFECTSLOTFV alAuxiliaryEffectSlotfv = NULL;$/;"	v
alAuxiliaryEffectSloti	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPALAUXILIARYEFFECTSLOTI alAuxiliaryEffectSloti = NULL;$/;"	v
alAuxiliaryEffectSloti	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^LPALAUXILIARYEFFECTSLOTI alAuxiliaryEffectSloti = 0;$/;"	v
alAuxiliaryEffectSlotiv	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPALAUXILIARYEFFECTSLOTIV alAuxiliaryEffectSlotiv = NULL;$/;"	v
alBufferData	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALBUFFERDATA				alBufferData;$/;"	m	struct:__anon11
alDeleteAuxiliaryEffectSlots	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPALDELETEAUXILIARYEFFECTSLOTS alDeleteAuxiliaryEffectSlots = NULL;$/;"	v
alDeleteAuxiliaryEffectSlots	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^LPALDELETEAUXILIARYEFFECTSLOTS alDeleteAuxiliaryEffectSlots = 0;$/;"	v
alDeleteBuffers	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALDELETEBUFFERS			alDeleteBuffers;$/;"	m	struct:__anon11
alDeleteEffects	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPALDELETEEFFECTS alDeleteEffects = NULL;$/;"	v
alDeleteEffects	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^LPALDELETEEFFECTS alDeleteEffects = 0;$/;"	v
alDeleteFilters	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPALDELETEFILTERS alDeleteFilters = NULL;$/;"	v
alDeleteFilters	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^LPALDELETEFILTERS alDeleteFilters = 0;$/;"	v
alDeleteSources	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALDELETESOURCES			alDeleteSources;$/;"	m	struct:__anon11
alDisable	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALDISABLE					alDisable;$/;"	m	struct:__anon11
alDistanceModel	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALDISTANCEMODEL			alDistanceModel;$/;"	m	struct:__anon11
alDopplerFactor	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALDOPPLERFACTOR			alDopplerFactor;$/;"	m	struct:__anon11
alDopplerVelocity	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALDOPPLERVELOCITY			alDopplerVelocity;$/;"	m	struct:__anon11
alEffectf	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPALEFFECTF alEffectf = NULL;$/;"	v
alEffectf	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^LPALEFFECTF alEffectf = 0;$/;"	v
alEffectfv	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPALEFFECTFV alEffectfv = NULL;$/;"	v
alEffectfv	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^LPALEFFECTFV alEffectfv = 0;$/;"	v
alEffecti	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPALEFFECTI alEffecti = NULL;$/;"	v
alEffecti	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^LPALEFFECTI alEffecti = 0;$/;"	v
alEffectiv	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPALEFFECTIV alEffectiv = NULL;$/;"	v
alEnable	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALENABLE					alEnable;$/;"	m	struct:__anon11
alFilterf	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPALFILTERF alFilterf = NULL;$/;"	v
alFilterf	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^LPALFILTERF alFilterf = 0;$/;"	v
alFilterfv	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPALFILTERFV alFilterfv = NULL;$/;"	v
alFilteri	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPALFILTERI alFilteri = NULL;$/;"	v
alFilteri	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^LPALFILTERI alFilteri = 0;$/;"	v
alFilteriv	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPALFILTERIV alFilteriv = NULL;$/;"	v
alGenAuxiliaryEffectSlots	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPALGENAUXILIARYEFFECTSLOTS alGenAuxiliaryEffectSlots = NULL;$/;"	v
alGenAuxiliaryEffectSlots	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^LPALGENAUXILIARYEFFECTSLOTS alGenAuxiliaryEffectSlots = 0;$/;"	v
alGenBuffers	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALGENBUFFERS				alGenBuffers;$/;"	m	struct:__anon11
alGenEffects	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPALGENEFFECTS alGenEffects = NULL;$/;"	v
alGenEffects	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^LPALGENEFFECTS alGenEffects = 0;$/;"	v
alGenFilters	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPALGENFILTERS alGenFilters = NULL;$/;"	v
alGenFilters	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^LPALGENFILTERS alGenFilters = 0;$/;"	v
alGenSources	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALGENSOURCES				alGenSources;$/;"	m	struct:__anon11
alGetAuxiliaryEffectSlotf	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPALGETAUXILIARYEFFECTSLOTF alGetAuxiliaryEffectSlotf = NULL;$/;"	v
alGetAuxiliaryEffectSlotfv	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPALGETAUXILIARYEFFECTSLOTFV alGetAuxiliaryEffectSlotfv = NULL;$/;"	v
alGetAuxiliaryEffectSloti	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPALGETAUXILIARYEFFECTSLOTI alGetAuxiliaryEffectSloti = NULL;$/;"	v
alGetAuxiliaryEffectSlotiv	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPALGETAUXILIARYEFFECTSLOTIV alGetAuxiliaryEffectSlotiv = NULL;$/;"	v
alGetBoolean	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALGETBOOLEAN				alGetBoolean;$/;"	m	struct:__anon11
alGetBooleanv	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALGETBOOLEANV				alGetBooleanv;$/;"	m	struct:__anon11
alGetBufferf	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALGETBUFFERF				alGetBufferf;$/;"	m	struct:__anon11
alGetBufferi	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALGETBUFFERI				alGetBufferi;$/;"	m	struct:__anon11
alGetDouble	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALGETDOUBLE				alGetDouble;$/;"	m	struct:__anon11
alGetDoublev	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALGETDOUBLEV				alGetDoublev;$/;"	m	struct:__anon11
alGetEffectf	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPALGETEFFECTF alGetEffectf = NULL;$/;"	v
alGetEffectfv	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPALGETEFFECTFV alGetEffectfv = NULL;$/;"	v
alGetEffecti	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPALGETEFFECTI alGetEffecti = NULL;$/;"	v
alGetEffectiv	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPALGETEFFECTIV alGetEffectiv = NULL;$/;"	v
alGetEnumValue	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALGETENUMVALUE			alGetEnumValue;$/;"	m	struct:__anon11
alGetError	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALGETERROR				alGetError;$/;"	m	struct:__anon11
alGetFilterf	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPALGETFILTERF alGetFilterf = NULL;$/;"	v
alGetFilterfv	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPALGETFILTERFV alGetFilterfv = NULL;$/;"	v
alGetFilteri	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPALGETFILTERI alGetFilteri = NULL;$/;"	v
alGetFilteriv	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPALGETFILTERIV alGetFilteriv = NULL;$/;"	v
alGetFloat	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALGETFLOAT				alGetFloat;$/;"	m	struct:__anon11
alGetFloatv	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALGETFLOATV				alGetFloatv;$/;"	m	struct:__anon11
alGetInteger	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALGETINTEGER				alGetInteger;$/;"	m	struct:__anon11
alGetIntegerv	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALGETINTEGERV				alGetIntegerv;$/;"	m	struct:__anon11
alGetListener3f	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALGETLISTENER3F			alGetListener3f;$/;"	m	struct:__anon11
alGetListenerf	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALGETLISTENERF			alGetListenerf;$/;"	m	struct:__anon11
alGetListenerfv	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALGETLISTENERFV			alGetListenerfv;$/;"	m	struct:__anon11
alGetListeneri	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALGETLISTENERI			alGetListeneri;$/;"	m	struct:__anon11
alGetProcAddress	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALGETPROCADDRESS			alGetProcAddress;$/;"	m	struct:__anon11
alGetSourcef	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALGETSOURCEF				alGetSourcef;$/;"	m	struct:__anon11
alGetSourcefv	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALGETSOURCEFV				alGetSourcefv;$/;"	m	struct:__anon11
alGetSourcei	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALGETSOURCEI				alGetSourcei;$/;"	m	struct:__anon11
alGetString	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALGETSTRING				alGetString;$/;"	m	struct:__anon11
alIsAuxiliaryEffectSlot	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPALISAUXILIARYEFFECTSLOT alIsAuxiliaryEffectSlot = NULL;$/;"	v
alIsAuxiliaryEffectSlot	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^LPALISAUXILIARYEFFECTSLOT alIsAuxiliaryEffectSlot = 0;$/;"	v
alIsBuffer	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALISBUFFER				alIsBuffer;$/;"	m	struct:__anon11
alIsEffect	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPALISEFFECT alIsEffect = NULL;$/;"	v
alIsEffect	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^LPALISEFFECT alIsEffect = 0;$/;"	v
alIsEnabled	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALISENABLED				alIsEnabled;$/;"	m	struct:__anon11
alIsExtensionPresent	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALISEXTENSIONPRESENT		alIsExtensionPresent;$/;"	m	struct:__anon11
alIsFilter	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPALISFILTER alIsFilter = NULL;$/;"	v
alIsFilter	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^LPALISFILTER alIsFilter = 0;$/;"	v
alIsSource	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALISSOURCE				alIsSource;$/;"	m	struct:__anon11
alListener3f	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALLISTENER3F				alListener3f;$/;"	m	struct:__anon11
alListenerf	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALLISTENERF				alListenerf;$/;"	m	struct:__anon11
alListenerfv	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALLISTENERFV				alListenerfv;$/;"	m	struct:__anon11
alListeneri	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALLISTENERI				alListeneri;$/;"	m	struct:__anon11
alSource3f	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALSOURCE3F				alSource3f;$/;"	m	struct:__anon11
alSourcePause	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALSOURCEPAUSE				alSourcePause;$/;"	m	struct:__anon11
alSourcePlay	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALSOURCEPLAY				alSourcePlay;$/;"	m	struct:__anon11
alSourcePlayv	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALSOURCEPLAYV				alSourcePlayv;$/;"	m	struct:__anon11
alSourceQueueBuffers	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALSOURCEQUEUEBUFFERS		alSourceQueueBuffers;$/;"	m	struct:__anon11
alSourceStop	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALSOURCESTOP				alSourceStop;$/;"	m	struct:__anon11
alSourceStopv	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALSOURCESTOPV				alSourceStopv;$/;"	m	struct:__anon11
alSourceUnqueueBuffers	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALSOURCEUNQUEUEBUFFERS	alSourceUnqueueBuffers;$/;"	m	struct:__anon11
alSourcef	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALSOURCEF					alSourcef;$/;"	m	struct:__anon11
alSourcefv	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALSOURCEFV				alSourcefv;$/;"	m	struct:__anon11
alSourcei	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALSOURCEI					alSourcei;$/;"	m	struct:__anon11
alcCloseDevice	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALCCLOSEDEVICE			alcCloseDevice;$/;"	m	struct:__anon11
alcCreateContext	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALCCREATECONTEXT			alcCreateContext;$/;"	m	struct:__anon11
alcDestroyContext	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALCDESTROYCONTEXT			alcDestroyContext;$/;"	m	struct:__anon11
alcGetContextsDevice	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALCGETCONTEXTSDEVICE		alcGetContextsDevice;$/;"	m	struct:__anon11
alcGetCurrentContext	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALCGETCURRENTCONTEXT		alcGetCurrentContext;$/;"	m	struct:__anon11
alcGetEnumValue	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALCGETENUMVALUE			alcGetEnumValue;$/;"	m	struct:__anon11
alcGetError	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALCGETERROR				alcGetError;$/;"	m	struct:__anon11
alcGetIntegerv	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALCGETINTEGERV			alcGetIntegerv;$/;"	m	struct:__anon11
alcGetProcAddress	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALCGETPROCADDRESS			alcGetProcAddress;$/;"	m	struct:__anon11
alcGetString	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALCGETSTRING				alcGetString;$/;"	m	struct:__anon11
alcIsExtensionPresent	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALCISEXTENSIONPRESENT		alcIsExtensionPresent;$/;"	m	struct:__anon11
alcMakeContextCurrent	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALCMAKECONTEXTCURRENT		alcMakeContextCurrent;$/;"	m	struct:__anon11
alcOpenDevice	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALCOPENDEVICE				alcOpenDevice;$/;"	m	struct:__anon11
alcProcessContext	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALCPROCESSCONTEXT			alcProcessContext;$/;"	m	struct:__anon11
alcSuspendContext	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.h	/^	LPALCSUSPENDCONTEXT			alcSuspendContext;$/;"	m	struct:__anon11
alloc_chain	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^struct alloc_chain{$/;"	s
analysisp	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  int analysisp;$/;"	m	struct:vorbis_dsp_state
bSelected	.\OpenAL 1.1 SDK\samples\framework\Win32\aldlist.h	/^	bool			bSelected;$/;"	m	struct:__anon4
b_o_s	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  int     b_o_s;          \/* set after we've written the initial page$/;"	m	struct:__anon14
b_o_s	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  long  b_o_s;$/;"	m	struct:__anon15
backend_state	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  void       *backend_state;$/;"	m	struct:vorbis_dsp_state
bitrate_lower	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  long bitrate_lower;$/;"	m	struct:vorbis_info
bitrate_nominal	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  long bitrate_nominal;$/;"	m	struct:vorbis_info
bitrate_upper	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  long bitrate_upper;$/;"	m	struct:vorbis_info
bitrate_window	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  long bitrate_window;$/;"	m	struct:vorbis_info
bittrack	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	/^  double           bittrack;$/;"	m	struct:OggVorbis_File
body	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  unsigned char *body;$/;"	m	struct:__anon13
body_data	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  unsigned char   *body_data;    \/* bytes from packet bodies *\/$/;"	m	struct:__anon14
body_fill	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  long    body_fill;             \/* elements stored; fill mark *\/$/;"	m	struct:__anon14
body_len	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  long body_len;$/;"	m	struct:__anon13
body_returned	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  long    body_returned;         \/* elements of fill returned *\/$/;"	m	struct:__anon14
body_storage	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  long    body_storage;          \/* storage elements allocated *\/$/;"	m	struct:__anon14
bodybytes	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  int bodybytes;$/;"	m	struct:__anon16
buffer	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  unsigned char *buffer;$/;"	m	struct:__anon12
build_failed	.\make.bat	/^:build_failed$/;"	l
bytes	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  long  bytes;$/;"	m	struct:__anon15
callbacks	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	/^  ov_callbacks callbacks;$/;"	m	struct:OggVorbis_File
cbSize	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^    WORD    cbSize;$/;"	m	struct:tWAVEFORMATEX
centerW	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  long centerW;$/;"	m	struct:vorbis_dsp_state
channels	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  int channels;$/;"	m	struct:vorbis_info
close_func	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	/^  int    (*close_func) (void *datasource);$/;"	m	struct:__anon17
codec_setup	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  void *codec_setup;$/;"	m	struct:vorbis_info
comment_lengths	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  int   *comment_lengths;$/;"	m	struct:vorbis_comment
comments	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  int    comments;$/;"	m	struct:vorbis_comment
current_link	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	/^  int              current_link;$/;"	m	struct:OggVorbis_File
current_serialno	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	/^  long             current_serialno;$/;"	m	struct:OggVorbis_File
data	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  unsigned char *data;$/;"	m	struct:__anon16
dataoffsets	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	/^  ogg_int64_t     *dataoffsets;$/;"	m	struct:OggVorbis_File
datasource	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	/^  void            *datasource; \/* Pointer to a FILE *, etc. *\/$/;"	m	struct:OggVorbis_File
defaultDeviceIndex	.\OpenAL 1.1 SDK\samples\framework\Win32\aldlist.h	/^	int defaultDeviceIndex;$/;"	m	class:ALDeviceList
dwChannelMask	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^    DWORD           dwChannelMask;      \/* which channels are *\/$/;"	m	struct:__anon8
eXRAMAccessible	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^ALenum eXRAMAccessible = 0;$/;"	v
eXRAMAuto	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^ALenum eXRAMAuto = 0;$/;"	v
eXRAMFree	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^ALenum eXRAMFree = 0;$/;"	v
eXRAMHardware	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^ALenum eXRAMHardware = 0;$/;"	v
eXRAMSize	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^ALenum eXRAMSize = 0;$/;"	v
e_o_s	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  int     e_o_s;          \/* set when we have buffered the last packet in the$/;"	m	struct:__anon14
e_o_s	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  long  e_o_s;$/;"	m	struct:__anon15
eaxBathroom	.\OpenAL 1.1 SDK\samples\efxreverb\Source\EFXReverb.cpp	/^EAXREVERBPROPERTIES eaxBathroom = REVERB_PRESET_BATHROOM;$/;"	v
eaxGetBufferMode	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPEAXGETBUFFERMODE eaxGetBufferMode = NULL;$/;"	v
eaxHangar	.\OpenAL 1.1 SDK\samples\efxreverb\Source\EFXReverb.cpp	/^EAXREVERBPROPERTIES eaxHangar = REVERB_PRESET_HANGAR;$/;"	v
eaxSetBufferMode	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^LPEAXSETBUFFERMODE eaxSetBufferMode = NULL;$/;"	v
end	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	/^  ogg_int64_t      end;$/;"	m	struct:OggVorbis_File
endbit	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  int  endbit;$/;"	m	struct:__anon12
endbyte	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  long endbyte;$/;"	m	struct:__anon12
eofflag	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  int         eofflag;$/;"	m	struct:vorbis_block
eofflag	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  int  eofflag;$/;"	m	struct:vorbis_dsp_state
exit_make	.\make.bat	/^:exit_make$/;"	l
fftw_iodim64_do_not_use_me	.\fftw-dlls\32\include\fftw3.h	/^struct fftw_iodim64_do_not_use_me {$/;"	s
fftw_iodim64_do_not_use_me	.\fftw-dlls\64\include\fftw3.h	/^struct fftw_iodim64_do_not_use_me {$/;"	s
fftw_iodim64_do_not_use_me	.\inc\fftw\fftw3.h	/^struct fftw_iodim64_do_not_use_me {$/;"	s
fftw_iodim_do_not_use_me	.\fftw-dlls\32\include\fftw3.h	/^struct fftw_iodim_do_not_use_me {$/;"	s
fftw_iodim_do_not_use_me	.\fftw-dlls\64\include\fftw3.h	/^struct fftw_iodim_do_not_use_me {$/;"	s
fftw_iodim_do_not_use_me	.\inc\fftw\fftw3.h	/^struct fftw_iodim_do_not_use_me {$/;"	s
fftw_r2r_kind_do_not_use_me	.\fftw-dlls\32\include\fftw3.h	/^enum fftw_r2r_kind_do_not_use_me {$/;"	g
fftw_r2r_kind_do_not_use_me	.\fftw-dlls\64\include\fftw3.h	/^enum fftw_r2r_kind_do_not_use_me {$/;"	g
fftw_r2r_kind_do_not_use_me	.\inc\fftw\fftw3.h	/^enum fftw_r2r_kind_do_not_use_me {$/;"	g
fftw_read_char_func_do_not_use_me	.\fftw-dlls\32\include\fftw3.h	/^typedef int (*fftw_read_char_func_do_not_use_me)(void *);$/;"	t
fftw_read_char_func_do_not_use_me	.\fftw-dlls\64\include\fftw3.h	/^typedef int (*fftw_read_char_func_do_not_use_me)(void *);$/;"	t
fftw_read_char_func_do_not_use_me	.\inc\fftw\fftw3.h	/^typedef int (*fftw_read_char_func_do_not_use_me)(void *);$/;"	t
fftw_write_char_func_do_not_use_me	.\fftw-dlls\32\include\fftw3.h	/^typedef void (*fftw_write_char_func_do_not_use_me)(char c, void *);$/;"	t
fftw_write_char_func_do_not_use_me	.\fftw-dlls\64\include\fftw3.h	/^typedef void (*fftw_write_char_func_do_not_use_me)(char c, void *);$/;"	t
fftw_write_char_func_do_not_use_me	.\inc\fftw\fftw3.h	/^typedef void (*fftw_write_char_func_do_not_use_me)(char c, void *);$/;"	t
fill	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  int fill;$/;"	m	struct:__anon16
filterIndex	.\OpenAL 1.1 SDK\samples\framework\Win32\aldlist.h	/^	int filterIndex;$/;"	m	class:ALDeviceList
flAirAbsorptionGainHF	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^	float flAirAbsorptionGainHF;$/;"	m	struct:__anon2
flAirAbsorptionGainHF	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	/^	float flAirAbsorptionGainHF;$/;"	m	struct:__anon18
flAirAbsorptionGainHF	.\inc\openal\EFX-Util.h	/^	float flAirAbsorptionGainHF;$/;"	m	struct:__anon1
flAirAbsorptionHF	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^    float flAirAbsorptionHF;$/;"	m	struct:_EAXREVERBPROPERTIES
flAirAbsorptionHF	.\inc\openal\EFX-Util.h	/^    float flAirAbsorptionHF;$/;"	m	struct:_EAXREVERBPROPERTIES
flDecayHFRatio	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^	float flDecayHFRatio;$/;"	m	struct:__anon2
flDecayHFRatio	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^    float flDecayHFRatio;$/;"	m	struct:_EAXREVERBPROPERTIES
flDecayHFRatio	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	/^	float flDecayHFRatio;$/;"	m	struct:__anon18
flDecayHFRatio	.\inc\openal\EFX-Util.h	/^	float flDecayHFRatio;$/;"	m	struct:__anon1
flDecayHFRatio	.\inc\openal\EFX-Util.h	/^    float flDecayHFRatio;$/;"	m	struct:_EAXREVERBPROPERTIES
flDecayLFRatio	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^	float flDecayLFRatio;$/;"	m	struct:__anon2
flDecayLFRatio	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^    float flDecayLFRatio;$/;"	m	struct:_EAXREVERBPROPERTIES
flDecayLFRatio	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	/^	float flDecayLFRatio;$/;"	m	struct:__anon18
flDecayLFRatio	.\inc\openal\EFX-Util.h	/^	float flDecayLFRatio;$/;"	m	struct:__anon1
flDecayLFRatio	.\inc\openal\EFX-Util.h	/^    float flDecayLFRatio;$/;"	m	struct:_EAXREVERBPROPERTIES
flDecayTime	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^	float flDecayTime;$/;"	m	struct:__anon2
flDecayTime	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^    float flDecayTime;$/;"	m	struct:_EAXREVERBPROPERTIES
flDecayTime	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	/^	float flDecayTime;$/;"	m	struct:__anon18
flDecayTime	.\inc\openal\EFX-Util.h	/^	float flDecayTime;$/;"	m	struct:__anon1
flDecayTime	.\inc\openal\EFX-Util.h	/^    float flDecayTime;$/;"	m	struct:_EAXREVERBPROPERTIES
flDensity	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^	float flDensity;$/;"	m	struct:__anon2
flDensity	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	/^	float flDensity;$/;"	m	struct:__anon18
flDensity	.\inc\openal\EFX-Util.h	/^	float flDensity;$/;"	m	struct:__anon1
flDiffusion	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^	float flDiffusion;$/;"	m	struct:__anon2
flDiffusion	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	/^	float flDiffusion;$/;"	m	struct:__anon18
flDiffusion	.\inc\openal\EFX-Util.h	/^	float flDiffusion;$/;"	m	struct:__anon1
flEchoDepth	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^	float flEchoDepth;$/;"	m	struct:__anon2
flEchoDepth	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^    float flEchoDepth;$/;"	m	struct:_EAXREVERBPROPERTIES
flEchoDepth	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	/^	float flEchoDepth;$/;"	m	struct:__anon18
flEchoDepth	.\inc\openal\EFX-Util.h	/^	float flEchoDepth;$/;"	m	struct:__anon1
flEchoDepth	.\inc\openal\EFX-Util.h	/^    float flEchoDepth;$/;"	m	struct:_EAXREVERBPROPERTIES
flEchoTime	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^	float flEchoTime;$/;"	m	struct:__anon2
flEchoTime	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^    float flEchoTime;$/;"	m	struct:_EAXREVERBPROPERTIES
flEchoTime	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	/^	float flEchoTime;$/;"	m	struct:__anon18
flEchoTime	.\inc\openal\EFX-Util.h	/^	float flEchoTime;$/;"	m	struct:__anon1
flEchoTime	.\inc\openal\EFX-Util.h	/^    float flEchoTime;$/;"	m	struct:_EAXREVERBPROPERTIES
flEnvironmentDiffusion	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^    float flEnvironmentDiffusion;$/;"	m	struct:_EAXREVERBPROPERTIES
flEnvironmentDiffusion	.\inc\openal\EFX-Util.h	/^    float flEnvironmentDiffusion;$/;"	m	struct:_EAXREVERBPROPERTIES
flEnvironmentSize	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^    float flEnvironmentSize;$/;"	m	struct:_EAXREVERBPROPERTIES
flEnvironmentSize	.\inc\openal\EFX-Util.h	/^    float flEnvironmentSize;$/;"	m	struct:_EAXREVERBPROPERTIES
flExclusionLFRatio	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^    float         flExclusionLFRatio;$/;"	m	struct:_EAXEXCLUSIONPROPERTIES
flExclusionLFRatio	.\inc\openal\EFX-Util.h	/^    float         flExclusionLFRatio;$/;"	m	struct:_EAXEXCLUSIONPROPERTIES
flGain	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^	float		flGain;$/;"	m	struct:_EFXLOWPASSFILTER
flGain	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^	float flGain;$/;"	m	struct:__anon2
flGain	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	/^	float flGain;$/;"	m	struct:__anon18
flGain	.\inc\openal\EFX-Util.h	/^	float		flGain;$/;"	m	struct:_EFXLOWPASSFILTER
flGain	.\inc\openal\EFX-Util.h	/^	float flGain;$/;"	m	struct:__anon1
flGainHF	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^	float		flGainHF;$/;"	m	struct:_EFXLOWPASSFILTER
flGainHF	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^	float flGainHF;$/;"	m	struct:__anon2
flGainHF	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	/^	float flGainHF;$/;"	m	struct:__anon18
flGainHF	.\inc\openal\EFX-Util.h	/^	float		flGainHF;$/;"	m	struct:_EFXLOWPASSFILTER
flGainHF	.\inc\openal\EFX-Util.h	/^	float flGainHF;$/;"	m	struct:__anon1
flGainLF	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^	float flGainLF;$/;"	m	struct:__anon2
flGainLF	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	/^	float flGainLF;$/;"	m	struct:__anon18
flGainLF	.\inc\openal\EFX-Util.h	/^	float flGainLF;$/;"	m	struct:__anon1
flHFReference	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^	float flHFReference;$/;"	m	struct:__anon2
flHFReference	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^    float flHFReference;$/;"	m	struct:_EAXREVERBPROPERTIES
flHFReference	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	/^	float flHFReference;$/;"	m	struct:__anon18
flHFReference	.\inc\openal\EFX-Util.h	/^	float flHFReference;$/;"	m	struct:__anon1
flHFReference	.\inc\openal\EFX-Util.h	/^    float flHFReference;$/;"	m	struct:_EAXREVERBPROPERTIES
flLFReference	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^	float flLFReference;$/;"	m	struct:__anon2
flLFReference	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^    float flLFReference;$/;"	m	struct:_EAXREVERBPROPERTIES
flLFReference	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	/^	float flLFReference;$/;"	m	struct:__anon18
flLFReference	.\inc\openal\EFX-Util.h	/^	float flLFReference;$/;"	m	struct:__anon1
flLFReference	.\inc\openal\EFX-Util.h	/^    float flLFReference;$/;"	m	struct:_EAXREVERBPROPERTIES
flLateReverbDelay	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^	float flLateReverbDelay;$/;"	m	struct:__anon2
flLateReverbDelay	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	/^	float flLateReverbDelay;$/;"	m	struct:__anon18
flLateReverbDelay	.\inc\openal\EFX-Util.h	/^	float flLateReverbDelay;$/;"	m	struct:__anon1
flLateReverbGain	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^	float flLateReverbGain;$/;"	m	struct:__anon2
flLateReverbGain	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	/^	float flLateReverbGain;$/;"	m	struct:__anon18
flLateReverbGain	.\inc\openal\EFX-Util.h	/^	float flLateReverbGain;$/;"	m	struct:__anon1
flLateReverbPan	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^	float flLateReverbPan[3];$/;"	m	struct:__anon2
flLateReverbPan	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	/^	float flLateReverbPan[3];$/;"	m	struct:__anon18
flLateReverbPan	.\inc\openal\EFX-Util.h	/^	float flLateReverbPan[3];$/;"	m	struct:__anon1
flModulationDepth	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^	float flModulationDepth;$/;"	m	struct:__anon2
flModulationDepth	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^    float flModulationDepth;$/;"	m	struct:_EAXREVERBPROPERTIES
flModulationDepth	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	/^	float flModulationDepth;$/;"	m	struct:__anon18
flModulationDepth	.\inc\openal\EFX-Util.h	/^	float flModulationDepth;$/;"	m	struct:__anon1
flModulationDepth	.\inc\openal\EFX-Util.h	/^    float flModulationDepth;$/;"	m	struct:_EAXREVERBPROPERTIES
flModulationTime	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^	float flModulationTime;$/;"	m	struct:__anon2
flModulationTime	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^    float flModulationTime;$/;"	m	struct:_EAXREVERBPROPERTIES
flModulationTime	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	/^	float flModulationTime;$/;"	m	struct:__anon18
flModulationTime	.\inc\openal\EFX-Util.h	/^	float flModulationTime;$/;"	m	struct:__anon1
flModulationTime	.\inc\openal\EFX-Util.h	/^    float flModulationTime;$/;"	m	struct:_EAXREVERBPROPERTIES
flObstructionLFRatio	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^    float         flObstructionLFRatio;$/;"	m	struct:_EAXOBSTRUCTIONPROPERTIES
flObstructionLFRatio	.\inc\openal\EFX-Util.h	/^    float         flObstructionLFRatio;$/;"	m	struct:_EAXOBSTRUCTIONPROPERTIES
flOcclusionDirectRatio	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^    float         flOcclusionDirectRatio;$/;"	m	struct:_EAXOCCLUSIONPROPERTIES
flOcclusionDirectRatio	.\inc\openal\EFX-Util.h	/^    float         flOcclusionDirectRatio;$/;"	m	struct:_EAXOCCLUSIONPROPERTIES
flOcclusionLFRatio	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^    float         flOcclusionLFRatio;$/;"	m	struct:_EAXOCCLUSIONPROPERTIES
flOcclusionLFRatio	.\inc\openal\EFX-Util.h	/^    float         flOcclusionLFRatio;$/;"	m	struct:_EAXOCCLUSIONPROPERTIES
flOcclusionRoomRatio	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^    float         flOcclusionRoomRatio;$/;"	m	struct:_EAXOCCLUSIONPROPERTIES
flOcclusionRoomRatio	.\inc\openal\EFX-Util.h	/^    float         flOcclusionRoomRatio;$/;"	m	struct:_EAXOCCLUSIONPROPERTIES
flReflectionsDelay	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^	float flReflectionsDelay;$/;"	m	struct:__anon2
flReflectionsDelay	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^    float flReflectionsDelay;$/;"	m	struct:_EAXREVERBPROPERTIES
flReflectionsDelay	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	/^	float flReflectionsDelay;$/;"	m	struct:__anon18
flReflectionsDelay	.\inc\openal\EFX-Util.h	/^	float flReflectionsDelay;$/;"	m	struct:__anon1
flReflectionsDelay	.\inc\openal\EFX-Util.h	/^    float flReflectionsDelay;$/;"	m	struct:_EAXREVERBPROPERTIES
flReflectionsGain	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^	float flReflectionsGain;$/;"	m	struct:__anon2
flReflectionsGain	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	/^	float flReflectionsGain;$/;"	m	struct:__anon18
flReflectionsGain	.\inc\openal\EFX-Util.h	/^	float flReflectionsGain;$/;"	m	struct:__anon1
flReflectionsPan	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^	float flReflectionsPan[3];$/;"	m	struct:__anon2
flReflectionsPan	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	/^	float flReflectionsPan[3];$/;"	m	struct:__anon18
flReflectionsPan	.\inc\openal\EFX-Util.h	/^	float flReflectionsPan[3];$/;"	m	struct:__anon1
flReverbDelay	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^    float flReverbDelay;$/;"	m	struct:_EAXREVERBPROPERTIES
flReverbDelay	.\inc\openal\EFX-Util.h	/^    float flReverbDelay;$/;"	m	struct:_EAXREVERBPROPERTIES
flRoomRolloffFactor	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^	float flRoomRolloffFactor;$/;"	m	struct:__anon2
flRoomRolloffFactor	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^    float flRoomRolloffFactor;$/;"	m	struct:_EAXREVERBPROPERTIES
flRoomRolloffFactor	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	/^	float flRoomRolloffFactor;$/;"	m	struct:__anon18
flRoomRolloffFactor	.\inc\openal\EFX-Util.h	/^	float flRoomRolloffFactor;$/;"	m	struct:__anon1
flRoomRolloffFactor	.\inc\openal\EFX-Util.h	/^    float flRoomRolloffFactor;$/;"	m	struct:_EAXREVERBPROPERTIES
floor_bits	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  long floor_bits;$/;"	m	struct:vorbis_block
floor_bits	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  ogg_int64_t floor_bits;$/;"	m	struct:vorbis_dsp_state
fn_ov_clear	.\OpenAL 1.1 SDK\samples\playoggvorbis\Source\PlayOggVorbis.cpp	/^LPOVCLEAR			fn_ov_clear = NULL;$/;"	v
fn_ov_comment	.\OpenAL 1.1 SDK\samples\playoggvorbis\Source\PlayOggVorbis.cpp	/^LPOVCOMMENT			fn_ov_comment = NULL;$/;"	v
fn_ov_info	.\OpenAL 1.1 SDK\samples\playoggvorbis\Source\PlayOggVorbis.cpp	/^LPOVINFO			fn_ov_info = NULL;$/;"	v
fn_ov_open_callbacks	.\OpenAL 1.1 SDK\samples\playoggvorbis\Source\PlayOggVorbis.cpp	/^LPOVOPENCALLBACKS	fn_ov_open_callbacks = NULL;$/;"	v
fn_ov_pcm_total	.\OpenAL 1.1 SDK\samples\playoggvorbis\Source\PlayOggVorbis.cpp	/^LPOVPCMTOTAL		fn_ov_pcm_total = NULL;$/;"	v
fn_ov_read	.\OpenAL 1.1 SDK\samples\playoggvorbis\Source\PlayOggVorbis.cpp	/^LPOVREAD			fn_ov_read = NULL;$/;"	v
fopen_s	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^int fopen_s( FILE** pFile, const char *filename, const char *mode )$/;"	f
fullPath	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^ALchar fullPath[_MAX_PATH];$/;"	v
g_WaveID	.\OpenAL 1.1 SDK\samples\renderer\Source\main.cpp	/^WAVEID g_WaveID = 0;$/;"	v
g_bALInit	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^ALboolean g_bALInit = AL_FALSE;$/;"	v
g_bPlayTestWaveFile	.\OpenAL 1.1 SDK\samples\renderer\Source\main.cpp	/^bool g_bPlayTestWaveFile = false;$/;"	v
g_bVorbisInit	.\OpenAL 1.1 SDK\samples\playoggvorbis\Source\PlayOggVorbis.cpp	/^bool g_bVorbisInit = false;$/;"	v
g_eFormat	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^ALenum g_eFormat = 0;$/;"	v
g_flEffectSends	.\OpenAL 1.1 SDK\samples\renderer\Source\main.cpp	/^float g_flEffectSends[4] = { 0.0f, 0.0f, 0.0f, 0.0f };$/;"	v
g_hOpenALDLL	.\OpenAL 1.1 SDK\samples\framework\Win32\LoadOAL.cpp	/^HINSTANCE g_hOpenALDLL = NULL;$/;"	v
g_hVorbisFileDLL	.\OpenAL 1.1 SDK\samples\playoggvorbis\Source\PlayOggVorbis.cpp	/^HINSTANCE g_hVorbisFileDLL = NULL;$/;"	v
g_pContext	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^ALCcontext *g_pContext = 0;$/;"	v
g_pData	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^ALchar *g_pData = 0;$/;"	v
g_pDevice	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^ALCdevice *g_pDevice = 0;$/;"	v
g_pWaveLoader	.\OpenAL 1.1 SDK\samples\framework\Win32\Framework.cpp	/^static CWaves *g_pWaveLoader = NULL;$/;"	v	file:
g_pWaveLoader	.\OpenAL 1.1 SDK\samples\renderer\Source\main.cpp	/^CWaves *g_pWaveLoader = NULL;$/;"	v
g_uiBuffers	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^ALuint g_uiBuffers[(MAX_NUM_EFFECT_SLOTS + 1) * NUM_STREAMING_BUFFERS] = { 0 };$/;"	v
g_uiEffectSlots	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^ALuint g_uiEffectSlots[MAX_NUM_EFFECT_SLOTS] = { 0 };$/;"	v
g_uiEffects	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^ALuint g_uiEffects[MAX_NUM_EFFECT_SLOTS] = { 0 };$/;"	v
g_uiFrequency	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^ALuint g_uiFrequency = 0;$/;"	v
g_uiMuted	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^ALuint g_uiMuted;$/;"	v
g_uiNumEffectSlots	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^ALuint g_uiNumEffectSlots = 0;$/;"	v
g_uiNumSamplesPerBuffer	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^ALuint g_uiNumSamplesPerBuffer = 0;$/;"	v
g_uiOutputChannels	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^ALuint g_uiOutputChannels = 0;$/;"	v
g_uiPlayCounter	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^ALuint g_uiPlayCounter = 0;$/;"	v
g_uiSources	.\OpenAL 1.1 SDK\samples\renderer\Source\ALOutput.cpp	/^ALuint g_uiSources[MAX_NUM_EFFECT_SLOTS + 1] = { 0 };$/;"	v
glue_bits	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  long glue_bits;$/;"	m	struct:vorbis_block
glue_bits	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  ogg_int64_t glue_bits;$/;"	m	struct:vorbis_dsp_state
granule_vals	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  ogg_int64_t *granule_vals; \/* granulepos values for headers. Not compact$/;"	m	struct:__anon14
granulepos	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  ogg_int64_t   granulepos;$/;"	m	struct:__anon14
granulepos	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  ogg_int64_t  granulepos;$/;"	m	struct:__anon15
granulepos	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  ogg_int64_t granulepos;$/;"	m	struct:vorbis_block
granulepos	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  ogg_int64_t granulepos;$/;"	m	struct:vorbis_dsp_state
guidSubFormat	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^    GUID            guidSubFormat;$/;"	m	struct:__anon7	file:
header	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  unsigned char    header[282];      \/* working space for header encode *\/$/;"	m	struct:__anon14
header	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  unsigned char *header;$/;"	m	struct:__anon13
header_fill	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  int              header_fill;$/;"	m	struct:__anon14
header_len	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  long header_len;$/;"	m	struct:__anon13
headerbytes	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  int headerbytes;$/;"	m	struct:__anon16
iDecayHFLimit	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^	int	iDecayHFLimit;$/;"	m	struct:__anon2
iDecayHFLimit	.\OpenAL 1.1 SDK\samples\renderer\Source\EFXPresets.h	/^	int	iDecayHFLimit;$/;"	m	struct:__anon18
iDecayHFLimit	.\inc\openal\EFX-Util.h	/^	int	iDecayHFLimit;$/;"	m	struct:__anon1
iMajorVersion	.\OpenAL 1.1 SDK\samples\framework\Win32\aldlist.h	/^	int				iMajorVersion;$/;"	m	struct:__anon4
iMinorVersion	.\OpenAL 1.1 SDK\samples\framework\Win32\aldlist.h	/^	int				iMinorVersion;$/;"	m	struct:__anon4
internal	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  void *internal;$/;"	m	struct:vorbis_block
is	.\fftw-dlls\32\include\fftw3.h	/^     int is;			\/* input stride *\/$/;"	m	struct:fftw_iodim_do_not_use_me
is	.\fftw-dlls\32\include\fftw3.h	/^     ptrdiff_t is;			\/* input stride *\/$/;"	m	struct:fftw_iodim64_do_not_use_me
is	.\fftw-dlls\64\include\fftw3.h	/^     int is;			\/* input stride *\/$/;"	m	struct:fftw_iodim_do_not_use_me
is	.\fftw-dlls\64\include\fftw3.h	/^     ptrdiff_t is;			\/* input stride *\/$/;"	m	struct:fftw_iodim64_do_not_use_me
is	.\inc\fftw\fftw3.h	/^     int is;			\/* input stride *\/$/;"	m	struct:fftw_iodim_do_not_use_me
is	.\inc\fftw\fftw3.h	/^     ptrdiff_t is;			\/* input stride *\/$/;"	m	struct:fftw_iodim64_do_not_use_me
lDataSize	.\OpenAL 1.1 SDK\samples\capture\Source\Capture.cpp	/^	long			lDataSize;$/;"	m	struct:__anon3	file:
lDataSize	.\src\mic\main.cpp	/^	long			lDataSize;$/;"	m	struct:__anon19	file:
lExclusion	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^    long          lExclusion;$/;"	m	struct:_EAXEXCLUSIONPROPERTIES
lExclusion	.\inc\openal\EFX-Util.h	/^    long          lExclusion;$/;"	m	struct:_EAXEXCLUSIONPROPERTIES
lFmtSize	.\OpenAL 1.1 SDK\samples\capture\Source\Capture.cpp	/^	long			lFmtSize;$/;"	m	struct:__anon3	file:
lFmtSize	.\src\mic\main.cpp	/^	long			lFmtSize;$/;"	m	struct:__anon19	file:
lObstruction	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^    long          lObstruction;$/;"	m	struct:_EAXOBSTRUCTIONPROPERTIES
lObstruction	.\inc\openal\EFX-Util.h	/^    long          lObstruction;$/;"	m	struct:_EAXOBSTRUCTIONPROPERTIES
lOcclusion	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^    long          lOcclusion;$/;"	m	struct:_EAXOCCLUSIONPROPERTIES
lOcclusion	.\inc\openal\EFX-Util.h	/^    long          lOcclusion;$/;"	m	struct:_EAXOCCLUSIONPROPERTIES
lRIFFSize	.\OpenAL 1.1 SDK\samples\capture\Source\Capture.cpp	/^	long			lRIFFSize;$/;"	m	struct:__anon3	file:
lRIFFSize	.\src\mic\main.cpp	/^	long			lRIFFSize;$/;"	m	struct:__anon19	file:
lReflections	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^    long lReflections;$/;"	m	struct:_EAXREVERBPROPERTIES
lReflections	.\inc\openal\EFX-Util.h	/^    long lReflections;$/;"	m	struct:_EAXREVERBPROPERTIES
lReverb	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^    long lReverb;$/;"	m	struct:_EAXREVERBPROPERTIES
lReverb	.\inc\openal\EFX-Util.h	/^    long lReverb;$/;"	m	struct:_EAXREVERBPROPERTIES
lRoom	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^    long lRoom;$/;"	m	struct:_EAXREVERBPROPERTIES
lRoom	.\inc\openal\EFX-Util.h	/^    long lRoom;$/;"	m	struct:_EAXREVERBPROPERTIES
lRoomHF	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^    long lRoomHF;$/;"	m	struct:_EAXREVERBPROPERTIES
lRoomHF	.\inc\openal\EFX-Util.h	/^    long lRoomHF;$/;"	m	struct:_EAXREVERBPROPERTIES
lRoomLF	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^    long lRoomLF;$/;"	m	struct:_EAXREVERBPROPERTIES
lRoomLF	.\inc\openal\EFX-Util.h	/^    long lRoomLF;$/;"	m	struct:_EAXREVERBPROPERTIES
lW	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  long  lW;$/;"	m	struct:vorbis_block
lW	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  long lW;$/;"	m	struct:vorbis_dsp_state
lacing_fill	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  long    lacing_fill;$/;"	m	struct:__anon14
lacing_packet	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  long    lacing_packet;$/;"	m	struct:__anon14
lacing_returned	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  long    lacing_returned;$/;"	m	struct:__anon14
lacing_storage	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  long    lacing_storage;$/;"	m	struct:__anon14
lacing_vals	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  int     *lacing_vals;      \/* The values that will go to the segment table *\/$/;"	m	struct:__anon14
links	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	/^  int              links;$/;"	m	struct:OggVorbis_File
localalloc	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  long                localalloc;$/;"	m	struct:vorbis_block
localstore	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  void               *localstore;$/;"	m	struct:vorbis_block
localtop	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  long                localtop;$/;"	m	struct:vorbis_block
m_WaveIDs	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^	LPWAVEFILEINFO	m_WaveIDs[MAX_NUM_WAVEID];$/;"	m	class:CWaves
main	.\OpenAL 1.1 SDK\samples\capture\Source\Capture.cpp	/^int main()$/;"	f
main	.\OpenAL 1.1 SDK\samples\efxenumerate\Source\EFXEnumerate.cpp	/^int main()$/;"	f
main	.\OpenAL 1.1 SDK\samples\efxfilter\Source\EFXFilter.cpp	/^int main(void)$/;"	f
main	.\OpenAL 1.1 SDK\samples\efxreverb\Source\EFXReverb.cpp	/^int main()$/;"	f
main	.\OpenAL 1.1 SDK\samples\enumerate\Source\enumerate.cpp	/^int main( void )$/;"	f
main	.\OpenAL 1.1 SDK\samples\playmultichannel\Source\PlayMultiChannel.cpp	/^int main()$/;"	f
main	.\OpenAL 1.1 SDK\samples\playoggvorbis\Source\PlayOggVorbis.cpp	/^int main()$/;"	f
main	.\OpenAL 1.1 SDK\samples\playstatic\Source\PlayStatic.cpp	/^int main()$/;"	f
main	.\OpenAL 1.1 SDK\samples\playstream\Source\PlayStream.cpp	/^int main()$/;"	f
main	.\OpenAL 1.1 SDK\samples\renderer\Source\main.cpp	/^void main()$/;"	f
main	.\OpenAL 1.1 SDK\samples\xramdemo\Source\XRAMDemo.cpp	/^int main()$/;"	f
main	.\src\mic\main.cpp	/^int main()$/;"	f
mode	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  int   mode;$/;"	m	struct:vorbis_block
n	.\fftw-dlls\32\include\fftw3.h	/^     int n;                     \/* dimension size *\/$/;"	m	struct:fftw_iodim_do_not_use_me
n	.\fftw-dlls\32\include\fftw3.h	/^     ptrdiff_t n;                     \/* dimension size *\/$/;"	m	struct:fftw_iodim64_do_not_use_me
n	.\fftw-dlls\64\include\fftw3.h	/^     int n;                     \/* dimension size *\/$/;"	m	struct:fftw_iodim_do_not_use_me
n	.\fftw-dlls\64\include\fftw3.h	/^     ptrdiff_t n;                     \/* dimension size *\/$/;"	m	struct:fftw_iodim64_do_not_use_me
n	.\inc\fftw\fftw3.h	/^     int n;                     \/* dimension size *\/$/;"	m	struct:fftw_iodim_do_not_use_me
n	.\inc\fftw\fftw3.h	/^     ptrdiff_t n;                     \/* dimension size *\/$/;"	m	struct:fftw_iodim64_do_not_use_me
nAvgBytesPerSec	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^    DWORD   nAvgBytesPerSec;$/;"	m	struct:tWAVEFORMATEX
nBlockAlign	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^    WORD    nBlockAlign;$/;"	m	struct:tWAVEFORMATEX
nChannels	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^    WORD    nChannels;$/;"	m	struct:tWAVEFORMATEX
nSamplesPerSec	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^    DWORD   nSamplesPerSec;$/;"	m	struct:tWAVEFORMATEX
nW	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  long  nW;$/;"	m	struct:vorbis_block
nW	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  long nW;$/;"	m	struct:vorbis_dsp_state
next	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  struct alloc_chain *next;$/;"	m	struct:alloc_chain	typeref:struct:alloc_chain::alloc_chain
offset	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	/^  ogg_int64_t      offset;$/;"	m	struct:OggVorbis_File
offsets	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	/^  ogg_int64_t     *offsets;$/;"	m	struct:OggVorbis_File
ogg_int16_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^     typedef _G_int16_t ogg_int16_t;$/;"	t
ogg_int16_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^     typedef __int16 ogg_int16_t;$/;"	t
ogg_int16_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^     typedef short ogg_int16_t;                                                                             $/;"	t
ogg_int16_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^     typedef short ogg_int16_t;$/;"	t
ogg_int16_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^   typedef SInt16 ogg_int16_t;$/;"	t
ogg_int16_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^   typedef int16_t ogg_int16_t;$/;"	t
ogg_int16_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^   typedef short ogg_int16_t;$/;"	t
ogg_int16_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^   typedef signed short ogg_int16_t;$/;"	t
ogg_int32_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^     typedef _G_int32_t ogg_int32_t;$/;"	t
ogg_int32_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^     typedef __int32 ogg_int32_t;$/;"	t
ogg_int32_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^     typedef int ogg_int32_t;                                                                               $/;"	t
ogg_int32_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^     typedef int ogg_int32_t;$/;"	t
ogg_int32_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^   typedef SInt32 ogg_int32_t;$/;"	t
ogg_int32_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^   typedef int ogg_int32_t;$/;"	t
ogg_int32_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^   typedef int32_t ogg_int32_t;$/;"	t
ogg_int32_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^   typedef signed int ogg_int32_t;$/;"	t
ogg_int64_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^     typedef _G_int64_t ogg_int64_t;$/;"	t
ogg_int64_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^     typedef __int64 ogg_int64_t;$/;"	t
ogg_int64_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^     typedef long long ogg_int64_t;                                                                         $/;"	t
ogg_int64_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^     typedef long long ogg_int64_t;$/;"	t
ogg_int64_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^   typedef SInt64 ogg_int64_t;$/;"	t
ogg_int64_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^   typedef int64_t ogg_int64_t;$/;"	t
ogg_int64_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^   typedef long long int ogg_int64_t;$/;"	t
ogg_int64_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^   typedef long long ogg_int64_t;$/;"	t
ogg_int64_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^   typedef long ogg_int64_t;$/;"	t
ogg_packet	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^} ogg_packet;$/;"	t	typeref:struct:__anon15
ogg_page	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^} ogg_page;$/;"	t	typeref:struct:__anon13
ogg_stream_state	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^} ogg_stream_state;$/;"	t	typeref:struct:__anon14
ogg_sync_state	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^} ogg_sync_state;$/;"	t	typeref:struct:__anon16
ogg_uint16_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^     typedef _G_uint16_t ogg_uint16_t;$/;"	t
ogg_uint16_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^     typedef unsigned __int16 ogg_uint16_t;$/;"	t
ogg_uint16_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^     typedef unsigned short ogg_uint16_t;                                                                   $/;"	t
ogg_uint16_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^     typedef unsigned short ogg_uint16_t;$/;"	t
ogg_uint16_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^   typedef UInt16 ogg_uint16_t;$/;"	t
ogg_uint16_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^   typedef u_int16_t ogg_uint16_t;$/;"	t
ogg_uint16_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^   typedef unsigned short ogg_uint16_t;$/;"	t
ogg_uint32_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^     typedef _G_uint32_t ogg_uint32_t;$/;"	t
ogg_uint32_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^     typedef unsigned __int32 ogg_uint32_t;$/;"	t
ogg_uint32_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^     typedef unsigned int ogg_uint32_t;                                                                     $/;"	t
ogg_uint32_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^     typedef unsigned int ogg_uint32_t;$/;"	t
ogg_uint32_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^   typedef UInt32 ogg_uint32_t;$/;"	t
ogg_uint32_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^   typedef u_int32_t ogg_uint32_t;$/;"	t
ogg_uint32_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^   typedef unsigned int ogg_uint32_t;$/;"	t
ogg_uint32_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^   typedef unsigned ogg_uint32_t;$/;"	t
ogg_uint64_t	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\os_types.h	/^     typedef unsigned long long ogg_uint64_t;  $/;"	t
oggpack_buffer	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^} oggpack_buffer;$/;"	t	typeref:struct:__anon12
opb	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  oggpack_buffer opb;$/;"	m	struct:vorbis_block
os	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	/^  ogg_stream_state os; \/* take physical pages, weld into a logical$/;"	m	struct:OggVorbis_File
os	.\fftw-dlls\32\include\fftw3.h	/^     int os;			\/* output stride *\/$/;"	m	struct:fftw_iodim_do_not_use_me
os	.\fftw-dlls\32\include\fftw3.h	/^     ptrdiff_t os;			\/* output stride *\/$/;"	m	struct:fftw_iodim64_do_not_use_me
os	.\fftw-dlls\64\include\fftw3.h	/^     int os;			\/* output stride *\/$/;"	m	struct:fftw_iodim_do_not_use_me
os	.\fftw-dlls\64\include\fftw3.h	/^     ptrdiff_t os;			\/* output stride *\/$/;"	m	struct:fftw_iodim64_do_not_use_me
os	.\inc\fftw\fftw3.h	/^     int os;			\/* output stride *\/$/;"	m	struct:fftw_iodim_do_not_use_me
os	.\inc\fftw\fftw3.h	/^     ptrdiff_t os;			\/* output stride *\/$/;"	m	struct:fftw_iodim64_do_not_use_me
ov_callbacks	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	/^} ov_callbacks;$/;"	t	typeref:struct:__anon17
ov_close_func	.\OpenAL 1.1 SDK\samples\playoggvorbis\Source\PlayOggVorbis.cpp	/^int ov_close_func(void *datasource)$/;"	f
ov_read_func	.\OpenAL 1.1 SDK\samples\playoggvorbis\Source\PlayOggVorbis.cpp	/^size_t ov_read_func(void *ptr, size_t size, size_t nmemb, void *datasource)$/;"	f
ov_seek_func	.\OpenAL 1.1 SDK\samples\playoggvorbis\Source\PlayOggVorbis.cpp	/^int ov_seek_func(void *datasource, ogg_int64_t offset, int whence)$/;"	f
ov_tell_func	.\OpenAL 1.1 SDK\samples\playoggvorbis\Source\PlayOggVorbis.cpp	/^long ov_tell_func(void *datasource)$/;"	f
oy	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	/^  ogg_sync_state   oy;$/;"	m	struct:OggVorbis_File
pData	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^	char			*pData;$/;"	m	struct:__anon10
pFile	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^	FILE			*pFile;$/;"	m	struct:__anon10
packet	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  unsigned char *packet;$/;"	m	struct:__anon15
packetno	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  ogg_int64_t  packetno;      \/* sequence number for decode; the framing$/;"	m	struct:__anon14
packetno	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  ogg_int64_t  packetno;     \/* sequence number for decode; the framing$/;"	m	struct:__anon15
pageno	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  long    pageno;$/;"	m	struct:__anon14
pcm	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  float  **pcm;       \/* this is a pointer into local storage *\/$/;"	m	struct:vorbis_block
pcm	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  float **pcm;$/;"	m	struct:vorbis_dsp_state
pcm_current	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  int      pcm_current;$/;"	m	struct:vorbis_dsp_state
pcm_offset	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	/^  ogg_int64_t      pcm_offset;$/;"	m	struct:OggVorbis_File
pcm_returned	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  int      pcm_returned;$/;"	m	struct:vorbis_dsp_state
pcm_storage	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  int      pcm_storage;$/;"	m	struct:vorbis_dsp_state
pcmend	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  int   pcmend;$/;"	m	struct:vorbis_block
pcmlengths	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	/^  ogg_int64_t     *pcmlengths; \/* overloaded to maintain binary$/;"	m	struct:OggVorbis_File
pcmret	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  float **pcmret;$/;"	m	struct:vorbis_dsp_state
playStaticWaveFile	.\OpenAL 1.1 SDK\samples\efxfilter\Source\EFXFilter.cpp	/^ALboolean playStaticWaveFile( const char *filename )$/;"	f
preextrapolate	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  int  preextrapolate;$/;"	m	struct:vorbis_dsp_state
ptr	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  unsigned char *ptr;$/;"	m	struct:__anon12
ptr	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  void *ptr;$/;"	m	struct:alloc_chain
pvstrExtensions	.\OpenAL 1.1 SDK\samples\framework\Win32\aldlist.h	/^	vector<string>	*pvstrExtensions;$/;"	m	struct:__anon4
rate	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  long rate;$/;"	m	struct:vorbis_info
read_func	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	/^  size_t (*read_func)  (void *ptr, size_t size, size_t nmemb, void *datasource);$/;"	m	struct:__anon17
ready_state	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	/^  int              ready_state;$/;"	m	struct:OggVorbis_File
reap	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  struct alloc_chain *reap;$/;"	m	struct:vorbis_block	typeref:struct:vorbis_block::alloc_chain
res_bits	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  long res_bits;$/;"	m	struct:vorbis_block
res_bits	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  ogg_int64_t res_bits;$/;"	m	struct:vorbis_dsp_state
returned	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  int returned;$/;"	m	struct:__anon16
samptrack	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	/^  double           samptrack;$/;"	m	struct:OggVorbis_File
seek_func	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	/^  int    (*seek_func)  (void *datasource, ogg_int64_t offset, int whence);$/;"	m	struct:__anon17
seekable	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	/^  int              seekable;$/;"	m	struct:OggVorbis_File
sequence	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  ogg_int64_t sequence;$/;"	m	struct:vorbis_block
sequence	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  ogg_int64_t sequence;$/;"	m	struct:vorbis_dsp_state
serialno	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  long    serialno;$/;"	m	struct:__anon14
serialnos	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	/^  long            *serialnos;$/;"	m	struct:OggVorbis_File
storage	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  int storage;$/;"	m	struct:__anon16
storage	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  long storage;$/;"	m	struct:__anon12
strDeviceName	.\OpenAL 1.1 SDK\samples\framework\Win32\aldlist.h	/^	string			strDeviceName;$/;"	m	struct:__anon4
strncpy_s	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^int strncpy_s( char *strDest, size_t numberOfElements, const char *strSource, size_t count )$/;"	f
szChunkName	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^	char			szChunkName[4];$/;"	m	struct:__anon6	file:
szData	.\OpenAL 1.1 SDK\samples\capture\Source\Capture.cpp	/^	char			szData[4];$/;"	m	struct:__anon3	file:
szData	.\src\mic\main.cpp	/^	char			szData[4];$/;"	m	struct:__anon19	file:
szFmt	.\OpenAL 1.1 SDK\samples\capture\Source\Capture.cpp	/^	char			szFmt[4];$/;"	m	struct:__anon3	file:
szFmt	.\src\mic\main.cpp	/^	char			szFmt[4];$/;"	m	struct:__anon19	file:
szRIFF	.\OpenAL 1.1 SDK\samples\capture\Source\Capture.cpp	/^	char			szRIFF[4];$/;"	m	struct:__anon3	file:
szRIFF	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^	char			szRIFF[4];$/;"	m	struct:__anon5	file:
szRIFF	.\src\mic\main.cpp	/^	char			szRIFF[4];$/;"	m	struct:__anon19	file:
szUnknown	.\OpenAL 1.1 SDK\samples\xramdemo\Source\XRAMDemo.cpp	/^const ALchar szUnknown[] = "UNKNOWN";$/;"	v
szWAVE	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^	char			szWAVE[4];$/;"	m	struct:__anon5	file:
szWave	.\OpenAL 1.1 SDK\samples\capture\Source\Capture.cpp	/^	char			szWave[4];$/;"	m	struct:__anon3	file:
szWave	.\src\mic\main.cpp	/^	char			szWave[4];$/;"	m	struct:__anon19	file:
szXRAMAccessible	.\OpenAL 1.1 SDK\samples\xramdemo\Source\XRAMDemo.cpp	/^const ALchar szXRAMAccessible[] = "AL_STORAGE_ACCESSIBLE";$/;"	v
szXRAMAuto	.\OpenAL 1.1 SDK\samples\xramdemo\Source\XRAMDemo.cpp	/^const ALchar szXRAMAuto[] = "AL_STORAGE_AUTOMATIC";$/;"	v
szXRAMHardware	.\OpenAL 1.1 SDK\samples\xramdemo\Source\XRAMDemo.cpp	/^const ALchar szXRAMHardware[] = "AL_STORAGE_HARDWARE";$/;"	v
tWAVEFORMATEX	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^typedef struct tWAVEFORMATEX$/;"	s
tell_func	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	/^  long   (*tell_func)  (void *datasource);$/;"	m	struct:__anon17
time_bits	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  long time_bits;$/;"	m	struct:vorbis_block
time_bits	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  ogg_int64_t time_bits;$/;"	m	struct:vorbis_dsp_state
totaluse	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  long                totaluse;$/;"	m	struct:vorbis_block
uiSourceCount	.\OpenAL 1.1 SDK\samples\framework\Win32\aldlist.h	/^	unsigned int	uiSourceCount;$/;"	m	struct:__anon4
ulAvgBytesPerSec	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^	unsigned long	ulAvgBytesPerSec;$/;"	m	struct:__anon7	file:
ulChannelMask	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^	unsigned long	ulChannelMask;$/;"	m	struct:__anon7	file:
ulChunkSize	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^	unsigned long	ulChunkSize;$/;"	m	struct:__anon6	file:
ulDataOffset	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^	unsigned long	ulDataOffset;$/;"	m	struct:__anon10
ulDataSize	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^	unsigned long	ulDataSize;$/;"	m	struct:__anon10
ulEnvironment	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^    unsigned long ulEnvironment;$/;"	m	struct:_EAXREVERBPROPERTIES
ulEnvironment	.\inc\openal\EFX-Util.h	/^    unsigned long ulEnvironment;$/;"	m	struct:_EAXREVERBPROPERTIES
ulFlags	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^    unsigned long ulFlags;$/;"	m	struct:_EAXREVERBPROPERTIES
ulFlags	.\inc\openal\EFX-Util.h	/^    unsigned long ulFlags;$/;"	m	struct:_EAXREVERBPROPERTIES
ulRIFFSize	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^	unsigned long	ulRIFFSize;$/;"	m	struct:__anon5	file:
ulSamplesPerSec	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^	unsigned long	ulSamplesPerSec;$/;"	m	struct:__anon7	file:
unit_test_failed	.\make.bat	/^:unit_test_failed$/;"	l
unsynced	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Ogg\ogg.h	/^  int unsynced;$/;"	m	struct:__anon16
usBitsPerSample	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^	unsigned short	usBitsPerSample;$/;"	m	struct:__anon7	file:
usBlockAlign	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^	unsigned short	usBlockAlign;$/;"	m	struct:__anon7	file:
usChannels	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^	unsigned short	usChannels;$/;"	m	struct:__anon7	file:
usFormatTag	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^	unsigned short	usFormatTag;$/;"	m	struct:__anon7	file:
usReserved	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^	unsigned short  usReserved;$/;"	m	struct:__anon7	file:
usSize	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^	unsigned short	usSize;$/;"	m	struct:__anon7	file:
user_comments	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  char **user_comments;$/;"	m	struct:vorbis_comment
vDeviceInfo	.\OpenAL 1.1 SDK\samples\framework\Win32\aldlist.h	/^	vector<ALDEVICEINFO> vDeviceInfo;$/;"	m	class:ALDeviceList
vReflectionsPan	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^    EAXVECTOR vReflectionsPan;$/;"	m	struct:_EAXREVERBPROPERTIES
vReflectionsPan	.\inc\openal\EFX-Util.h	/^    EAXVECTOR vReflectionsPan;$/;"	m	struct:_EAXREVERBPROPERTIES
vReverbPan	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^    EAXVECTOR vReverbPan;$/;"	m	struct:_EAXREVERBPROPERTIES
vReverbPan	.\inc\openal\EFX-Util.h	/^    EAXVECTOR vReverbPan;$/;"	m	struct:_EAXREVERBPROPERTIES
vb	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	/^  vorbis_block     vb; \/* local working space for packet->PCM decode *\/$/;"	m	struct:OggVorbis_File
vc	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	/^  vorbis_comment  *vc;$/;"	m	struct:OggVorbis_File
vd	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  vorbis_dsp_state *vd; \/* For read-only access of configuration *\/$/;"	m	struct:vorbis_block
vd	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	/^  vorbis_dsp_state vd; \/* central working state for the packet->PCM decoder *\/$/;"	m	struct:OggVorbis_File
vendor	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  char  *vendor;$/;"	m	struct:vorbis_comment
version	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  int version;$/;"	m	struct:vorbis_info
vi	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^  vorbis_info *vi;$/;"	m	struct:vorbis_dsp_state
vi	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\vorbisfile.h	/^  vorbis_info     *vi;$/;"	m	struct:OggVorbis_File
vorbis_block	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^typedef struct vorbis_block{$/;"	s
vorbis_block	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^} vorbis_block;$/;"	t	typeref:struct:vorbis_block
vorbis_comment	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^typedef struct vorbis_comment{$/;"	s
vorbis_comment	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^} vorbis_comment;$/;"	t	typeref:struct:vorbis_comment
vorbis_dsp_state	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^typedef struct vorbis_dsp_state{$/;"	s
vorbis_dsp_state	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^} vorbis_dsp_state;$/;"	t	typeref:struct:vorbis_dsp_state
vorbis_info	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^typedef struct vorbis_info{$/;"	s
vorbis_info	.\OpenAL 1.1 SDK\samples\playoggvorbis\include\Vorbis\codec.h	/^} vorbis_info;$/;"	t	typeref:struct:vorbis_info
wBitsPerSample	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^    WORD    wBitsPerSample;$/;"	m	struct:tWAVEFORMATEX
wFormatTag	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^    WORD    wFormatTag;$/;"	m	struct:tWAVEFORMATEX
wReserved	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^        WORD wReserved;                 \/* If neither applies, set to zero. *\/$/;"	m	union:__anon8::__anon9
wSamplesPerBlock	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^        WORD wSamplesPerBlock;          \/* valid if wBitsPerSample==0 *\/$/;"	m	union:__anon8::__anon9
wValidBitsPerSample	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^        WORD wValidBitsPerSample;       \/* bits of precision  *\/$/;"	m	union:__anon8::__anon9
wfEXT	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^	WAVEFORMATEXTENSIBLE wfEXT;		\/\/ For non-WAVEFORMATEXTENSIBLE wavefiles, the header is stored in the Format member of wfEXT$/;"	m	struct:__anon10
wfType	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.h	/^	WAVEFILETYPE	wfType;$/;"	m	struct:__anon10
wfex	.\OpenAL 1.1 SDK\samples\capture\Source\Capture.cpp	/^	WAVEFORMATEX	wfex;$/;"	m	struct:__anon3	file:
wfex	.\src\mic\main.cpp	/^	WAVEFORMATEX	wfex;$/;"	m	struct:__anon19	file:
x	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^	float x;$/;"	m	struct:_EAXVECTOR
x	.\inc\openal\EFX-Util.h	/^	float x;$/;"	m	struct:_EAXVECTOR
y	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^	float y;$/;"	m	struct:_EAXVECTOR
y	.\inc\openal\EFX-Util.h	/^	float y;$/;"	m	struct:_EAXVECTOR
z	.\OpenAL 1.1 SDK\include\EFX-Util.h	/^	float z;$/;"	m	struct:_EAXVECTOR
z	.\inc\openal\EFX-Util.h	/^	float z;$/;"	m	struct:_EAXVECTOR
~ALDeviceList	.\OpenAL 1.1 SDK\samples\framework\Win32\aldlist.cpp	/^ALDeviceList::~ALDeviceList()$/;"	f	class:ALDeviceList
~CWaves	.\OpenAL 1.1 SDK\samples\framework\Win32\CWaves.cpp	/^CWaves::~CWaves()$/;"	f	class:CWaves
